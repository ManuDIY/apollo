export const servicesMock = [
  {
    id: 1,
    name: 'sample-apollo-app',
    deploymentYaml:
      'apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  labels:\n    role: sample-apollo-app\n  name: sample-apollo-app\n  namespace: default\nspec:\n  replicas: 2\n  revisionHistoryLimit: 3\n  strategy:\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 0\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        role: sample-apollo-app\n    spec:\n      containers:\n      - image: registry.internal.logz.io:5000/sample-apollo-app\n        imagePullPolicy: Always\n        name: sample-apollo-app\n        ports:\n        - containerPort: 80\n          protocol: TCP\n        readinessProbe:\n          httpGet:\n            path: /\n            port: 80\n          initialDelaySeconds: 30\n          periodSeconds: 1\n      restartPolicy: Always\n      terminationGracePeriodSeconds: 5',
    serviceYaml:
      'apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    role: sample-apollo-app\n  name: sample-apollo-app-service\n  namespace: default\nspec:  \n  ports:\n  - nodePort: 30005\n    port: 80\n    protocol: TCP\n    targetPort: 80\n  selector:\n    role: sample-apollo-app\n  type: NodePort',
    ingressYaml: null,
    defaultShell: null,
    isPartOfGroup: false,
  },
  {
    id: 2,
    name: 'apollo',
    deploymentYaml:
      'apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  labels:\n    role: apollo\n    service: apollo\n  name: apollo\n  namespace: prod\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      role: apollo\n  strategy:\n    rollingUpdate:\n      maxSurge: 0\n      maxUnavailable: 1\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        role: apollo\n    spec:\n      containers:\n      - env:\n        - name: APOLLO_CONSUL_URL\n          value: consul.internal.logz.io:8500\n        - name: APOLLO_CONSUL_KEY\n          value: logzio-configurations/prod/us-east-1/apollo/apollo.conf\n        - name: LOGZIO_URL\n          value: https://listener.logz.io:8071\n        - name: LOGZIO_TOKEN\n          value: YZZXfOLKfTJEMGgKknWaKOpURnvALnRi\n        - name: APOLLO_LOGBACK_XML_PATH\n          value: /etc/apollo/apollo-logback.xml\n        - name: ENV\n          value: PROD\n        - name: REGION\n          value: us-east-1\n    spec:\n      containers:\n      - env:\n        - name: APOLLO_CONSUL_URL\n          value: consul.internal.logz.io:8500\n        - name: APOLLO_CONSUL_KEY\n          value: logzio-configurations/prod/us-east-1/apollo/apollo.conf\n        - name: LOGZIO_URL\n          value: https://listener.logz.io:8071\n        - name: LOGZIO_TOKEN\n          value: YZZXfOLKfTJEMGgKknWaKOpURnvALnRi\n        - name: APOLLO_LOGBACK_XML_PATH\n          value: /etc/apollo/apollo-logback.xml\n        - name: ENV\n          value: PROD\n        - name: REGION\n          value: us-east-1\n        image: logzio/apollo\n        imagePullPolicy: Always\n        livenessProbe:\n          failureThreshold: 3\n          httpGet:\n            path: /api/health\n            port: 80\n            scheme: HTTP\n          initialDelaySeconds: 45\n          periodSeconds: 5\n          successThreshold: 1\n          timeoutSeconds: 1\n        name: apollo\n        ports:\n        - containerPort: 80\n          protocol: TCP\n        readinessProbe:\n          failureThreshold: 3\n          httpGet:\n            path: /api/health\n            port: 80\n            scheme: HTTP\n          initialDelaySeconds: 45\n          periodSeconds: 5\n          successThreshold: 1\n          timeoutSeconds: 1\n        resources:\n          requests:\n            cpu: 100m\n            memory: 512Mi\n        volumeMounts:\n        - mountPath: /etc/apollo\n          name: config-volume\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      terminationGracePeriodSeconds: 5\n      volumes:\n      - configMap:\n          defaultMode: 420\n          name: apollo\n        name: config-volume',
    serviceYaml:
      'apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    role: apollo\n  name: apollo-service\nspec:  \n  ports:\n  - nodePort: 30001\n    port: 80\n    protocol: TCP\n    targetPort: 80\n  selector:\n    role: apollo\n  type: NodePort\n',
    ingressYaml: null,
    defaultShell: null,
    isPartOfGroup: false,
  },
  {
    id: 3,
    name: 'app-api',
    deploymentYaml:
      'apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata: \n  labels: \n    role: app\n  name: app\nspec: \n  replicas: 3\n  revisionHistoryLimit: 3\n  strategy: \n    rollingUpdate: \n      maxSurge: 1\n      maxUnavailable: 0\n    type: RollingUpdate\n  template: \n    metadata: \n      labels: \n        role: app\n    spec: \n      containers: \n        - name: app-node\n          image: "registry.internal.logz.io:5000/app-api"\n          imagePullPolicy: Always\n          ports: \n            - \n              containerPort: 9000\n              protocol: TCP\n          resources: \n            requests: \n              cpu: 100m\n              memory: 512Mi\n          volumeMounts: \n            - \n              mountPath: /work\n              name: app-frontend-storage\n        - name: app-nginx\n          command: \n            - sh\n            - "-c"\n            - "echo \'127.0.0.1 app\' >> /etc/hosts ; nginx -g \'daemon off;\'"\n          image: "registry.internal.logz.io:5000/frontend-nginx:1.11.1-v1"\n          imagePullPolicy: Always\n          livenessProbe: \n            httpGet: \n              path: /__admin__/utils/healthiness\n              port: 8080\n            initialDelaySeconds: 30\n            periodSeconds: 10\n            failureThreshold: 3\n          ports: \n            - \n              containerPort: 8080\n              protocol: TCP\n            - \n              containerPort: 80\n              protocol: TCP\n          readinessProbe: \n            httpGet: \n              path: /__admin__/utils/readiness\n              port: 8080\n            initialDelaySeconds: 30\n            periodSeconds: 1\n            failureThreshold: 1\n          resources: \n            requests: \n              cpu: 20m\n              memory: 64Mi\n          volumeMounts: \n            - \n              mountPath: /sites/app\n              name: app-frontend-storage\n      restartPolicy: Always\n      terminationGracePeriodSeconds: 0\n      volumes: \n        - \n          emptyDir: {}\n          name: app-frontend-storage',
    serviceYaml:
      'apiVersion: v1\nkind: Service\nmetadata: \n  labels: \n    role: app\n  name: app-service\n  {{ annotations }}\n    {{ internalLB }}\nspec: \n  ports: \n    - name: nginx\n      {{ nodePortNginx }}\n      port: 8080\n      targetPort: 8080\n    - name: nginxredirect\n      {{ nodePortNginxredirect }}\n      port: 80\n      targetPort: 80\n    - name: node\n      port: 9000\n      targetPort: 9000\n  selector: \n    role: app\n  type: {{ type }}',
    ingressYaml: null,
    defaultShell: '/bin/sh',
    isPartOfGroup: false,
  },
  {
    id: 6,
    name: 'servicesMock',
    deploymentYaml:
      'apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  labels:\n    role: servicesMock\n  name: servicesMock\nspec:\n  replicas: 2\n  revisionHistoryLimit: 3\n  strategy:\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 0\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        role: servicesMock\n        apollo_jolokia_port: 9990\n    spec:\n      containers:\n      - image: registry.internal.logz.io:5000/servicesMock\n        imagePullPolicy: Always\n        name: servicesMock\n        resources:\n          requests:\n            cpu: 150m\n            memory: 6144Mi\n        ports:\n        - containerPort: 8060\n          protocol: TCP\n        - containerPort: 9090\n          protocol: TCP\n        - containerPort: 9990\n          protocol: TCP\n        - containerPort: 5701\n          protocol: TCP\n        env:\n        - name: EC2_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        - name: OVERRIDE_MACHINE_MEMORY_MB\n          value: 8000\n        - name: KHOST\n          value: {{ kafka_servers }}\n        - name: GRAPHITE_SERVER\n          value: {{ graphite_host }}\n        - name: CONSUL\n          value: {{ consul_server }}\n        readinessProbe:\n          httpGet:\n            path: /system/ready\n            port: 9990\n          initialDelaySeconds: 180\n          periodSeconds: 20\n        livenessProbe:\n            httpGet:\n              path: /system/health\n              port: 9990\n            initialDelaySeconds: 180\n            periodSeconds: 20\n\n      - image: saltsecurity/agent:4.7.4\n        imagePullPolicy: Always\n        name: salt-agent\n        env:\n        - name: SALT_BACKEND_PORT\n          value: "30443"\n        - name: SALT_WS_DOMAIN\n          value: wss://salt-api-proxy.internal.logz.io:30444/api/agent/v1\n        - name: SALT_TOKEN\n          value: gjvvojevlmhbp2qyilzb3titqfuhmbmrerb8khlg03i51mnmm7827njsnpzbyi22\n        - name: SALT_DOMAIN\n          value: salt-api-proxy.internal.logz.io\n        - name: SALT_SSL\n          value: any\n        - name: SEND_LOGS_FLAG\n          value: "no"\n        - name: SALT_LOGS_URL\n          value: servicesMock.dnssf.com:3832\n        - name: SALT_EXTRA\n          value: {{ salt_extra }}',
    serviceYaml:
      'apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    role: servicesMock\n  name: servicesMock-service\nspec:\n  ports:\n  - nodePort: 30003\n    port: 8060\n    protocol: TCP\n    targetPort: 8060\n    name: servicesMock-legacy\n  - nodePort: 30004\n    port: 9990\n    protocol: TCP\n    targetPort: 9990\n    name: servicesMock-new\n  selector:\n    role: servicesMock\n  type: NodePort',
    ingressYaml:
      'apiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: servicesMock-{{ environment }}-{{ region }}-ingress\n  annotations:\n    kubernetes.io/ingress.class: "nginx"\nspec:\n  rules:\n  - host: servicesMock-camel-{{ environment }}-{{ region }}.internal.logz.io\n    http:\n      paths:\n      - backend:\n          serviceName: servicesMock-service\n          servicePort: 8060\n        path: /\n  - host: servicesMock-jersey-{{ environment }}-{{ region }}.internal.logz.io\n    http:\n      paths:\n      - backend:\n          serviceName: servicesMock-service\n          servicePort: 9990\n        path: /\n  - host: servicesMock-{{ environment }}-{{ region }}.internal.logz.io\n    http:\n      paths:\n      - backend:\n          serviceName: servicesMock-service\n          servicePort: 9990\n        path: /',
    defaultShell: null,
    isPartOfGroup: false,
  },
  {
    id: 7,
    name: 'tasks',
    deploymentYaml:
      'apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  labels:\n    role: tasks\n  name: tasks\nspec:\n  replicas: 1\n  revisionHistoryLimit: 3\n  strategy:\n    rollingUpdate:\n      maxSurge: 0\n      maxUnavailable: 1\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        role: tasks\n        apollo_jolokia_port: 9990\n    spec:\n      containers:\n      - image: registry.internal.logz.io:5000/tasks\n        imagePullPolicy: Always\n        name: tasks\n        resources:\n          requests:\n            cpu: 150m\n            memory: 8192Mi\n        ports:\n        - containerPort: 8778\n          name: jolokia\n          protocol: TCP\n        - containerPort: 9090\n          name: jmx\n          protocol: TCP\n        - containerPort: 9990\n          name: jersey\n          protocol: TCP\n        env:\n        - name: EC2_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        - name: OVERRIDE_MACHINE_MEMORY_MB\n          value: 16000\n        - name: KHOST\n          value: {{ kafka_servers }}\n        - name: GRAPHITE_SERVER\n          value: {{ graphite_host }}\n        - name: CONSUL\n          value: {{ consul_server }}\n        readinessProbe:\n          httpGet:\n            path: /system/ready\n            port: 9990\n          initialDelaySeconds: 180\n          periodSeconds: 30\n          timeoutSeconds: 5\n        livenessProbe:\n          httpGet:\n            path: /system/health\n            port: 9990\n          initialDelaySeconds: 180\n          periodSeconds: 30\n          timeoutSeconds: 5',
    serviceYaml:
      'apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    role: tasks\n  name: tasks-service\nspec:\n  ports:\n  - nodePort: 30006\n    port: 9990\n    protocol: TCP\n    targetPort: 9990\n    name: tasks\n  selector:\n    role: tasks\n  type: NodePort',
    ingressYaml:
      'apiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: tasks-{{ environment }}-{{ region }}-ingress\n  annotations:\n    kubernetes.io/ingress.class: "nginx"\nspec:\n  rules:\n  - host: tasks-{{ environment }}-{{ region }}.internal.logz.io\n    http:\n      paths:\n      - backend:\n          serviceName: tasks-service\n          servicePort: 9990\n        path: /\n',
    defaultShell: null,
    isPartOfGroup: false,
  },
  {
    id: 8,
    name: 'atlas-cluster',
    deploymentYaml:
      'apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  labels:\n    role: atlas\n  name: atlas\nspec:\n  replicas: 1\n  revisionHistoryLimit: 3\n  strategy:\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 0\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        role: atlas\n        apollo_jolokia_port: 9990\n    spec:\n      containers:\n      - name: atlas\n        image: registry.internal.logz.io:5000/atlas-engine\n        imagePullPolicy: Always\n        resources:\n          requests:\n            cpu: 50m\n            memory: 2048Mi\n        ports:\n        - containerPort: 8778\n          name: jolokia\n          protocol: TCP\n        - containerPort: 9090\n          name: jmx\n          protocol: TCP\n        - containerPort: 9990\n          name: jersey\n          protocol: TCP\n        env:\n        - name: ATLAS_ROLES\n          value: {{ atlas_roles }}\n        - name: EC2_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        - name: OVERRIDE_MACHINE_MEMORY_MB\n          value: 4000\n        - name: KHOST\n          value: {{ kafka_servers }}\n        - name: GRAPHITE_SERVER\n          value: {{ graphite_host }}\n        - name: CONSUL\n          value: {{ consul_server }}\n        readinessProbe:\n          httpGet:\n            path: /system/ready\n            port: 9990\n          initialDelaySeconds: 120\n          periodSeconds: 20\n        livenessProbe:\n          httpGet:\n            path: /system/health\n            port: 9990\n          initialDelaySeconds: 180\n          periodSeconds: 20\n      - name: selenium\n        image: registry.internal.logz.io:5000/selenium:3.4.0\n        imagePullPolicy: Always\n        ports:\n        - containerPort: 4444\n          name: selenium\n          protocol: TCP\n        readinessProbe:\n          httpGet:\n            path: /system/ready\n            port: 9990\n          initialDelaySeconds: 120\n          periodSeconds: 20\n        livenessProbe:\n          httpGet:\n            path: /system/health\n            port: 9990\n          initialDelaySeconds: 180\n          periodSeconds: 10',
    serviceYaml:
      'apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    role: atlas\n  name: atlas-service\nspec:\n  ports:\n  - nodePort: 30015\n    port: 9990\n    protocol: TCP\n    targetPort: 9990\n    name: atlas\n  selector:\n    role: atlas\n  type: NodePort',
    ingressYaml:
      'apiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: atlas-{{ environment }}-{{ region }}-ingress\n  annotations:\n    kubernetes.io/ingress.class: "nginx"\nspec:\n  rules:\n  - host: atlas-{{ environment }}-{{ region }}.internal.logz.io\n    http:\n      paths:\n      - backend:\n          serviceName: atlas-service\n          servicePort: 9990\n        path: /\n',
    defaultShell: null,
    isPartOfGroup: true,
  },
  {
    id: 9,
    name: 'logengine',
    deploymentYaml:
      'apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  labels:\n    role: logengine\n  name: logengine\nspec:\n  replicas: 1\n  revisionHistoryLimit: 3\n  strategy:\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 0\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        role: logengine\n        apollo_jolokia_port: 9990\n    spec:\n      nodeSelector:\n        {{az_label}} {{logengine_az}}    \n      containers:\n      - image: registry.internal.logz.io:5000/log-engine\n        imagePullPolicy: Always\n        name: logengine\n        resources:\n          requests:\n            cpu: 1000m\n            memory: 1536Mi\n        lifecycle:\n          preStop:\n            exec:\n              command: ["/bin/sh", "-c", "sleep 60;/root/graceful_stop.bash --sync"]\n        ports:\n        - containerPort: 4000\n          name: from-logstash\n        - containerPort: 4020\n          name: to-logstash\n        - containerPort: 8778\n          name: jolokia\n          protocol: TCP\n        - containerPort: 9090\n          name: jmx\n          protocol: TCP\n        - containerPort: 9990\n          name: jersey\n          protocol: TCP\n        env:\n        - name: EC2_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        - name: LOGENGINE_ROLES\n          value: {{ logengine_roles }}\n        - name: FETCH\n          value: "no_fetch"\n        - name: KAFKA_LE_TOPIC\n          value: {{ kafka_topic }}\n        - name: KAFKA_LE_GROUP\n          value: "indexing"\n        - name: KAFKA_REBALANCE_MAX_RETRIES\n          value: "15"\n        - name: KAFKA_REBALANCE_BACKOFF_MILLIS\n          value: "20000"\n        - name: OVERRIDE_MACHINE_MEMORY_MB\n          value: 3001\n        - name: KHOST\n          value: {{ kafka_servers }}\n        - name: GRAPHITE_SERVER\n          value: {{ graphite_host }}\n        - name: CONSUL\n          value: {{ consul_server }}\n        readinessProbe:\n          httpGet:\n            path: /system/ready\n            port: 9990\n          initialDelaySeconds: 10\n          periodSeconds: 30\n        livenessProbe:\n          httpGet:\n            path: /system/health\n            port: 9990\n          initialDelaySeconds: 10\n          periodSeconds: 30\n          failureThreshold: 6\n      terminationGracePeriodSeconds: 1800',
    serviceYaml: null,
    ingressYaml: null,
    defaultShell: null,
    isPartOfGroup: true,
  },
  {
    id: 12,
    name: 'tailer',
    deploymentYaml:
      'apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  labels:\n    role: log-tailer\n  name: log-tailer\nspec:\n  replicas: 1\n  revisionHistoryLimit: 3\n  strategy:\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 0\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        role: log-tailer\n        apollo_jolokia_port: 9990\n    spec:\n      containers:\n      - image: registry.internal.logz.io:5000/nginx-ssl-termination-livetail:180518-1\n        imagePullPolicy: Always\n        name: ssl-termination\n        resources:\n          requests:\n            cpu: 100m\n            memory: 512Mi\n        ports:\n        - containerPort: 443\n          name: websokect-ssl\n          protocol: TCP\n        readinessProbe:\n          httpGet:\n            scheme: HTTPS\n            path: /health\n            port: 443\n          initialDelaySeconds: 30\n          periodSeconds: 30\n      - image: registry.internal.logz.io:5000/log-tailer\n        imagePullPolicy: Always\n        name: log-tailer\n        resources:\n          requests:\n            cpu: 1\n            memory: 4096Mi\n        lifecycle:\n          preStop:\n            exec:\n              command: ["/root/graceful_stop.bash"]\n        ports:\n        - containerPort: 8888\n          name: websokect\n          protocol: TCP\n        - containerPort: 9990\n          name: jersey\n          protocol: TCP\n        env:\n        - name: EC2_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        - name: OVERRIDE_MACHINE_MEMORY_MB\n          value: 3000\n        - name: KHOST\n          value: {{ kafka_servers }}\n        - name: GRAPHITE_SERVER\n          value: {{ graphite_host }}\n        - name: CONSUL\n          value: {{ consul_server }}\n        readinessProbe:\n          httpGet:\n            path: /health\n            port: 8888\n          initialDelaySeconds: 60\n          periodSeconds: 20\n        livenessProbe:\n          httpGet:\n            path: /system/health\n            port: 9990\n          initialDelaySeconds: 60\n          periodSeconds: 20\n      terminationGracePeriodSeconds: 1800',
    serviceYaml:
      'apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    role: log-tailer-data\n  name: log-tailer-service\nspec:\n  ports:\n  - {{ nodePortHttps }}\n    port: 443\n    protocol: TCP\n    targetPort: 443\n    name: log-tailer-data\n  - {{ nodePortEngine }}\n    port: 9990\n    protocol: TCP\n    targetPort: 9990\n    name: log-tailer-api\n  selector:\n    role: log-tailer\n  type: {{ type }}',
    ingressYaml:
      'apiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: tailer-{{ environment }}-{{ region }}-ingress\n  annotations:\n    kubernetes.io/ingress.class: "nginx"\nspec:\n  rules:\n  - host: tailer-{{ environment }}-{{ region }}.internal.logz.io\n    http:\n      paths:\n      - backend:\n          serviceName: log-tailer-service\n          servicePort: 9990\n        path: /\n',
    defaultShell: null,
    isPartOfGroup: false,
  },
  {
    id: 13,
    name: 'scanner',
    deploymentYaml:
      'apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  labels:\n    role: scanner\n  name: scanner\nspec:\n  replicas: 1\n  revisionHistoryLimit: 3\n  strategy:\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 0\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        role: scanner\n        apollo_jolokia_port: 9990\n    spec:\n      containers:\n      - image: registry.internal.logz.io:5000/log-scanner\n        imagePullPolicy: Always\n        name: scanner\n        resources:\n          requests:\n            cpu: 2000m\n            memory: 3072Mi\n        ports:\n        - containerPort: 9990\n          name: rest\n          protocol: TCP\n        env:\n        - name: EC2_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        - name: KAFKA_SCANNER_TOPICS_LABEL_SELECTOR\n          value: {{ topics_label_selector }}\n        - name: KAFKA_SCANNER_GROUP\n          value: {{ kafka_group }}\n        - name: OVERRIDE_MACHINE_MEMORY_MB\n          value: 4096\n        - name: KHOST\n          value: {{ kafka_servers }}\n        - name: GRAPHITE_SERVER\n          value: {{ graphite_host }}\n        - name: CONSUL\n          value: {{ consul_server }}\n        readinessProbe:\n          httpGet:\n            path: /system/ready\n            port: 9990\n          initialDelaySeconds: 120\n          periodSeconds: 10\n        livenessProbe:\n          httpGet:\n            path: /system/health\n            port: 9990\n          initialDelaySeconds: 120\n          periodSeconds: 10\n      nodeSelector:\n        {{az_label}} {{availability_zone}}\n        {{scanners_enabled}}\n      tolerations:\n      - key: "dedicated"\n        value: "scanners"',
    serviceYaml: null,
    ingressYaml: null,
    defaultShell: null,
    isPartOfGroup: true,
  },
  {
    id: 14,
    name: 'templates-validator',
    deploymentYaml:
      'apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  labels:\n    role: templates-validator\n  name: templates-validator\nspec:\n  replicas: 1\n  revisionHistoryLimit: 3\n  strategy:\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 0\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        role: templates-validator\n        apollo_jolokia_port: 9990\n    spec:\n      containers:\n      - image: registry.internal.logz.io:5000/templates-validator\n        imagePullPolicy: Always\n        name: templates-validator\n        resources:\n          requests:\n            cpu: 20m\n            memory: 1536Mi\n        ports:\n        - containerPort: 8778\n          name: jolokia\n          protocol: TCP\n        - containerPort: 9090\n          name: jmx\n          protocol: TCP\n        - containerPort: 9990\n          name: jersey\n          protocol: TCP\n        env:\n        - name: EC2_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        - name: OVERRIDE_MACHINE_MEMORY_MB\n          value: 3000\n        - name: GRAPHITE_SERVER\n          value: {{ graphite_host }}\n        - name: CONSUL\n          value: {{ consul_server }}\n        readinessProbe:\n          httpGet:\n            path: /system/health\n            port: 9990\n          initialDelaySeconds: 60\n          periodSeconds: 20\n        livenessProbe:\n          httpGet:\n            path: /system/health\n            port: 9990\n          initialDelaySeconds: 60\n          periodSeconds: 20\n      - image: registry.internal.logz.io:5000/elasticsearch-openjdk:5.5.2-1\n        imagePullPolicy: Always\n        name: templates-validator-elasticsearch\n        ports:\n        - containerPort: 9200\n          name: esrest\n          protocol: TCP\n        - containerPort: 9300\n          name: estransport\n          protocol: TCP\n        env:\n        - name: ES_JAVA_OPTS\n          value: "-Xms768m -Xmx768m"\n        readinessProbe:\n          httpGet:\n            path: /_cluster/health\n            port: 9200\n          initialDelaySeconds: 60\n          periodSeconds: 20\n        livenessProbe:\n          httpGet:\n            path: /_cluster/health\n            port: 9200\n          initialDelaySeconds: 60\n          periodSeconds: 20',
    serviceYaml:
      'apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    role: templates-validator\n  name: templates-validator-service\nspec:\n  ports:\n  - nodePort: 30009\n    port: 9990\n    protocol: TCP\n    targetPort: 9990\n    name: templates-validator\n  selector:\n    role: templates-validator\n  type: NodePort',
    ingressYaml:
      'apiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: templates-validator-{{ environment }}-{{ region }}-ingress\n  annotations:\n    kubernetes.io/ingress.class: "nginx"\nspec:\n  rules:\n  - host: templates-validator-{{ environment }}-{{ region }}.internal.logz.io\n    http:\n      paths:\n      - backend:\n          serviceName: templates-validator-service\n          servicePort: 9990\n        path: /\n',
    defaultShell: null,
    isPartOfGroup: false,
  },
  {
    id: 15,
    name: 'insights-cms',
    deploymentYaml:
      'apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  labels:\n    role: insights-cms\n  name: insights-cms\nspec:\n  replicas: 1\n  revisionHistoryLimit: 3\n  strategy:\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 0\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        role: insights-cms\n    spec:\n      containers:\n      - image: registry.internal.logz.io:5000/insights-manager\n        imagePullPolicy: Always\n        name: insights-cms\n        resources:\n          requests:\n            cpu: 20m\n            memory: 1024Mi\n        ports:\n        - containerPort: 8080\n          name: web\n          protocol: TCP\n        env:\n        - name: KUBE_POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        - name: KHOST\n          value: {{ kafka_servers }}\n        - name: GRAPHITE_SERVER\n          value: {{ graphite_host }}\n        - name: CONSUL\n          value: {{ consul_server }}',
    serviceYaml:
      'apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    role: insights-cms\n  name: insights-cms-service\nspec:\n  ports:\n  - nodePort: 30010\n    port: 8080\n    protocol: TCP\n    targetPort: 8080\n    name: insights-cms\n  selector:\n    role: insights-cms\n  type: NodePort',
    ingressYaml:
      'apiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: insights-cms-{{ environment }}-{{ region }}-ingress\n  annotations:\n    kubernetes.io/ingress.class: "nginx"\nspec:\n  rules:\n  - host: insights-cms-{{ environment }}-{{ region }}.internal.logz.io\n    http:\n      paths:\n      - backend:\n          serviceName: insights-cms-service\n          servicePort: 8080\n        path: /\n',
    defaultShell: null,
    isPartOfGroup: false,
  },
  {
    id: 16,
    name: 'lag-monitor',
    deploymentYaml:
      'apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  labels:\n    role: lag-monitor\n  name: lag-monitor\nspec:\n  replicas: 1\n  revisionHistoryLimit: 3\n  strategy:\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 0\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        role: lag-monitor\n        apollo_jolokia_port: 9990\n    spec:\n      containers:\n      - image: registry.internal.logz.io:5000/lag-monitor\n        imagePullPolicy: Always\n        name: lag-monitor\n        resources:\n          requests:\n            cpu: 50m\n            memory: 1500Mi\n        ports:\n        - containerPort: 8778\n          name: jolokia\n          protocol: TCP\n        - containerPort: 9090\n          name: jmx\n          protocol: TCP\n        - containerPort: 9990\n          name: jersey\n          protocol: TCP\n        env:\n        - name: EC2_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        - name: OVERRIDE_MACHINE_MEMORY_MB\n          value: 3001\n        - name: KHOST\n          value: {{ kafka_servers }}\n        - name: GRAPHITE_SERVER\n          value: {{ graphite_host }}\n        - name: CONSUL\n          value: {{ consul_server }}\n        readinessProbe:\n          httpGet:\n            path: /system/ready\n            port: 9990\n          initialDelaySeconds: 60\n          periodSeconds: 20\n        livenessProbe:\n          httpGet:\n            path: /system/health\n            port: 9990\n          initialDelaySeconds: 60\n          periodSeconds: 20',
    serviceYaml:
      'apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    role: lag-monitor\n  name: lag-monitor-service\nspec:\n  ports:\n  - nodePort: 30012\n    port: 9990\n    protocol: TCP\n    targetPort: 9990\n    name: lag-monitor\n  selector:\n    role: lag-monitor\n  type: NodePort',
    ingressYaml:
      'apiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: lag-monitor-{{ environment }}-{{ region }}-ingress\n  annotations:\n    kubernetes.io/ingress.class: "nginx"\nspec:\n  rules:\n  - host: lag-monitor-{{ environment }}-{{ region }}.internal.logz.io\n    http:\n      paths:\n      - backend:\n          serviceName: lag-monitor-service\n          servicePort: 9990\n        path: /\n',
    defaultShell: null,
    isPartOfGroup: false,
  },
  {
    id: 18,
    name: 'matcher-staging',
    deploymentYaml:
      'apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  labels:\n    role: matcher\n  name: matcher\nspec:\n  replicas: 1\n  revisionHistoryLimit: 3\n  strategy:\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 0\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        role: matcher\n    spec:\n      containers:\n      - image: registry.internal.logz.io:5000/insights-matcher\n        imagePullPolicy: Always\n        name: matcher\n        resources:\n          requests:\n            cpu: 50m\n            memory: 1024Mi\n        ports:\n        - containerPort: 8778\n          name: jolokia\n          protocol: TCP\n        - containerPort: 9090\n          name: jmx\n          protocol: TCP\n        - containerPort: 9990\n          name: jersey\n          protocol: TCP\n        env:\n        - name: EC2_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        - name: KAFKA_MATCHER_TOPICS\n          value: "incoming-staging-1,incoming-staging-2"\n        - name: KAFKA_MATCHER_GROUP\n          value: "matcher-1"\n        - name: KAFKA_REBALANCE_MAX_RETRIES\n          value: "15"\n        - name: KAFKA_REBALANCE_BACKOFF_MILLIS\n          value: "20000"\n        readinessProbe:\n          httpGet:\n            path: /system/health\n            port: 9990\n          initialDelaySeconds: 60\n          periodSeconds: 60\n        livenessProbe:\n          httpGet:\n            path: /system/health\n            port: 9990\n          initialDelaySeconds: 60\n          periodSeconds: 1',
    serviceYaml: null,
    ingressYaml: null,
    defaultShell: null,
    isPartOfGroup: false,
  },
  {
    id: 19,
    name: 'app-no-limits',
    deploymentYaml:
      'apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  labels:\n    role: app\n  name: app\nspec:\n  replicas: 3\n  revisionHistoryLimit: 3\n  strategy:\n    rollingUpdate:\n      maxSurge: 2\n      maxUnavailable: 0\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        role: app\n    spec:\n      containers:\n      - image: registry.internal.logz.io:5000/app\n        resources:\n          requests:\n            cpu: 100m\n            memory: 512Mi\n        command: ["sh", "-c", "cp -a /sites/app/public /work ; node server/server.js"]\n        volumeMounts:\n        - name: app-frontend-storage\n          mountPath: /work\n        imagePullPolicy: Always\n        name: app-node\n        ports:\n        - containerPort: 9000\n          protocol: TCP\n      - image: "registry.internal.logz.io:5000/frontend-nginx:c757f0e3a8104c661f3a29f1df287702346c0816"\n        command: ["sh", "-c", "echo \'127.0.0.1 app\' >> /etc/hosts ; nginx -g \'daemon off;\'"]\n        imagePullPolicy: Always\n        volumeMounts:\n        - name: app-frontend-storage\n          mountPath: /sites/app\n        imagePullPolicy: Always\n        name: app-nginx\n        resources:\n          requests:\n            cpu: 20m\n            memory: 64Mi\n        ports:\n        - containerPort: 8080\n          protocol: TCP\n        - containerPort: 80\n          protocol: TCP\n        readinessProbe:\n          httpGet:\n            path: /admin/utils/health-check\n            port: 8080\n          initialDelaySeconds: 90\n          periodSeconds: 10\n        livenessProbe:\n            httpGet:\n              path: /admin/utils/health-check\n              port: 8080\n            initialDelaySeconds: 90\n            periodSeconds: 20\n      volumes:\n      - name: app-frontend-storage\n        emptyDir: {}\n      restartPolicy: Always\n      terminationGracePeriodSeconds: 60',
    serviceYaml:
      'apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    role: app\n  name: app-service\nspec:  \n  ports:\n  - nodePort: 30002\n    name: nginx\n    port: 8080\n    protocol: TCP\n    targetPort: 8080\n  - nodePort: 30011\n    name: nginxredirect\n    port: 80\n    protocol: TCP\n    targetPort: 80\n  selector:\n    role: app\n  type: NodePort',
    ingressYaml: null,
    defaultShell: null,
    isPartOfGroup: false,
  },
  {
    id: 20,
    name: 'snapshotter',
    deploymentYaml:
      'apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  labels:\n    role: snapshotter\n  name: snapshotter\nspec:\n  replicas: 1\n  revisionHistoryLimit: 3\n  strategy:\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 0\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        role: snapshotter\n        apollo_jolokia_port: 9990\n    spec:\n      volumes:                          \n      - name: dshm\n        emptyDir:\n          medium: Memory\n      containers:\n      - image: registry.internal.logz.io:5000/snapshotter\n        imagePullPolicy: Always\n        name: snapshotter\n        resources:\n          requests:\n            cpu: 20m\n            memory: 3072Mi\n        ports:\n        - containerPort: 8778\n          name: jolokia\n          protocol: TCP\n        - containerPort: 9090\n          name: jmx\n          protocol: TCP\n        - containerPort: 9990\n          name: jersey\n          protocol: TCP\n        env:\n        - name: EC2_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        - name: OVERRIDE_MACHINE_MEMORY_MB\n          value: 6000\n        - name: KHOST\n          value: {{ kafka_servers }}\n        - name: GRAPHITE_SERVER\n          value: {{ graphite_host }}\n        - name: CONSUL\n          value: {{ consul_server }}\n        readinessProbe:\n          httpGet:\n            path: /system/ready\n            port: 9990\n          initialDelaySeconds: 60\n          periodSeconds: 20\n        livenessProbe:\n          httpGet:\n            path: /system/health\n            port: 9990\n          initialDelaySeconds: 60\n          periodSeconds: 20\n      - image: registry.internal.logz.io:5000/selenium:3.12.0\n        imagePullPolicy: Always\n        name: snapshotter-selenium\n        ports:\n        - containerPort: 4444\n          name: selenium\n          protocol: TCP\n        volumeMounts:                 \n          - mountPath: /dev/shm\n            name: dshm\n        readinessProbe:\n          httpGet:\n            path: /system/ready\n            port: 9990\n          initialDelaySeconds: 60\n          periodSeconds: 20\n        livenessProbe:\n          httpGet:\n            path: /system/health\n            port: 9990\n          initialDelaySeconds: 60\n          periodSeconds: 20',
    serviceYaml:
      'apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    role: snapshotter\n  name: snapshotter-service\nspec:\n  ports:\n  - nodePort: 30013\n    port: 9990\n    protocol: TCP\n    targetPort: 9990\n    name: snapshotter\n  selector:\n    role: snapshotter\n  type: NodePort',
    ingressYaml:
      'apiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: snapshotter-{{ environment }}-{{ region }}-ingress\n  annotations:\n    kubernetes.io/ingress.class: "nginx"\nspec:\n  rules:\n  - host: snapshotter-{{ environment }}-{{ region }}.internal.logz.io\n    http:\n      paths:\n      - backend:\n          serviceName: snapshotter-service\n          servicePort: 9990\n        path: /\n',
    defaultShell: null,
    isPartOfGroup: false,
  },
  {
    id: 21,
    name: 'audit-indexer',
    deploymentYaml:
      'apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  labels:\n    role: audit-indexer\n  name: audit-indexer\nspec:\n  replicas: 1\n  revisionHistoryLimit: 3\n  strategy:\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 0\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        role: audit-indexer\n        apollo_jolokia_port: 9990\n    spec:\n      containers:\n      - image: registry.internal.logz.io:5000/audit-indexer\n        imagePullPolicy: Always\n        name: audit-indexer\n        resources:\n          requests:\n            cpu: 50m\n            memory: 1536Mi\n        ports:\n        - containerPort: 8778\n          name: jolokia\n          protocol: TCP\n        - containerPort: 9090\n          name: jmx\n          protocol: TCP\n        - containerPort: 9990\n          name: jersey\n          protocol: TCP\n        env:\n        - name: EC2_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        - name: OVERRIDE_MACHINE_MEMORY_MB\n          value: 3000\n        - name: KHOST\n          value: {{ kafka_servers }}\n        - name: GRAPHITE_SERVER\n          value: {{ graphite_host }}\n        - name: CONSUL\n          value: {{ consul_server }}\n        readinessProbe:\n          httpGet:\n            path: /system/ready\n            port: 9990\n          initialDelaySeconds: 60\n          periodSeconds: 20\n        livenessProbe:\n          httpGet:\n            path: /system/health\n            port: 9990\n          initialDelaySeconds: 180\n          periodSeconds: 20',
    serviceYaml:
      'apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    role: audit-indexer\n  name: audit-indexer-service\nspec:\n  ports:\n  - nodePort: 30014\n    port: 9990\n    protocol: TCP\n    targetPort: 9990\n    name: audit-indexer\n  selector:\n    role: audit-indexer\n  type: NodePort',
    ingressYaml:
      'apiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: audit-indexer-{{ environment }}-{{ region }}-ingress\n  annotations:\n    kubernetes.io/ingress.class: "nginx"\nspec:\n  rules:\n  - host: audit-indexer-{{ environment }}-{{ region }}.internal.logz.io\n    http:\n      paths:\n      - backend:\n          serviceName: audit-indexer-service\n          servicePort: 9990\n        path: /\n',
    defaultShell: null,
    isPartOfGroup: false,
  },
  {
    id: 22,
    name: 'auto-slow',
    deploymentYaml:
      'apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  labels:\n    role: auto-slow\n  name: auto-slow\nspec:\n  replicas: 1\n  revisionHistoryLimit: 3\n  strategy:\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 0\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        role: auto-slow\n        apollo_jolokia_port: 9990\n    spec:\n      containers:\n      - image: registry.internal.logz.io:5000/auto-slow\n        imagePullPolicy: Always\n        name: auto-slow\n        resources:\n          requests:\n            cpu: 20m\n            memory: 1024Mi\n        ports:\n        - containerPort: 8778\n          name: jolokia\n          protocol: TCP\n        - containerPort: 9090\n          name: jmx\n          protocol: TCP\n        - containerPort: 9990\n          name: jersey\n          protocol: TCP\n        env:\n        - name: EC2_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        - name: OVERRIDE_MACHINE_MEMORY_MB\n          value: 2000\n        - name: KHOST\n          value: {{ kafka_servers }}\n        - name: GRAPHITE_SERVER\n          value: {{ graphite_host }}\n        - name: CONSUL\n          value: {{ consul_server }}\n        readinessProbe:\n          httpGet:\n            path: /system/ready\n            port: 9990\n          initialDelaySeconds: 60\n          periodSeconds: 20\n        livenessProbe:\n          httpGet:\n            path: /system/health\n            port: 9990\n          initialDelaySeconds: 60\n          periodSeconds: 20',
    serviceYaml: null,
    ingressYaml: null,
    defaultShell: null,
    isPartOfGroup: false,
  },
  {
    id: 23,
    name: 'adjuster',
    deploymentYaml:
      'apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  labels:\n    role: log-adjuster\n  name: log-adjuster\nspec:\n  replicas: 1\n  revisionHistoryLimit: 3\n  strategy:\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 0\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        role: log-adjuster\n        apollo_jolokia_port: 9990\n    spec:\n      containers:\n      - image: registry.internal.logz.io:5000/log-adjuster\n        imagePullPolicy: Always\n        name: log-adjuster\n        resources:\n          requests:\n            cpu: 50m\n            memory: 1024Mi\n        ports:\n        - containerPort: 9990\n          name: jersey\n          protocol: TCP\n        env:\n        - name: EC2_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        - name: OVERRIDE_MACHINE_MEMORY_MB\n          value: 3000\n        - name: KHOST\n          value: {{ kafka_servers }}\n        - name: GRAPHITE_SERVER\n          value: {{ graphite_host }}\n        - name: CONSUL\n          value: {{ consul_server }}\n        readinessProbe:\n          httpGet:\n            path: /system/ready\n            port: 9990\n          initialDelaySeconds: 180\n          periodSeconds: 20\n        livenessProbe:\n          httpGet:\n            path: /system/health\n            port: 9990\n          initialDelaySeconds: 180\n          periodSeconds: 10',
    serviceYaml:
      'apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    role: log-adjuster\n  name: log-adjuster-service\nspec:\n  ports:\n  - nodePort: 30016 \n    port: 9990\n    protocol: TCP\n    targetPort: 9990\n  selector:\n    role: log-adjuster\n  type: NodePort\n',
    ingressYaml:
      'apiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: log-adjuster-{{ environment }}-{{ region }}-ingress\n  annotations:\n    kubernetes.io/ingress.class: "nginx"\nspec:\n  rules:\n  - host: log-adjuster-{{ environment }}-{{ region }}.internal.logz.io\n    http:\n      paths:\n      - backend:\n          serviceName: log-adjuster-service\n          servicePort: 9990\n        path: /\n',
    defaultShell: null,
    isPartOfGroup: false,
  },
  {
    id: 24,
    name: 'metrics-indexer',
    deploymentYaml:
      'apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata: \n  labels: \n    role: metrics-indexer\n  name: metrics-indexer\nspec: \n  replicas: 4\n  revisionHistoryLimit: 3\n  strategy: \n    rollingUpdate: \n      maxSurge: 20%\n      maxUnavailable: 0\n    type: RollingUpdate\n  template: \n    metadata: \n      labels: \n        apollo_jolokia_port: 9990\n        role: metrics-indexer\n    spec: \n      containers: \n        - \n          env: \n            - \n              name: EC2_NAME\n              valueFrom: \n                fieldRef: \n                  fieldPath: metadata.name\n            - \n              name: KUBE_POD_NAME\n              valueFrom: \n                fieldRef: \n                  fieldPath: metadata.name\n            - \n              name: KUBE_NAMESPACE\n              valueFrom: \n                fieldRef: \n                  fieldPath: metadata.namespace\n            - \n              name: OVERRIDE_MACHINE_MEMORY_MB\n              value: 3000\n            - \n              name: GROUP_NAME\n              value: {{ group_name }}\n            - \n              name: KHOST\n              value: {{ kafka_servers }}\n            - \n              name: GRAPHITE_SERVER\n              value: {{ graphite_host }}\n            - name: CONSUL\n          value: {{ consul_server }}\n          image: "registry.internal.logz.io:5000/metrics-indexer"\n          imagePullPolicy: Always\n          livenessProbe: \n            httpGet: \n              path: /system/health\n              port: 9990\n            initialDelaySeconds: 240\n            periodSeconds: 20\n          name: metrics-indexer\n          ports: \n            - \n              containerPort: 8778\n              name: jolokia\n              protocol: TCP\n            - \n              containerPort: 9090\n              name: jmx\n              protocol: TCP\n            - \n              containerPort: 9990\n              name: jersey\n              protocol: TCP\n          readinessProbe: \n            httpGet: \n              path: /system/ready\n              port: 9990\n            initialDelaySeconds: 240\n            periodSeconds: 20\n          resources: \n            requests: \n              cpu: 50m\n              memory: 2000Mi',
    serviceYaml:
      'apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    role: metrics-indexer\n  name: metrics-indexer-service\nspec:\n  ports:\n  - nodePort: 30017\n    port: 9990\n    protocol: TCP\n    targetPort: 9990\n    name: metrics-indexer\n  selector:\n    role: metrics-indexer\n  type: NodePort',
    ingressYaml: null,
    defaultShell: null,
    isPartOfGroup: true,
  },
  {
    id: 25,
    name: 'accounts-migrator',
    deploymentYaml:
      'apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  labels:\n    role: accounts-migrator\n  name: accounts-migrator\nspec:\n  replicas: 1\n  revisionHistoryLimit: 3\n  strategy:\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 0\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        role: accounts-migrator\n        apollo_jolokia_port: 9990\n    spec:\n      containers:\n      - image: registry.internal.logz.io:5000/accounts-migrator\n        imagePullPolicy: Always\n        name: accounts-migrator\n        resources:\n          requests:\n            cpu: 50m\n            memory: 750Mi\n        ports:\n        - containerPort: 8778\n          name: jolokia\n          protocol: TCP\n        - containerPort: 9090\n          name: jmx\n          protocol: TCP\n        - containerPort: 9990\n          name: jersey\n          protocol: TCP\n        env:\n        - name: EC2_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        - name: OVERRIDE_MACHINE_MEMORY_MB\n          value: 1500\n        - name: KHOST\n          value: {{ kafka_servers }}\n        - name: GRAPHITE_SERVER\n          value: {{ graphite_host }}\n        - name: CONSUL\n          value: {{ consul_server }}\n        readinessProbe:\n          httpGet:\n            path: /system/ready\n            port: 9990\n          initialDelaySeconds: 60\n          periodSeconds: 20\n        livenessProbe:\n          httpGet:\n            path: /system/health\n            port: 9990\n          initialDelaySeconds: 60\n          periodSeconds: 20',
    serviceYaml:
      'apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    role: accounts-migrator\n  name: accounts-migrator-service\nspec:\n  ports:\n  - nodePort: 30018\n    port: 9990\n    protocol: TCP\n    targetPort: 9990\n    name: accounts-migrator\n  selector:\n    role: accounts-migrator\n  type: NodePort',
    ingressYaml:
      'apiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: accounts-migrator-{{ environment }}-{{ region }}-ingress\n  annotations:\n    kubernetes.io/ingress.class: "nginx"\nspec:\n  rules:\n  - host: accounts-migrator-{{ environment }}-{{ region }}.internal.logz.io\n    http:\n      paths:\n      - backend:\n          serviceName: accounts-migrator-service\n          servicePort: 9990\n        path: /\n',
    defaultShell: null,
    isPartOfGroup: false,
  },
  {
    id: 26,
    name: 'configuration',
    deploymentYaml:
      'apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  labels:\n    role: configuration\n  name: configuration\nspec:\n  replicas: 1\n  revisionHistoryLimit: 3\n  strategy:\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 0\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        role: configuration\n        apollo_jolokia_port: 9990\n    spec:\n      containers:\n      - image: registry.internal.logz.io:5000/configuration-service\n        imagePullPolicy: Always\n        name: configuration\n        resources:\n          requests:\n            cpu: 50m\n            memory: 1500Mi\n        ports:\n        - containerPort: 8778\n          name: jolokia\n          protocol: TCP\n        - containerPort: 9090\n          name: jmx\n          protocol: TCP\n        - containerPort: 9990\n          name: jersey\n          protocol: TCP\n        env:\n        - name: EC2_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        - name: OVERRIDE_MACHINE_MEMORY_MB\n          value: 3001\n        - name: KHOST\n          value: {{ kafka_servers }}\n        - name: GRAPHITE_SERVER\n          value: {{ graphite_host }}\n        - name: CONSUL\n          value: {{ consul_server }}\n        readinessProbe:\n          httpGet:\n            path: /system/ready\n            port: 9990\n          initialDelaySeconds: 60\n          periodSeconds: 20\n        livenessProbe:\n          httpGet:\n            path: /system/health\n            port: 9990\n          initialDelaySeconds: 60\n          periodSeconds: 20',
    serviceYaml:
      'apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    role: configuration-service\n  name: configuration-service\nspec:\n  ports:\n  - nodePort: 30019\n    port: 9990\n    protocol: TCP\n    targetPort: 9990\n    name: configuration-service\n  selector:\n    role: configuration\n  type: NodePort',
    ingressYaml:
      'apiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: configuration-{{ environment }}-{{ region }}-ingress\n  annotations:\n    kubernetes.io/ingress.class: "nginx"\nspec:\n  rules:\n  - host: configuration-{{ environment }}-{{ region }}.internal.logz.io\n    http:\n      paths:\n      - backend:\n          serviceName: configuration-service\n          servicePort: 9990\n        path: /',
    defaultShell: null,
    isPartOfGroup: false,
  },
  {
    id: 27,
    name: 'insights-worker',
    deploymentYaml:
      'apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  labels:\n    role: insights-worker\n  name: insights-worker\nspec:\n  replicas: 1\n  revisionHistoryLimit: 3\n  strategy:\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 0\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        role: insights-worker\n        apollo_jolokia_port: 9990\n    spec:\n      containers:\n      - image: registry.internal.logz.io:5000/insights-worker\n        imagePullPolicy: Always\n        name: insights-worker\n        resources:\n          requests:\n            cpu: 50m\n            memory: 750Mi\n        ports:\n        - containerPort: 8778\n          name: jolokia\n          protocol: TCP\n        - containerPort: 9090\n          name: jmx\n          protocol: TCP\n        - containerPort: 9990\n          name: jersey\n          protocol: TCP\n        env:\n        - name: EC2_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        - name: OVERRIDE_MACHINE_MEMORY_MB\n          value: 1500\n        - name: KHOST\n          value: {{ kafka_servers }}\n        - name: GRAPHITE_SERVER\n          value: {{ graphite_host }}\n        - name: CONSUL\n          value: {{ consul_server }}\n        readinessProbe:\n          httpGet:\n            path: /system/ready\n            port: 9990\n          initialDelaySeconds: 90\n          periodSeconds: 20\n        livenessProbe:\n          httpGet:\n            path: /system/health\n            port: 9990\n          initialDelaySeconds: 90\n          periodSeconds: 20',
    serviceYaml: null,
    ingressYaml: null,
    defaultShell: null,
    isPartOfGroup: false,
  },
  {
    id: 28,
    name: 'insights',
    deploymentYaml:
      'apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  labels:\n    role: insights\n  name: insights\nspec:\n  replicas: 1\n  revisionHistoryLimit: 3\n  strategy:\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 0\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        role: insights\n        apollo_jolokia_port: 9990\n    spec:\n      containers:\n      - image: registry.internal.logz.io:5000/insights-service\n        imagePullPolicy: Always\n        name: insights\n        resources:\n          requests:\n            cpu: 50m\n            memory: 1500Mi\n        ports:\n        - containerPort: 8778\n          name: jolokia\n          protocol: TCP\n        - containerPort: 9090\n          name: jmx\n          protocol: TCP\n        - containerPort: 9990\n          name: jersey\n          protocol: TCP\n        env:\n        - name: EC2_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        - name: OVERRIDE_MACHINE_MEMORY_MB\n          value: 3001\n        - name: KHOST\n          value: {{ kafka_servers }}\n        - name: GRAPHITE_SERVER\n          value: {{ graphite_host }}\n        - name: CONSUL\n          value: {{ consul_server }}\n        readinessProbe:\n          httpGet:\n            path: /system/ready\n            port: 9990\n          initialDelaySeconds: 60\n          periodSeconds: 20\n        livenessProbe:\n          httpGet:\n            path: /system/health\n            port: 9990\n          initialDelaySeconds: 60\n          periodSeconds: 20',
    serviceYaml:
      'apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    role: insights-service\n  name: insights-service\nspec:\n  ports:\n  - nodePort: 30020\n    port: 9990\n    protocol: TCP\n    targetPort: 9990\n    name: insights-service\n  selector:\n    role: insights\n  type: NodePort',
    ingressYaml:
      'apiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: insights-{{ environment }}-{{ region }}-ingress\n  annotations:\n    kubernetes.io/ingress.class: "nginx"\nspec:\n  rules:\n  - host: insights-{{ environment }}-{{ region }}.internal.logz.io\n    http:\n      paths:\n      - backend:\n          serviceName: insights-service\n          servicePort: 9990\n        path: /\n',
    defaultShell: null,
    isPartOfGroup: false,
  },
  {
    id: 29,
    name: 'triggers',
    deploymentYaml:
      'apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  labels:\n    role: triggers\n  name: triggers\nspec:\n  replicas:  1\n  revisionHistoryLimit: 3\n  strategy:\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 0\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        role: triggers\n        apollo_jolokia_port: 9990\n    spec:\n      containers:\n      - image: registry.internal.logz.io:5000/triggers-service\n        imagePullPolicy: Always\n        name: triggers\n        resources:\n          requests:\n            cpu: 50m\n            memory: 3000Mi\n        ports:\n        - containerPort: 9990\n          name: jersey\n          protocol: TCP\n        env:\n        - name: EC2_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        - name: OVERRIDE_MACHINE_MEMORY_MB\n          value: 4096\n        - name: KHOST\n          value: {{ kafka_servers }}\n        - name: GRAPHITE_SERVER\n          value: {{ graphite_host }}\n        - name: CONSUL\n          value: {{ consul_server }}\n        readinessProbe:\n          httpGet:\n            path: /system/ready\n            port: 9990\n          initialDelaySeconds: 60\n          periodSeconds: 20\n        livenessProbe:\n          httpGet:\n            path: /system/health\n            port: 9990\n          initialDelaySeconds: 60\n          periodSeconds: 20',
    serviceYaml:
      'apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    role: triggers-service\n  name: triggers-service\nspec:\n  ports:\n  - nodePort: 30021\n    port: 9990\n    protocol: TCP\n    targetPort: 9990\n    name: triggers-service\n  selector:\n    role: triggers\n  type: NodePort',
    ingressYaml:
      'apiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: triggers-{{ environment }}-{{ region }}-ingress\n  annotations:\n    kubernetes.io/ingress.class: "nginx"\nspec:\n  rules:\n  - host: triggers-{{ environment }}-{{ region }}.internal.logz.io\n    http:\n      paths:\n      - backend:\n          serviceName: triggers-service\n          servicePort: 9990\n        path: /\n',
    defaultShell: null,
    isPartOfGroup: false,
  },
  {
    id: 34,
    name: 'latency-monitor',
    deploymentYaml:
      'apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  labels:\n    role: latency-monitor\n  name: latency-monitor\nspec:\n  replicas: 1\n  revisionHistoryLimit: 3\n  strategy:\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 0\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        role: latency-monitor\n        apollo_jolokia_port: 9990\n    spec:\n      containers:\n      - image: registry.internal.logz.io:5000/latency-monitor\n        imagePullPolicy: Always\n        name: latency-monitor\n        resources:\n          requests:\n            cpu: 50m\n            memory: 1500Mi\n        ports:\n        - containerPort: 8778\n          name: jolokia\n          protocol: TCP\n        - containerPort: 9090\n          name: jmx\n          protocol: TCP\n        - containerPort: 9990\n          name: jersey\n          protocol: TCP\n        env:\n        - name: EC2_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        - name: OVERRIDE_MACHINE_MEMORY_MB\n          value: 3001\n        - name: KHOST\n          value: {{ kafka_servers }}\n        - name: GRAPHITE_SERVER\n          value: {{ graphite_host }}\n        - name: CONSUL\n          value: {{ consul_server }}\n        readinessProbe:\n          httpGet:\n            path: /system/ready\n            port: 9990\n          initialDelaySeconds: 60\n          periodSeconds: 20\n        livenessProbe:\n          httpGet:\n            path: /system/health\n            port: 9990\n          initialDelaySeconds: 60\n          periodSeconds: 20',
    serviceYaml:
      'apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    role: latency-monitor\n  name: latency-monitor\nspec:\n  ports:\n  - nodePort: 30023\n    port: 9990\n    protocol: TCP\n    targetPort: 9990\n    name: latency-monitor\n  selector:\n    role: latency-monitor\n  type: NodePort',
    ingressYaml:
      'apiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: latency-monitor-{{ environment }}-{{ region }}-ingress\n  annotations:\n    kubernetes.io/ingress.class: "nginx"\nspec:\n  rules:\n  - host: latency-monitor-{{ environment }}-{{ region }}.internal.logz.io\n    http:\n      paths:\n      - backend:\n          serviceName: latency-monitor\n          servicePort: 9990\n        path: /\n',
    defaultShell: null,
    isPartOfGroup: false,
  },
  {
    id: 35,
    name: 'zipkin-server',
    deploymentYaml:
      'apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  labels:\n    role: zipkin-server\n  name: zipkin-server\nspec:\n  replicas: 1\n  revisionHistoryLimit: 3\n  strategy:\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 0\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        role: zipkin-server\n        apollo_jolokia_port: 9990\n    spec:\n      containers:\n      - image: registry.internal.logz.io:5000/logzio-zipkin:1.0.8\n        imagePullPolicy: Always\n        name: zipkin-server\n        resources:\n          requests:\n            cpu: 50m\n            memory: 1500Mi\n        ports:\n        - containerPort: 9411\n          name: zipkin\n          protocol: TCP\n        env:\n        - name: EC2_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        - name: OVERRIDE_MACHINE_MEMORY_MB\n          value: 3000\n          \n        readinessProbe:\n          httpGet:\n            path: /health\n            port: 9411\n          initialDelaySeconds: 120\n          periodSeconds: 60\n        livenessProbe:\n          httpGet:\n            path: /health\n            port: 9411\n          initialDelaySeconds: 120\n          periodSeconds: 20',
    serviceYaml:
      'apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    role: zipkin-server\n  name: zipkin-server\nspec:\n  ports:\n  - nodePort: 30022\n    port: 9411\n    protocol: TCP\n    targetPort: 9411\n    name: zipkin-server\n  selector:\n    role: zipkin-server\n  type: NodePort',
    ingressYaml:
      'apiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: zipkin-{{ environment }}-{{ region }}-ingress\n  annotations:\n    kubernetes.io/ingress.class: "nginx"\nspec:\n  rules:\n  - host: zipkin-{{ environment }}-{{ region }}.internal.logz.io\n    http:\n      paths:\n      - backend:\n          serviceName: zipkin-server\n          servicePort: 9411\n        path: /\n',
    defaultShell: null,
    isPartOfGroup: false,
  },
  {
    id: 38,
    name: 'archiver',
    deploymentYaml:
      'apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  labels:\n    role: archiver\n  name: archiver\nspec:\n  replicas: 1\n  revisionHistoryLimit: 3\n  strategy:\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 0\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        role: archiver\n        apollo_jolokia_port: 9990\n    spec:\n      containers:\n      - image: registry.internal.logz.io:5000/archiver\n        imagePullPolicy: Always\n        name: archiver\n        resources:\n          requests:\n            cpu: 100m\n            memory: 1024Mi\n        lifecycle:\n          preStop:\n            exec:\n              command: ["/root/graceful_stop.bash", "--sync"]\n        ports:\n        - containerPort: 4000\n          name: from-logstash\n        - containerPort: 4020\n          name: to-logstash\n        - containerPort: 8778\n          name: jolokia\n          protocol: TCP\n        - containerPort: 9090\n          name: jmx\n          protocol: TCP\n        - containerPort: 9990\n          name: jersey\n          protocol: TCP\n        env:\n        - name: EC2_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        - name: KAFKA_LE_ARCHIVE_TOPIC\n          value: {{ kafka_topic }}\n        - name: KAFKA_LE_ARCHIVE_GROUP\n          value: "archiving"\n        - name: BACKUP_READY_DIR\n          value: "\\\\/var\\\\/log\\\\/gaia\\\\/archiver\\\\/work\\\\/ready\\\\/"\n        - name: BACKUP_IN_PROGRESS_DIR\n          value: "\\\\/var\\\\/log\\\\/gaia\\\\/archiver\\\\/work\\\\/in-progress\\\\/"\n        readinessProbe:\n          httpGet:\n            path: /system/ready\n            port: 9990\n          initialDelaySeconds: 120\n          periodSeconds: 10\n        livenessProbe:\n          httpGet:\n            path: /system/health\n            port: 9990\n          initialDelaySeconds: 120\n          periodSeconds: 10',
    serviceYaml: null,
    ingressYaml: null,
    defaultShell: null,
    isPartOfGroup: true,
  },
  {
    id: 41,
    name: 'auto-scaler',
    deploymentYaml:
      'apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  labels:\n    role: auto-scaler\n  name: auto-scaler\nspec:\n  replicas: 1\n  revisionHistoryLimit: 3\n  strategy:\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 0\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        role: auto-scaler\n        apollo_jolokia_port: 9990\n    spec:\n      containers:\n      - image: registry.internal.logz.io:5000/auto-scaler\n        imagePullPolicy: Always\n        name: auto-scaler\n        resources:\n          requests:\n            cpu: 50m\n            memory: 1500Mi\n        ports:\n        - containerPort: 8778\n          name: jolokia\n          protocol: TCP\n        - containerPort: 9090\n          name: jmx\n          protocol: TCP\n        - containerPort: 9990\n          name: jersey\n          protocol: TCP\n        env:\n        - name: EC2_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        - name: OVERRIDE_MACHINE_MEMORY_MB\n          value: 3001\n        - name: KHOST\n          value: {{ kafka_servers }}\n        - name: GRAPHITE_SERVER\n          value: {{ graphite_host }}\n        - name: CONSUL\n          value: {{ consul_server }}\n        readinessProbe:\n          httpGet:\n            path: /system/ready\n            port: 9990\n          initialDelaySeconds: 60\n          periodSeconds: 20\n        livenessProbe:\n          httpGet:\n            path: /system/health\n            port: 9990\n          initialDelaySeconds: 60\n          periodSeconds: 20',
    serviceYaml:
      'apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    role: auto-scaler\n  name: auto-scaler-service\nspec:\n  ports:\n  - nodePort: 30024\n    port: 9990\n    protocol: TCP\n    targetPort: 9990\n    name: auto-scaler\n  selector:\n    role: auto-scaler\n  type: NodePort',
    ingressYaml:
      'apiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: auto-scaler-{{ environment }}-{{ region }}-ingress\n  annotations:\n    kubernetes.io/ingress.class: "nginx"\nspec:\n  rules:\n  - host: auto-scaler-{{ environment }}-{{ region }}.internal.logz.io\n    http:\n      paths:\n      - backend:\n          serviceName: auto-scaler-service\n          servicePort: 9990\n        path: /\n',
    defaultShell: null,
    isPartOfGroup: false,
  },
  {
    id: 44,
    name: 'business-analytics',
    deploymentYaml:
      'apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  labels:\n    role: business-analytics\n  name: business-analytics\nspec:\n  replicas: 1\n  revisionHistoryLimit: 3\n  strategy:\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 0\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        role: business-analytics\n        apollo_jolokia_port: 9990\n    spec:\n      containers:\n      - image: registry.internal.logz.io:5000/business-analytics\n        imagePullPolicy: Always\n        name: business-analytics\n        resources:\n          requests:\n            cpu: 50m\n            memory: 1500Mi\n        ports:\n        - containerPort: 8778\n          name: jolokia\n          protocol: TCP\n        - containerPort: 9090\n          name: jmx\n          protocol: TCP\n        - containerPort: 9990\n          name: jersey\n          protocol: TCP\n        env:\n        - name: EC2_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        - name: OVERRIDE_MACHINE_MEMORY_MB\n          value: 3001\n        - name: KHOST\n          value: {{ kafka_servers }}\n        - name: GRAPHITE_SERVER\n          value: {{ graphite_host }}\n        - name: CONSUL\n          value: {{ consul_server }}\n        readinessProbe:\n          httpGet:\n            path: /system/ready\n            port: 9990\n          initialDelaySeconds: 60\n          periodSeconds: 20\n        livenessProbe:\n          httpGet:\n            path: /system/health\n            port: 9990\n          initialDelaySeconds: 60\n          periodSeconds: 20',
    serviceYaml: null,
    ingressYaml: null,
    defaultShell: null,
    isPartOfGroup: false,
  },
  {
    id: 45,
    name: 'threats',
    deploymentYaml:
      'apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  labels:\n    role: threats\n  name: threats\nspec:\n  replicas: 1\n  revisionHistoryLimit: 3\n  strategy:\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 0\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        role: threats\n        apollo_jolokia_port: 9990\n    spec:\n      containers:\n      - image: registry.internal.logz.io:5000/threats\n        imagePullPolicy: Always\n        name: threats\n        resources:\n          requests:\n            cpu: 50m\n            memory: 1500Mi\n        ports:\n        - containerPort: 9990\n          name: jersey\n          protocol: TCP\n        env:\n        - name: EC2_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        - name: OVERRIDE_MACHINE_MEMORY_MB\n          value: 2048\n        - name: KHOST\n          value: {{ kafka_servers }}\n        - name: GRAPHITE_SERVER\n          value: {{ graphite_host }}\n        - name: CONSUL\n          value: {{ consul_server }}\n        readinessProbe:\n          httpGet:\n            path: /system/ready\n            port: 9990\n          initialDelaySeconds: 120\n          periodSeconds: 20\n        livenessProbe:\n          httpGet:\n            path: /system/health\n            port: 9990\n          initialDelaySeconds: 120\n          periodSeconds: 20',
    serviceYaml:
      'apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    role: threats\n  name: threats\nspec:\n  ports:\n  - nodePort: 30025\n    port: 9990\n    protocol: TCP\n    targetPort: 9990\n    name: threats\n  selector:\n    role: threats\n  type: NodePort',
    ingressYaml:
      'apiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: threats-{{ environment }}-{{ region }}-ingress\n  annotations:\n    kubernetes.io/ingress.class: "nginx"\nspec:\n  rules:\n  - host: threats-{{ environment }}-{{ region }}.internal.logz.io\n    http:\n      paths:\n      - backend:\n          serviceName: threats\n          servicePort: 9990\n        path: /',
    defaultShell: null,
    isPartOfGroup: false,
  },
  {
    id: 46,
    name: 'log-patterns-service',
    deploymentYaml:
      'apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  labels:\n    role: log-patterns-service\n  name: log-patterns-service\nspec:\n  replicas: 1\n  revisionHistoryLimit: 3\n  strategy:\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 0\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        role: log-patterns-service\n        apollo_jolokia_port: 9990\n    spec:\n      containers:\n      - image: registry.internal.logz.io:5000/log-patterns-service\n        imagePullPolicy: Always\n        name: log-patterns-service\n        resources:\n          requests:\n            cpu: 50m\n            memory: 1500Mi\n        ports:\n        - containerPort: 9990\n          name: jersey\n          protocol: TCP\n        env:\n        - name: EC2_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        - name: OVERRIDE_MACHINE_MEMORY_MB\n          value: 3000\n        - name: KHOST\n          value: {{ kafka_servers }}\n        - name: GRAPHITE_SERVER\n          value: {{ graphite_host }}\n        - name: CONSUL\n          value: {{ consul_server }}\n        readinessProbe:\n          httpGet:\n            path: /system/ready\n            port: 9990\n          initialDelaySeconds: 180\n          periodSeconds: 20\n        livenessProbe:\n          httpGet:\n            path: /system/health\n            port: 9990\n          initialDelaySeconds: 180\n          periodSeconds: 20',
    serviceYaml:
      'apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    role: log-patterns-service\n  name: log-patterns-service\nspec:\n  ports:\n  - nodePort: 30026\n    port: 9990\n    protocol: TCP\n    targetPort: 9990\n    name: log-patterns-service\n  selector:\n    role: log-patterns-service\n  type: NodePort',
    ingressYaml:
      'apiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: log-patterns-{{ environment }}-{{ region }}-ingress\n  annotations:\n    kubernetes.io/ingress.class: "nginx"\nspec:\n  rules:\n  - host: log-patterns-{{ environment }}-{{ region }}.internal.logz.io\n    http:\n      paths:\n      - backend:\n          serviceName: log-patterns-service\n          servicePort: 9990\n        path: /\n',
    defaultShell: null,
    isPartOfGroup: false,
  },
  {
    id: 47,
    name: 'pandora',
    deploymentYaml:
      'apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  labels:\n    role: pandora\n  name: pandora\nspec:\n  replicas: 1\n  revisionHistoryLimit: 3\n  strategy:\n    rollingUpdate:\n      maxSurge: 0\n      maxUnavailable: 1\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        role: pandora\n    spec:\n      containers:\n      - image: registry.internal.logz.io:5000/pandora\n        imagePullPolicy: Always\n        name: pandora\n        stdin: true\n        tty: true\n      restartPolicy: Always\n      terminationGracePeriodSeconds: 5',
    serviceYaml: null,
    ingressYaml: null,
    defaultShell: null,
    isPartOfGroup: false,
  },
  {
    id: 48,
    name: 'capacity-planner',
    deploymentYaml:
      'apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  labels:\n    role: capacity-planner\n  name: capacity-planner\nspec:\n  replicas: 1\n  revisionHistoryLimit: 3\n  strategy:\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 0\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        role: capacity-planner\n        apollo_jolokia_port: 9990\n    spec:\n      containers:\n      - image: registry.internal.logz.io:5000/capacity-planner\n        imagePullPolicy: Always\n        name: capacity-planner\n        resources:\n          requests:\n            cpu: 50m\n            memory: 1500Mi\n        ports:\n        - containerPort: 8778\n          name: jolokia\n          protocol: TCP\n        - containerPort: 9090\n          name: jmx\n          protocol: TCP\n        - containerPort: 9990\n          name: jersey\n          protocol: TCP\n        env:\n        - name: EC2_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        - name: OVERRIDE_MACHINE_MEMORY_MB\n          value: 3001\n        - name: CONSUL\n          value: {{ consul_server }}\n        - name: KHOST\n          value: {{ kafka_servers }}\n        - name: GRAPHITE_SERVER\n          value: {{ graphite_host }}\n        readinessProbe:\n          httpGet:\n            path: /system/ready\n            port: 9990\n          initialDelaySeconds: 60\n          periodSeconds: 20\n        livenessProbe:\n          httpGet:\n            path: /system/health\n            port: 9990\n          initialDelaySeconds: 60\n          periodSeconds: 20',
    serviceYaml:
      'apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    role: capacity-planner-service\n  name: capacity-planner-service\nspec:\n  ports:\n  - nodePort: 30027\n    port: 9990\n    protocol: TCP\n    targetPort: 9990\n    name: capacity-planner-service\n  selector:\n    role: capacity-planner\n  type: NodePort',
    ingressYaml:
      'apiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: capacity-planner-{{ environment }}-{{ region }}-ingress\n  annotations:\n    kubernetes.io/ingress.class: "nginx"\nspec:\n  rules:\n  - host: capacity-planner-{{ environment }}-{{ region }}.internal.logz.io\n    http:\n      paths:\n      - backend:\n          serviceName: capacity-planner-service\n          servicePort: 9990\n        path: /\n',
    defaultShell: null,
    isPartOfGroup: false,
  },
  {
    id: 49,
    name: 'slack-integration',
    deploymentYaml:
      'apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  labels:\n    role: slack-integration\n  name: slack-integration\nspec:\n  replicas: 1\n  strategy:\n    rollingUpdate:\n      maxSurge: 0\n      maxUnavailable: 1\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        role: slack-integration\n    spec:\n      containers:\n      - image: registry.internal.logz.io:5000/slack-integration\n        imagePullPolicy: Always\n        name: slack-integration\n        resources:\n          requests:\n            cpu: 100m\n            memory: 512Mi\n        ports:\n        - containerPort: 8080\n          protocol: TCP\n        env:\n        - name: CLIENT_ID\n          valueFrom:\n            secretKeyRef:\n              name: slack-integration-config\n              key: client_id\n        - name: CLIENT_SECRET\n          valueFrom:\n            secretKeyRef:\n              name: slack-integration-config\n              key: client_secret\n        - name: VERIFICATION_TOKEN\n          valueFrom:\n            secretKeyRef:\n              name: slack-integration-config\n              key: verification_token\n        - name: EXTERNAL_DOMAIN\n          valueFrom:\n            secretKeyRef:\n              name: slack-integration-config\n              key: external_domain\n        - name: MYSQL_USER\n          valueFrom:\n            secretKeyRef:\n              name: slack-integration-config\n              key: mysql_user\n        - name: MYSQL_PASSWORD\n          valueFrom:\n            secretKeyRef:\n              name: slack-integration-config\n              key: mysql_password\n        - name: MYSQL_DATABASE\n          valueFrom:\n            secretKeyRef:\n              name: slack-integration-config\n              key: mysql_database\n        - name: MYSQL_HOST\n          valueFrom:\n            secretKeyRef:\n              name: slack-integration-config\n              key: mysql_host\n        - name: LOGZIO_HOST\n          valueFrom:\n            secretKeyRef:\n              name: slack-integration-config\n              key: logzio_listener\n        - name: LOGZIO_TOKEN\n          valueFrom:\n            secretKeyRef:\n              name: slack-integration-config\n              key: logzio_token\n        readinessProbe:\n          httpGet:\n            path: /\n            port: 8080\n          initialDelaySeconds: 60\n          periodSeconds: 15\n        livenessProbe:\n            httpGet:\n              path: /\n              port: 8080\n            initialDelaySeconds: 60\n            periodSeconds: 15\n      restartPolicy: Always\n      terminationGracePeriodSeconds: 60\n',
    serviceYaml:
      'apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    role: slack-integration\n  name: slack-integration\nspec:  \n  ports:\n  - nodePort: 30028\n    port: 8080\n    protocol: TCP\n    targetPort: 8080\n  selector:\n    role: slack-integration\n  type: NodePort\n',
    ingressYaml: null,
    defaultShell: null,
    isPartOfGroup: false,
  },
  {
    id: 51,
    name: 'lookup-lists',
    deploymentYaml:
      'apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  labels:\n    role: lookup-lists\n  name: lookup-lists\nspec:\n  replicas: 1\n  revisionHistoryLimit: 3\n  strategy:\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 0\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        role: lookup-lists\n        apollo_jolokia_port: 9990\n    spec:\n      containers:\n      - image: registry.internal.logz.io:5000/lookup-lists\n        imagePullPolicy: Always\n        name: lookup-lists\n        resources:\n          requests:\n            cpu: 50m\n            memory: 1500Mi\n        ports:\n        - containerPort: 9990\n          name: jersey\n          protocol: TCP\n        env:\n        - name: EC2_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        - name: OVERRIDE_MACHINE_MEMORY_MB\n          value: 2048\n        - name: KHOST\n          value: {{ kafka_servers }}\n        - name: GRAPHITE_SERVER\n          value: {{ graphite_host }}\n        - name: CONSUL\n          value: {{ consul_server }}\n        readinessProbe:\n          httpGet:\n            path: /system/ready\n            port: 9990\n          initialDelaySeconds: 120\n          periodSeconds: 20\n        livenessProbe:\n          httpGet:\n            path: /system/health\n            port: 9990\n          initialDelaySeconds: 120\n          periodSeconds: 20',
    serviceYaml:
      'apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    role: lookup-lists\n  name: lookup-lists\nspec:\n  ports:\n  - nodePort: 30029\n    port: 9990\n    protocol: TCP\n    targetPort: 9990\n    name: lookup-lists\n  selector:\n    role: lookup-lists\n  type: NodePort',
    ingressYaml:
      'apiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: lookup-lists-{{ environment }}-{{ region }}-ingress\n  annotations:\n    kubernetes.io/ingress.class: "nginx"\nspec:\n  rules:\n  - host: lookup-lists-{{ environment }}-{{ region }}.internal.logz.io\n    http:\n      paths:\n      - backend:\n          serviceName: lookup-lists\n          servicePort: 9990\n        path: /\n',
    defaultShell: null,
    isPartOfGroup: false,
  },
  {
    id: 52,
    name: 'gatekeeper',
    deploymentYaml:
      'apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  labels:\n    role: gatekeeper\n  name: gatekeeper\nspec:\n  replicas: 2\n  revisionHistoryLimit: 3\n  strategy:\n    rollingUpdate:\n      maxSurge: 2\n      maxUnavailable: 0\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        role: gatekeeper\n        apollo_jolokia_port: 9990\n    spec:\n      containers:\n      - image: registry.internal.logz.io:5000/gatekeeper\n        imagePullPolicy: Always\n        name: gatekeeper\n        resources:\n          requests:\n            cpu: 50m\n            memory: 1500Mi\n        ports:\n        - containerPort: 9990\n          name: jersey\n          protocol: TCP\n        env:\n        - name: EC2_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        - name: OVERRIDE_MACHINE_MEMORY_MB\n          value: 2048\n        - name: KHOST\n          value: {{ kafka_servers }}\n        - name: GRAPHITE_SERVER\n          value: {{ graphite_host }}\n        - name: CONSUL\n          value: {{ consul_server }}\n        readinessProbe:\n          httpGet:\n            path: /system/ready\n            port: 9990\n          initialDelaySeconds: 60\n          periodSeconds: 10\n        livenessProbe:\n          httpGet:\n            path: /system/health\n            port: 9990\n          initialDelaySeconds: 60\n          periodSeconds: 10',
    serviceYaml:
      'apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    role: gatekeeper\n  name: gatekeeper\nspec:\n  ports:\n  - nodePort: 30030\n    port: 9990\n    protocol: TCP\n    targetPort: 9990\n    name: gatekeeper\n  selector:\n    role: gatekeeper\n  type: NodePort',
    ingressYaml:
      'apiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: gatekeeper-{{ environment }}-{{ region }}-ingress\n  annotations:\n    kubernetes.io/ingress.class: "nginx"\nspec:\n  rules:\n  - host: gatekeeper-{{ environment }}-{{ region }}.internal.logz.io\n    http:\n      paths:\n      - backend:\n          serviceName: gatekeeper\n          servicePort: 9990\n        path: /\n',
    defaultShell: null,
    isPartOfGroup: false,
  },
  {
    id: 53,
    name: 'accounts',
    deploymentYaml:
      'apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  labels:\n     role: accounts\n  name: accounts\nspec:\n  replicas: 2\n  revisionHistoryLimit: 3\n  strategy:\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 0\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        role: accounts\n        apollo_jolokia_port: 9990\n    spec:\n      containers:\n      - image: registry.internal.logz.io:5000/accounts\n        imagePullPolicy: Always\n        name: accounts\n        resources:\n          requests:\n            cpu: 50m\n            memory: 1500Mi\n        ports:\n        - containerPort: 9990\n          name: jersey\n          protocol: TCP\n        env:\n        - name: EC2_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        - name: OVERRIDE_MACHINE_MEMORY_MB\n          value: 2048\n        - name: KHOST\n          value: {{ kafka_servers }}\n        - name: GRAPHITE_SERVER\n          value: {{ graphite_host }}\n        - name: CONSUL\n          value: {{ consul_server }}\n        readinessProbe:\n          httpGet:\n            path: /system/ready\n            port: 9990\n          initialDelaySeconds: 120\n          periodSeconds: 10\n        livenessProbe:\n          httpGet:\n            path: /system/health\n            port: 9990\n          initialDelaySeconds: 120\n          periodSeconds: 10',
    serviceYaml:
      'apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    role: accounts\n  name: accounts\nspec:\n  ports:\n  - nodePort: 30031\n    port: 9990\n    protocol: TCP\n    targetPort: 9990\n    name: accounts\n  selector:\n    role: accounts\n  type: NodePort',
    ingressYaml:
      'apiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: accounts-{{ environment }}-{{ region }}-ingress\n  annotations:\n    kubernetes.io/ingress.class: "nginx"\nspec:\n  rules:\n  - host: accounts-{{ environment }}-{{ region }}.internal.logz.io\n    http:\n      paths:\n      - backend:\n          serviceName: accounts\n          servicePort: 9990\n        path: /\n',
    defaultShell: null,
    isPartOfGroup: false,
  },
  {
    id: 55,
    name: 'metrics-service',
    deploymentYaml:
      'apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  labels:\n    role: metrics-service\n  name: metrics-service\nspec:\n  replicas: 1\n  revisionHistoryLimit: 3\n  strategy:\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 0\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        role: metrics-service\n        apollo_jolokia_port: 9990\n    spec:\n      containers:\n      - image: registry.internal.logz.io:5000/metrics-service\n        imagePullPolicy: Always\n        name: metrics-service\n        resources:\n          requests:\n            cpu: 50m\n            memory: 1024Mi\n        ports:\n        - containerPort: 9990\n          name: jersey\n          protocol: TCP\n        env:\n        - name: EC2_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        - name: OVERRIDE_MACHINE_MEMORY_MB\n          value: 2048\n        - name: KHOST\n          value: {{ kafka_servers }}\n        - name: GRAPHITE_SERVER\n          value: {{ graphite_host }}\n        - name: CONSUL\n          value: {{ consul_server }}\n        readinessProbe:\n          httpGet:\n            path: /system/ready\n            port: 9990\n          initialDelaySeconds: 90\n          periodSeconds: 10\n        livenessProbe:\n          httpGet:\n            path: /system/health\n            port: 9990\n          initialDelaySeconds: 120\n          periodSeconds: 15',
    serviceYaml:
      'apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    role: metrics-service\n  name: metrics-service\nspec:\n  ports:\n  - nodePort: 30033\n    port: 9990\n    protocol: TCP\n    targetPort: 9990\n    name: metrics-service\n  selector:\n    role: metrics-service\n  type: NodePort',
    ingressYaml:
      'apiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: metrics-service-{{ environment }}-{{ region }}-ingress\n  annotations:\n    kubernetes.io/ingress.class: "nginx"\nspec:\n  rules:\n  - host: metrics-service-{{ environment }}-{{ region }}.internal.logz.io\n    http:\n      paths:\n      - backend:\n          serviceName: metrics-service\n          servicePort: 9990\n        path: /\n',
    defaultShell: null,
    isPartOfGroup: false,
  },
  {
    id: 57,
    name: 'rollup-service',
    deploymentYaml:
      'apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  labels:\n    role: rollup-service\n  name: rollup-service\nspec:\n  replicas: 5\n  revisionHistoryLimit: 3\n  strategy:\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 0\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        role: rollup-service\n        apollo_jolokia_port: 9990\n    spec:\n      containers:\n      - image: registry.internal.logz.io:5000/rollup-service\n        imagePullPolicy: Always\n        name: rollup-service\n        resources:\n          requests:\n            cpu: 50m\n            memory: 9000Mi\n        ports:\n        - containerPort: 9990\n          name: jersey\n          protocol: TCP\n        env:\n        - name: EC2_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        - name: OVERRIDE_MACHINE_MEMORY_MB\n          value: 16000\n        - name: KHOST\n          value: {{ kafka_servers }}\n        - name: GRAPHITE_SERVER\n          value: {{ graphite_host }}\n        - name: CONSUL\n          value: {{ consul_server }}\n        readinessProbe:\n          httpGet:\n            path: /system/ready\n            port: 9990\n          initialDelaySeconds: 120\n          periodSeconds: 10\n        livenessProbe:\n          httpGet:\n            path: /system/health\n            port: 9990\n          initialDelaySeconds: 120\n          periodSeconds: 10\n      nodeSelector:\n        {{rollup_enabled}}\n      tolerations:\n      - key: "dedicated"\n        value: "rollup"          ',
    serviceYaml:
      'apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    role: rollup-service\n  name: rollup-service\nspec:\n  ports:\n  - nodePort: 30035\n    port: 9990\n    protocol: TCP\n    targetPort: 9990\n    name: rollup-service\n  selector:\n    role: rollup-service\n  type: NodePort',
    ingressYaml:
      'apiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: rollup-{{ environment }}-{{ region }}-ingress\n  annotations:\n    kubernetes.io/ingress.class: "nginx"\nspec:\n  rules:\n  - host: rollup-{{ environment }}-{{ region }}.internal.logz.io\n    http:\n      paths:\n      - backend:\n          serviceName: rollup-service\n          servicePort: 9990\n        path: /\n',
    defaultShell: null,
    isPartOfGroup: false,
  },
  {
    id: 59,
    name: 'restorer',
    deploymentYaml:
      'apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  labels:\n    role: restorer\n  name: restorer\nspec:\n  replicas: 1\n  revisionHistoryLimit: 3\n  strategy:\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 0\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        role: restorer\n        apollo_jolokia_port: 9990\n    spec:\n      volumes:                          \n      - name: dshm\n        emptyDir:\n          medium: Memory\n      containers:\n      - image: registry.internal.logz.io:5000/restorer\n        imagePullPolicy: Always\n        name: restorer\n        resources:\n          requests:\n            cpu: 20m\n            memory: 3072Mi\n        ports:\n        - containerPort: 8778\n          name: jolokia\n          protocol: TCP\n        - containerPort: 9090\n          name: jmx\n          protocol: TCP\n        - containerPort: 9990\n          name: jersey\n          protocol: TCP\n        env:\n        - name: EC2_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        - name: OVERRIDE_MACHINE_MEMORY_MB\n          value: 6000\n        - name: KHOST\n          value: {{ kafka_servers }}\n        readinessProbe:\n          httpGet:\n            path: /system/ready\n            port: 9990\n          initialDelaySeconds: 90\n          periodSeconds: 30\n        livenessProbe:\n          httpGet:\n            path: /system/health\n            port: 9990\n          initialDelaySeconds: 90\n          periodSeconds: 30',
    serviceYaml:
      'apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    role: restorer\n  name: restorer-service\nspec:\n  ports:\n  - nodePort: 30036\n    port: 9990\n    protocol: TCP\n    targetPort: 9990\n    name: restorer\n  selector:\n    role: restorer\n  type: NodePort',
    ingressYaml:
      'apiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: restorer-{{ environment }}-{{ region }}-ingress\n  annotations:\n    kubernetes.io/ingress.class: "nginx"\nspec:\n  rules:\n  - host: restorer-{{ environment }}-{{ region }}.internal.logz.io\n    http:\n      paths:\n      - backend:\n          serviceName: restorer-service\n          servicePort: 9990\n        path: /',
    defaultShell: null,
    isPartOfGroup: false,
  },
  {
    id: 60,
    name: 'kibana-6',
    deploymentYaml:
      'apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata: \n  labels: \n    role: kibana-6\n  name: kibana-6\nspec: \n  replicas: 3\n  revisionHistoryLimit: 3\n  strategy: \n    rollingUpdate: \n      maxSurge: 1\n      maxUnavailable: 0\n    type: RollingUpdate\n  template: \n    metadata: \n      labels: \n        role: kibana-6\n    spec: \n      containers: \n        - \n          command: \n            - node\n            - src/cli\n          image: "registry.internal.logz.io:5000/kibana"\n          imagePullPolicy: Always\n          livenessProbe: \n            httpGet: \n              path: /api/logz/status/healthiness\n              port: 5601\n            initialDelaySeconds: 40\n            periodSeconds: 15\n            failureThreshold: 3\n          name: kibana-6-node\n          ports: \n            - \n              containerPort: 5601\n              protocol: TCP\n          readinessProbe: \n            httpGet: \n              path: /api/logz/status/readiness\n              port: 5601\n            initialDelaySeconds: 40\n            periodSeconds: 1\n            failureThreshold: 1\n          resources: \n            requests: \n              cpu: 100m\n              memory: 512Mi\n      restartPolicy: Always\n      terminationGracePeriodSeconds: 0',
    serviceYaml:
      'apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    role: kibana-6\n  name: kibana-6-service\nspec:  \n  ports:\n  - port: 5601\n    protocol: TCP\n    targetPort: 5601\n  selector:\n    role: kibana-6\n  type: NodePort',
    ingressYaml:
      'apiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: kibana-6-{{ environment }}-{{ region }}-ingress\n  annotations:\n    kubernetes.io/ingress.class: "nginx"\nspec:\n  rules:\n  - host: kibana-6-{{ environment }}-{{ region }}.internal.logz.io\n    http:\n      paths:\n      - backend:\n          serviceName: kibana-6-service\n          servicePort: 5601\n        path: /\n',
    defaultShell: '/bin/sh',
    isPartOfGroup: false,
  },
  {
    id: 61,
    name: 'grafana',
    deploymentYaml:
      'apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata: \n  labels: \n    role: grafana\n  name: grafana\nspec: \n  replicas: 1\n  revisionHistoryLimit: 3\n  strategy: \n    rollingUpdate: \n      maxSurge: 0\n      maxUnavailable: 2\n    type: RollingUpdate\n  template: \n    metadata: \n      labels: \n        role: grafana\n    spec: \n      containers: \n        - \n          command: \n            - /run.sh\n          image: "registry.internal.logz.io:5000/grafana"\n          imagePullPolicy: Always\n          name: grafana-node\n          ports: \n            - \n              containerPort: 3000\n              protocol: TCP\n          env:\n            - name: EC2_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.name\n            - name: KUBE_POD_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.name\n            - name: KUBE_NAMESPACE\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.namespace\n            - name: GF_SESSION_PROVIDER\n              value: {{ gf_session_provider }}\n            - name: GF_SESSION_PROVIDER_CONFIG\n              value: {{ gf_session_provider_config }}\n            - name: GF_DATABASE_URL\n              value: {{ gf_database_url }}\n            - name: GF_DATABASE_TYPE\n              value: {{ gf_database_type }}\n            - name: GF_DATABASE_HOST\n              value: {{ gf_database_host }}\n            - name: GF_DATABASE_NAME\n              value: {{ gf_database_name }}\n            - name: GF_DATABASE_USER\n              value: {{ gf_database_user }}\n            - name: GF_DATABASE_PASSWORD\n              value: {{ gf_database_password }}\n            - name: GF_SECURITY_ADMIN_ACCOUNT\n              value: {{ gf_security_admin_account }}\n            - name: GF_SECURITY_DATA_SOURCE_PROXY_WHITELIST\n              value: {{ gf_security_data_source_proxy_whitelist }}\n            - name: GF_USERS_DEFAULT_THEME\n              value: {{ gf_users_default_theme }}\n            - name: GF_USERS_ALLOW_SIGN_UP\n              value: {{ gf_users_allow_sign_up }}\n            - name: GF_AUTH_PROXY_AUTO_SIGN_UP\n              value: {{ gf_auth_proxy_auto_sign_up }}\n            - name: GF_ALERTING_ENABLED\n              value: {{ gf_alerting_enabled }}\n            - name: GF_ALERTING_EXECUTE_ALERTS\n              value: {{ gf_alerting_execute_alerts }}\n          resources: \n            requests: \n              cpu: 100m\n              memory: 512Mi\n      restartPolicy: Always\n      terminationGracePeriodSeconds: 0\n',
    serviceYaml:
      'apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    role: grafana\n  name: grafana-service\nspec:  \n  ports:\n  - nodePort: 30039\n    port: 3000\n    protocol: TCP\n    targetPort: 3000\n    name: grafana-service\n  selector:\n    role: grafana\n  type: NodePort',
    ingressYaml:
      'apiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: grafana-{{ environment }}-{{ region }}-ingress\n  annotations:\n    kubernetes.io/ingress.class: "nginx"\nspec:\n  rules:\n  - host: grafana-{{ environment }}-{{ region }}.internal.logz.io\n    http:\n      paths:\n      - backend:\n          serviceName: grafana-service\n          servicePort: 3000\n        path: /\n',
    defaultShell: null,
    isPartOfGroup: true,
  },
  {
    id: 63,
    name: 'grafana-sync',
    deploymentYaml:
      'apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  labels:\n    role: grafana-sync\n  name: grafana-sync\nspec:\n  replicas: 1\n  revisionHistoryLimit: 3\n  strategy:\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 0\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        role: grafana-sync\n        apollo_jolokia_port: 9990\n    spec:\n      containers:\n      - image: registry.internal.logz.io:5000/grafana-sync\n        imagePullPolicy: Always\n        name: grafana-sync\n        resources:\n          requests:\n            cpu: 50m\n            memory: 1024Mi\n        ports:\n        - containerPort: 9990\n          name: jersey\n          protocol: TCP\n        env:\n        - name: EC2_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        - name: OVERRIDE_MACHINE_MEMORY_MB\n          value: 2048\n        readinessProbe:\n          httpGet:\n            path: /system/ready\n            port: 9990\n          initialDelaySeconds: 60\n          periodSeconds: 10\n        livenessProbe:\n          httpGet:\n            path: /system/health\n            port: 9990\n          initialDelaySeconds: 60\n          periodSeconds: 10',
    serviceYaml:
      'apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    role: grafana-sync\n  name: grafana-sync\nspec:\n  ports:\n  - nodePort: 30037\n    port: 9990\n    protocol: TCP\n    targetPort: 9990\n    name: grafana-sync\n  selector:\n    role: grafana-sync\n  type: NodePort',
    ingressYaml:
      'apiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: grafana-sync-{{ environment }}-{{ region }}-ingress\n  annotations:\n    kubernetes.io/ingress.class: "nginx"\nspec:\n  rules:\n  - host: grafana-sync-{{ environment }}-{{ region }}.internal.logz.io\n    http:\n      paths:\n      - backend:\n          serviceName: grafana-sync\n          servicePort: 9990\n        path: /\n',
    defaultShell: null,
    isPartOfGroup: false,
  },
  {
    id: 64,
    name: 'demo-livetail-logs',
    deploymentYaml:
      'apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  labels:\n    role: demo-livetail-logs\n  name: demo-livetail-logs\nspec:\n  replicas: 1\n  revisionHistoryLimit: 3\n  strategy:\n    rollingUpdate:\n      maxSurge: 0\n      maxUnavailable: 1\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        role: demo-livetail-logs\n    spec:\n      containers:\n      - image: registry.internal.logz.io:5000/logzio-demo-livetail-logs:1.0.4\n        imagePullPolicy: Always\n        name: demo-livetail-logs\n        stdin: true\n        tty: true\n      restartPolicy: Always\n      terminationGracePeriodSeconds: 5',
    serviceYaml: null,
    ingressYaml: null,
    defaultShell: null,
    isPartOfGroup: false,
  },
  {
    id: 65,
    name: 'query-service',
    deploymentYaml:
      'apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  labels:\n    role: query-service\n  name: query-service\nspec:\n  replicas: 5\n  revisionHistoryLimit: 5\n  strategy:\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 0\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        role: query-service\n        apollo_jolokia_port: 9990\n    spec:\n      containers:\n      - image: registry.internal.logz.io:5000/query-service\n        imagePullPolicy: Always\n        name: query-service\n        resources:\n          requests:\n            cpu: 50m\n            memory: 3000Mi\n        ports:\n        - containerPort: 8778\n          name: jolokia\n          protocol: TCP\n        - containerPort: 9090\n          name: jmx\n          protocol: TCP\n        - containerPort: 9990\n          name: jersey\n          protocol: TCP\n        env:\n        - name: EC2_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        - name: OVERRIDE_MACHINE_MEMORY_MB\n          value: 6192\n        - name: KHOST\n          value: {{ kafka_servers }}\n        - name: GRAPHITE_SERVER\n          value: {{ graphite_host }}\n        - name: CONSUL\n          value: {{ consul_server }}\n        readinessProbe:\n          httpGet:\n            path: /system/ready\n            port: 9990\n          initialDelaySeconds: 180\n          periodSeconds: 20\n        livenessProbe:\n          httpGet:\n            path: /system/health\n            port: 9990\n          initialDelaySeconds: 180\n          periodSeconds: 20',
    serviceYaml:
      'apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    role: query-service\n  name: query-service\nspec:\n  ports:\n  - nodePort: 30040\n    port: 9990\n    protocol: TCP\n    targetPort: 9990\n    name: query-service\n  selector:\n    role: query-service\n  type: NodePort',
    ingressYaml:
      'apiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: query-service-{{ environment }}-{{ region }}-ingress\n  annotations:\n    kubernetes.io/ingress.class: "nginx"\nspec:\n  rules:\n  - host: query-service-{{ environment }}-{{ region }}.internal.logz.io\n    http:\n      paths:\n      - backend:\n          serviceName: query-service\n          servicePort: 9990\n        path: /\n',
    defaultShell: null,
    isPartOfGroup: false,
  },
  {
    id: 69,
    name: 'stacktrace-js',
    deploymentYaml:
      'apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata: \n  labels: \n    role: stacktrace-js\n  name: stacktrace-js\nspec: \n  replicas: 2\n  revisionHistoryLimit: 3\n  strategy: \n    rollingUpdate: \n      maxSurge: 1\n      maxUnavailable: 0\n    type: RollingUpdate\n  template: \n    metadata: \n      labels: \n        role: stacktrace-js\n    spec: \n      containers: \n        - \n          command: \n            - node\n            - index\n          image: "registry.internal.logz.io:5000/stacktrace-js"\n          imagePullPolicy: Always\n          name: stacktrace-js-node\n          ports: \n            - \n              containerPort: 5588\n              protocol: TCP\n          resources: \n            requests: \n              cpu: 100m\n              memory: 512Mi\n      restartPolicy: Always\n      terminationGracePeriodSeconds: 0',
    serviceYaml:
      'apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    role: stacktrace-js\n  name: stacktrace-js-service\nspec:  \n  ports:\n  - port: 5588\n    protocol: TCP\n    targetPort: 5588\n  selector:\n    role: stacktrace-js\n  type: NodePort',
    ingressYaml: null,
    defaultShell: null,
    isPartOfGroup: false,
  },
  {
    id: 70,
    name: 'metrics-ingester',
    deploymentYaml:
      'apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata: \n  labels: \n    role: metrics-ingester\n  name: metrics-ingester\nspec: \n  replicas: 1\n  revisionHistoryLimit: 3\n  strategy: \n    rollingUpdate: \n      maxSurge: 20%\n      maxUnavailable: 0\n    type: RollingUpdate\n  template: \n    metadata: \n      labels: \n        apollo_jolokia_port: 9990\n        role: metrics-ingester\n    spec: \n      nodeSelector:\n        {{az_label}} {{metrics_ingester_az}}  \n      containers: \n        - env: \n            - name: EC2_NAME\n              valueFrom: \n                fieldRef: \n                  fieldPath: metadata.name\n            - name: KUBE_POD_NAME\n              valueFrom: \n                fieldRef: \n                  fieldPath: metadata.name\n            - name: KUBE_NAMESPACE\n              valueFrom: \n                fieldRef: \n                  fieldPath: metadata.namespace\n            - name: OVERRIDE_MACHINE_MEMORY_MB\n              value: 3000\n            - name: KAFKA_TOPIC\n              value: {{ kafka_topic }}\n            - name: KAFKA_GROUP\n              value: {{ kafka_group }}\n            - name: KHOST\n              value: {{ kafka_servers }}\n            - name: GRAPHITE_SERVER\n              value: {{ graphite_host }}\n            - name: CONSUL\n          value: {{ consul_server }}\n          image: "registry.internal.logz.io:5000/metrics-ingester"\n          imagePullPolicy: Always\n          livenessProbe: \n            httpGet: \n              path: /system/health\n              port: 9990\n            initialDelaySeconds: 90\n            periodSeconds: 20\n          name: metrics-ingester\n          ports: \n            - \n              containerPort: 8778\n              name: jolokia\n              protocol: TCP\n            - \n              containerPort: 9090\n              name: jmx\n              protocol: TCP\n            - \n              containerPort: 9990\n              name: jersey\n              protocol: TCP\n          readinessProbe: \n            httpGet: \n              path: /system/ready\n              port: 9990\n            initialDelaySeconds: 90\n            periodSeconds: 20\n          resources: \n            requests: \n              cpu: 50m\n              memory: 2000Mi',
    serviceYaml: null,
    ingressYaml: null,
    defaultShell: null,
    isPartOfGroup: true,
  },
  {
    id: 72,
    name: 'security-demo-sender',
    deploymentYaml:
      'apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  labels:\n    role: security-demo-sender\n  name: security-demo-sender\nspec:\n  replicas: 1\n  revisionHistoryLimit: 3\n  strategy:\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 0\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        role: security-demo-sender\n    spec:\n      containers:\n      - image: registry.internal.logz.io:5000/build-docker-security-demo-sender:latest\n        imagePullPolicy: Always\n        name: security-demo-sender\n        args: ["http://listener.logz.io:8070",\n            "TwutWwTfgalxmKoFJxvNPuxKRnDnPRTx"]\n      restartPolicy: Always\n      terminationGracePeriodSeconds: 5',
    serviceYaml: null,
    ingressYaml: null,
    defaultShell: null,
    isPartOfGroup: false,
  },
  {
    id: 81,
    name: 'healthcheck',
    deploymentYaml:
      'apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  labels:\n    role: healthcheck\n  name: healthcheck\nspec:\n  replicas: 1\n  revisionHistoryLimit: 3\n  strategy:\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 0\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        role: healthcheck\n    spec:\n      containers:\n        -\n          image: "registry.internal.logz.io:5000/healthcheck"\n          imagePullPolicy: Always\n          name: healthcheck-node\n          ports:\n            -\n              containerPort: 2233\n              protocol: TCP\n          livenessProbe:\n            httpGet:\n              path: /healthiness\n              port: 2233\n            initialDelaySeconds: 10\n            periodSeconds: 10\n            failureThreshold: 3\n          readinessProbe:\n            httpGet:\n              path: /readiness\n              port: 2233\n            initialDelaySeconds: 10\n            periodSeconds: 1\n            failureThreshold: 1\n          resources:\n            requests:\n              cpu: 100m\n              memory: 512Mi\n      restartPolicy: Always\n      terminationGracePeriodSeconds: 0',
    serviceYaml:
      'apiVersion: v1\nkind: Service\nmetadata: \n  labels: \n    role: healthcheck\n  name: healthcheck-service\nspec: \n  ports: \n    - \n      nodePort: 30044\n      port: 2233\n      protocol: TCP\n      targetPort: 2233\n  selector: \n    role: healthcheck\n  type: NodePort',
    ingressYaml: null,
    defaultShell: null,
    isPartOfGroup: false,
  },
  {
    id: 82,
    name: 'noisy-manager',
    deploymentYaml:
      'apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  labels:\n    role: noisy-manager\n  name: noisy-manager\nspec:\n  replicas: 1\n  revisionHistoryLimit: 3\n  strategy:\n    rollingUpdate:\n      maxSurge: 0\n      maxUnavailable: 1\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        role: noisy-manager\n    spec:\n      containers:\n      - image: registry.internal.logz.io:5000/logzio-noisy-manager\n        imagePullPolicy: Always\n        name: noisy-manager\n        stdin: true\n        tty: true\n      restartPolicy: Always\n      terminationGracePeriodSeconds: 5',
    serviceYaml: null,
    ingressYaml: null,
    defaultShell: null,
    isPartOfGroup: false,
  },
  {
    id: 83,
    name: 'self-service',
    deploymentYaml:
      'apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  labels:\n    role: self-service\n  name: self-service\nspec:\n  replicas: 1\n  revisionHistoryLimit: 3\n  strategy:\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 0\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        role: self-service\n        apollo_jolokia_port: 9990\n    spec:\n      volumes:                          \n      - name: dshm\n        emptyDir:\n          medium: Memory\n      containers:\n      - image: registry.internal.logz.io:5000/self-service\n        imagePullPolicy: Always\n        name: self-service\n        resources:\n          requests:\n            cpu: 20m\n            memory: 3072Mi\n        ports:\n        - containerPort: 9990\n          name: jersey\n          protocol: TCP\n        env:\n        - name: EC2_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        - name: OVERRIDE_MACHINE_MEMORY_MB\n          value: 3072\n        - name: KHOST\n          value: {{ kafka_servers }}\n        readinessProbe:\n          httpGet:\n            path: /system/ready\n            port: 9990\n          initialDelaySeconds: 60\n          periodSeconds: 20\n        livenessProbe:\n          httpGet:\n            path: /system/health\n            port: 9990\n          initialDelaySeconds: 60\n          periodSeconds: 20',
    serviceYaml:
      'apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    role: self-service\n  name: self-service-service\nspec:\n  ports:\n  - nodePort: 30034\n    port: 9990\n    protocol: TCP\n    targetPort: 9990\n    name: self-service\n  selector:\n    role: self-service\n  type: NodePort',
    ingressYaml:
      'apiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: self-service-{{ environment }}-{{ region }}-ingress\n  annotations:\n    kubernetes.io/ingress.class: "nginx"\nspec:\n  rules:\n  - host: self-service-{{ environment }}-{{ region }}.internal.logz.io\n    http:\n      paths:\n      - backend:\n          serviceName: self-service-service\n          servicePort: 9990\n        path: /',
    defaultShell: null,
    isPartOfGroup: false,
  },
  {
    id: 84,
    name: 'app-frontend',
    deploymentYaml:
      'apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  labels:\n    role: app-frontend\n  name: app-frontend\nspec:\n  replicas: 2\n  revisionHistoryLimit: 3\n  strategy:\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 0\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        role: app-frontend\n    spec:\n      containers:\n      - image: "registry.internal.logz.io:5000/app-frontend"\n        imagePullPolicy: Always\n        name: app-frontend\n        ports:\n        - containerPort: 7070\n          protocol: TCP\n        resources:\n          requests:\n            cpu: 100m\n            memory: 512Mi\n        livenessProbe:\n          httpGet:\n            path: /healthz\n            port: 7070\n          initialDelaySeconds: 3\n          periodSeconds: 3',
    serviceYaml:
      'apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    role: app-frontend\n  name: app-frontend\nspec:  \n  ports:\n  - nodePort: 30042\n    port: 7070\n    protocol: TCP\n  selector:\n    role: app-frontend\n  type: NodePort',
    ingressYaml: null,
    defaultShell: null,
    isPartOfGroup: false,
  },
  {
    id: 86,
    name: 'haystack-ui',
    deploymentYaml:
      'apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata: \n  labels: \n    role: haystack-ui\n  name: haystack-ui\nspec: \n  replicas: 1\n  revisionHistoryLimit: 3\n  strategy: \n    rollingUpdate: \n      maxSurge: 0\n      maxUnavailable: 1\n    type: RollingUpdate\n  template: \n    metadata: \n      labels: \n        role: haystack-ui\n    spec: \n      containers: \n        - image: "registry.internal.logz.io:5000/logzio-haystack-ui:1.1.6"\n          imagePullPolicy: Always\n          name: haystack-ui\n          resources: \n            requests: \n              cpu: 100m\n              memory: 100Mi\n          ports: \n            - containerPort: 8080\n              name: ui\n              protocol: TCP',
    serviceYaml:
      'apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    role: haystack-ui\n  name: haystack-ui\nspec:  \n  ports:\n  - nodePort: 31008\n    port: 8080\n    protocol: TCP\n    targetPort: 8080\n    name: haystack-ui\n  selector:\n    role: haystack-ui\n  type: NodePort',
    ingressYaml:
      'apiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: haystack-{{ environment }}-{{ region }}-ingress\n  annotations:\n    kubernetes.io/ingress.class: "nginx"\nspec:\n  rules:\n  - host: haystack-{{ environment }}-{{ region }}.internal.logz.io\n    http:\n      paths:\n      - backend:\n          serviceName: haystack-ui\n          servicePort: 8080\n        path: /',
    defaultShell: null,
    isPartOfGroup: false,
  },
  {
    id: 87,
    name: 'reports-engine',
    deploymentYaml:
      'apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  labels:\n    role: reports-engine\n  name: reports-engine\nspec:\n  replicas: 1\n  revisionHistoryLimit: 3\n  strategy:\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 0\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        role: reports-engine\n        apollo_jolokia_port: 9990\n    spec:\n      containers:\n      - image: registry.internal.logz.io:5000/reports-engine\n        imagePullPolicy: Always\n        name: reports-engine\n        resources:\n          requests:\n            cpu: 50m\n            memory: 1500Mi\n        ports:\n        - containerPort: 9990\n          name: jersey\n          protocol: TCP\n        env:\n        - name: EC2_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        - name: OVERRIDE_MACHINE_MEMORY_MB\n          value: 2048\n        - name: KHOST\n          value: {{ kafka_servers }}\n        - name: GRAPHITE_SERVER\n          value: {{ graphite_host }}\n        - name: CONSUL\n          value: {{ consul_server }}\n        readinessProbe:\n          httpGet:\n            path: /system/ready\n            port: 9990\n          initialDelaySeconds: 60\n          periodSeconds: 10\n        livenessProbe:\n          httpGet:\n            path: /system/health\n            port: 9990\n          initialDelaySeconds: 60\n          periodSeconds: 10',
    serviceYaml:
      'apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    role: reports-engine\n  name: reports-engine\nspec:\n  ports:\n  - nodePort: 30045\n    port: 9990\n    protocol: TCP\n    targetPort: 9990\n    name: reports-engine\n  selector:\n    role: reports-engine\n  type: NodePort',
    ingressYaml:
      'apiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: reports-engine-{{ environment }}-{{ region }}-ingress\n  annotations:\n    kubernetes.io/ingress.class: "nginx"\nspec:\n  rules:\n  - host: reports-engine-{{ environment }}-{{ region }}.internal.logz.io\n    http:\n      paths:\n      - backend:\n          serviceName: reports-engine\n          servicePort: 9990\n        path: /\n',
    defaultShell: null,
    isPartOfGroup: false,
  },
  {
    id: 88,
    name: 'api-gateway',
    deploymentYaml:
      'apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  labels:\n    role: api-gateway\n    gatewayType: {{ gatewayType }}\n  name: api-gateway\nspec:\n  replicas: 1\n  revisionHistoryLimit: 3\n  strategy:\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 0\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        role: api-gateway\n        gatewayType: {{ gatewayType }}\n        apollo_jolokia_port: 9990\n    spec:\n      containers:\n      - image: registry.internal.logz.io:5000/api-gateway\n        imagePullPolicy: Always\n        name: api-gateway\n        resources:\n          requests:\n            cpu: 50m\n            memory: 2048Mi\n        ports:\n        - containerPort: 8080\n          name: traffic\n          protocol: TCP\n        - containerPort: 9990\n          name: jersey\n          protocol: TCP\n        env:\n        - name: EC2_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        - name: OVERRIDE_MACHINE_MEMORY_MB\n          value: 2048\n        - name: KHOST\n          value: {{ kafka_servers }}\n        - name: GRAPHITE_SERVER\n          value: {{ graphite_host }}\n        - name: CONSUL\n          value: {{ consul_server }}\n        readinessProbe:\n          httpGet:\n            path: /system/ready\n            port: 9990\n          initialDelaySeconds: 60\n          periodSeconds: 10\n        livenessProbe:\n          httpGet:\n            path: /system/health\n            port: 9990\n          initialDelaySeconds: 60\n          periodSeconds: 10',
    serviceYaml:
      'apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    role: api-gateway\n  name: api-gateway\nspec:\n  ports:\n  - nodePort: 30048\n    port: 8080\n    protocol: TCP\n    targetPort: 8080\n    name: api-gateway\n  selector:\n    role: api-gateway\n  type: NodePort',
    ingressYaml:
      'apiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: api-gateway-app-{{ environment }}-{{ region }}-ingress\n  annotations:\n    kubernetes.io/ingress.class: "nginx"\nspec:\n  rules:\n  - host: api-gateway-app-{{ environment }}-{{ region }}.internal.logz.io\n    http:\n      paths:\n      - backend:\n          serviceName: api-gateway\n          servicePort: 8080\n        path: /',
    defaultShell: null,
    isPartOfGroup: true,
  },
  {
    id: 89,
    name: 'tagging-monitor',
    deploymentYaml:
      'apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  labels:\n    role: tagging-monitor\n  name: tagging-monitor\nspec:\n  replicas: 1\n  revisionHistoryLimit: 3\n  strategy:\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 0\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        role: tagging-monitor\n        apollo_jolokia_port: 9990\n    spec:\n      containers:\n      - image: registry.internal.logz.io:5000/tagging-monitor\n        imagePullPolicy: Always\n        name: tagging-monitor\n        resources:\n          requests:\n            cpu: 50m\n            memory: 2048Mi\n        ports:\n        - containerPort: 9990\n          name: jersey\n          protocol: TCP\n        env:\n        - name: EC2_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        - name: OVERRIDE_MACHINE_MEMORY_MB\n          value: 2048\n        - name: KHOST\n          value: {{ kafka_servers }}\n        - name: GRAPHITE_SERVER\n          value: {{ graphite_host }}\n        - name: CONSUL\n          value: {{ consul_server }}\n        readinessProbe:\n          httpGet:\n            path: /system/ready\n            port: 9990\n          initialDelaySeconds: 60\n          periodSeconds: 10\n        livenessProbe:\n          httpGet:\n            path: /system/health\n            port: 9990\n          initialDelaySeconds: 60\n          periodSeconds: 10',
    serviceYaml: null,
    ingressYaml: null,
    defaultShell: null,
    isPartOfGroup: false,
  },
  {
    id: 91,
    name: 'metrics-index-failures',
    deploymentYaml:
      'apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  labels:\n    role: metrics-index-failures\n  name: metrics-index-failures\nspec:\n  replicas: 1\n  revisionHistoryLimit: 3\n  strategy:\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 0\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        role: metrics-index-failures\n        apollo_jolokia_port: 9990\n    spec:\n      containers:\n      - image: registry.internal.logz.io:5000/metrics-index-failures\n        imagePullPolicy: Always\n        name: metrics-index-failures\n        resources:\n          requests:\n            cpu: 50m\n            memory: 1024Mi\n        ports:\n        - containerPort: 9990\n          name: jersey\n          protocol: TCP\n        env:\n        - name: EC2_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: KUBE_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        - name: OVERRIDE_MACHINE_MEMORY_MB\n          value: 2048\n        - name: KHOST\n          value: {{ kafka_servers }}\n        - name: GRAPHITE_SERVER\n          value: {{ graphite_host }}\n        - name: CONSUL\n          value: {{ consul_server }}\n        readinessProbe:\n          httpGet:\n            path: /system/ready\n            port: 9990\n          initialDelaySeconds: 90\n          periodSeconds: 10\n        livenessProbe:\n          httpGet:\n            path: /system/health\n            port: 9990\n          initialDelaySeconds: 120\n          periodSeconds: 15',
    serviceYaml: null,
    ingressYaml: null,
    defaultShell: null,
    isPartOfGroup: false,
  },
  {
    id: 92,
    name: 'app-styleguide',
    deploymentYaml:
      'apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  labels:\n    role: app-styleguide\n  name: app-styleguide\nspec:\n  replicas: 1\n  revisionHistoryLimit: 3\n  strategy:\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 0\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        role: app-styleguide\n    spec:\n      containers:\n      - image: "registry.internal.logz.io:5000/app-storybook"\n        imagePullPolicy: Always\n        name: app-styleguide\n        ports:\n        - containerPort: 7071\n          protocol: TCP\n        resources:\n          requests:\n            cpu: 100m\n            memory: 512Mi\n        livenessProbe:\n          httpGet:\n            path: /healthz\n            port: 7071\n          initialDelaySeconds: 3\n          periodSeconds: 3',
    serviceYaml:
      'apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    role: app-styleguide\n  name: app-styleguide\nspec:  \n  ports:\n  - nodePort: 30049\n    port: 7071\n    protocol: TCP\n  selector:\n    role: app-styleguide\n  type: NodePort',
    ingressYaml:
      'apiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: styleguide-{{ environment }}-ingress\n  annotations:\n    kubernetes.io/ingress.class: "nginx"\nspec:\n  rules:\n  - host: styleguide-{{ environment }}.internal.logz.io\n    http:\n      paths:\n      - backend:\n          serviceName: app-styleguide\n          servicePort: 7071\n        path: /\n',
    defaultShell: null,
    isPartOfGroup: false,
  },
];

export const stackServicesMock = [{"id":4,"name":"Web App","stackType":"SERVICES","services":[3,60,69,84],"enabled":true},{"id":5,"name":"All gaia-full servicesMock","stackType":"SERVICES","services":[6,7,12,14,16,20,21,22,23,25,26,27,28,29,34,41,44,45,46,48,51,52,53,55,57,59,63,65,88],"enabled":true}];

export const envMock =[{"id":2,"name":"logzio-staging-us-east-1","geoRegion":"us-east-1","availability":"STAGING","kubernetesMaster":"https://k8s-2-staging-us-east-1.internal.logz.io:6443","kubernetesToken":"******","kubernetesCaCert":null,"kubernetesNamespace":"staging","servicePortCoefficient":0,"requireDeploymentMessage":false,"requireHealthCheck":false,"concurrencyLimit":-1,"additionalParams":"{\"type\": \"NodePort\", \"nodePortNginx\": \"nodePort: 30002\", \"nodePortNginxredirect\": \"nodePort: 30011\", \"nodePortHttps\": \"nodePort: 30007\", \"nodePortEngine\": \"nodePort: 30008\", \"az_label\": \"logzio/az:\", \"kafka_servers\": \"staging-us-east-1-kafka-1-broker-1003.internal.logz.io:9092,staging-us-east-1-kafka-1-broker-1004.internal.logz.io:9092\", \"consul_server\": \"consul-staging-us-east-1.internal.logz.io\", \"salt_extra\": \"--idle\"}"},{"id":4,"name":"logzio-preproduction-us-east-1","geoRegion":"us-east-1","availability":"PREPRODUCTION","kubernetesMaster":"https://k8s-2-staging-us-east-1.internal.logz.io:6443","kubernetesToken":"******","kubernetesCaCert":null,"kubernetesNamespace":"preproduction","servicePortCoefficient":600,"requireDeploymentMessage":false,"requireHealthCheck":false,"concurrencyLimit":-1,"additionalParams":"{\"type\": \"NodePort\", \"nodePortNginx\": \"nodePort: 30002\", \"nodePortNginxredirect\": \"nodePort: 30011\", \"az_label\": \"logzio/az:\", \"kafka_servers\": \"staging-us-east-1-kafka-1-broker-1003.internal.logz.io:9092,staging-us-east-1-kafka-1-broker-1004.internal.logz.io:9092\", \"consul_server\": \"consul-staging-us-east-1.internal.logz.io\", \"salt_extra\": \"--idle\"}"},{"id":5,"name":"logzio-prod-us-east-1","geoRegion":"us-east-1","availability":"PROD","kubernetesMaster":"https://k8s-1-prod-us-east-1.internal.logz.io:6443","kubernetesToken":"******","kubernetesCaCert":null,"kubernetesNamespace":"prod","servicePortCoefficient":0,"requireDeploymentMessage":true,"requireHealthCheck":true,"concurrencyLimit":-1,"additionalParams":"{\"type\": \"NodePort\", \"nodePortNginx\": \"nodePort: 30002\", \"nodePortNginxredirect\": \"nodePort: 30011\", \"nodePortHttps\": \"nodePort: 30007\", \"nodePortEngine\": \"nodePort: 30008\", \"az_label\": \"logzio/az:\", \"kafka_servers\": \"PROD-kafka-1-i-e00f317d.servers.us-east-1.internal.logz.io:9092,PROD-kafka10-1-i-0abda0e1a9c29f715.servers.us-east-1.internal.logz.io:9092,PROD-kafka10-1-i-030357de1466f029f.servers.us-east-1.internal.logz.io:9092,PROD-kafka10-1-i-0374261842751eb23.servers.us-east-1.internal.logz.io:9092,PROD-kafka10-1-i-0cdc4c3284e19803d.servers.us-east-1.internal.logz.io:9092\", \"graphite_host\": \"graphite.internal.logz.io\", \"consul_server\": \"consul-prod-us-east-1.internal.logz.io\", \"salt_extra\": \"\", \"scanners_enabled\": \"scanners: enabled\", \"rollup_enabled\": \"rollup: enabled\"}"},{"id":6,"name":"logzio-prod-kibana5-us-east-1","geoRegion":"us-east-1","availability":"PROD","kubernetesMaster":"https://k8s-1-prod-us-east-1.internal.logz.io:6443","kubernetesToken":"******","kubernetesCaCert":null,"kubernetesNamespace":"prodkibana5","servicePortCoefficient":300,"requireDeploymentMessage":false,"requireHealthCheck":false,"concurrencyLimit":-1,"additionalParams":"{\"type\": \"NodePort\", \"nodePortNginx\": \"nodePort: 30002\", \"nodePortNginxredirect\": \"nodePort: 30011\", \"az_label\": \"logzio/az:\", \"kafka_servers\": \"PROD-kafka-1-i-e00f317d.servers.us-east-1.internal.logz.io:9092,PROD-kafka10-1-i-0abda0e1a9c29f715.servers.us-east-1.internal.logz.io:9092,PROD-kafka10-1-i-030357de1466f029f.servers.us-east-1.internal.logz.io:9092,PROD-kafka10-1-i-0374261842751eb23.servers.us-east-1.internal.logz.io:9092,PROD-kafka10-1-i-0cdc4c3284e19803d.servers.us-east-1.internal.logz.io:9092\", \"graphite_host\": \"graphite.internal.logz.io\", \"consul_server\": \"consul.internal.logz.io:8500\", \"salt_extra\": \"--idle\"}"},{"id":7,"name":"logzio-staging-eu-central-1","geoRegion":"eu-central-1","availability":"STAGING","kubernetesMaster":"https://k8s-1-staging-eu-central-1.internal.logz.io:6443","kubernetesToken":"******","kubernetesCaCert":null,"kubernetesNamespace":"staging","servicePortCoefficient":0,"requireDeploymentMessage":false,"requireHealthCheck":false,"concurrencyLimit":-1,"additionalParams":"{\"type\": \"NodePort\", \"nodePortNginx\": \"nodePort: 30002\", \"nodePortNginxredirect\": \"nodePort: 30011\", \"nodePortHttps\": \"nodePort: 30007\", \"nodePortEngine\": \"nodePort: 30008\", \"az_label\": \"logzio/az:\", \"kafka_servers\": \"staging-eu-central-1-kafka-1-broker-1001.internal.logz.io:9092\", \"consul_server\": \"consul-prod-us-east-1.internal.logz.io\", \"salt_extra\": \"--idle\"}"},{"id":9,"name":"logzio-prod-eu-central-1","geoRegion":"eu-central-1","availability":"PROD","kubernetesMaster":"https://k8s-1-prod-eu-central-1.internal.logz.io:6443","kubernetesToken":"******","kubernetesCaCert":null,"kubernetesNamespace":"prod","servicePortCoefficient":0,"requireDeploymentMessage":true,"requireHealthCheck":true,"concurrencyLimit":-1,"additionalParams":"{\"type\": \"NodePort\", \"nodePortNginx\": \"nodePort: 30002\", \"nodePortNginxredirect\": \"nodePort: 30011\", \"nodePortHttps\": \"nodePort: 30007\", \"nodePortEngine\": \"nodePort: 30008\", \"az_label\": \"logzio/az:\", \"kafka_servers\": \"PROD-kafka-1-i-e00f317d.servers.us-east-1.internal.logz.io:9092,PROD-kafka10-1-i-0abda0e1a9c29f715.servers.us-east-1.internal.logz.io:9092,PROD-kafka10-1-i-030357de1466f029f.servers.us-east-1.internal.logz.io:9092,PROD-kafka10-1-i-0374261842751eb23.servers.us-east-1.internal.logz.io:9092,PROD-kafka10-1-i-0cdc4c3284e19803d.servers.us-east-1.internal.logz.io:9092\", \"graphite_host\": \"graphite.internal.logz.io\", \"consul_server\": \"consul.internal.logz.io:8500\", \"salt_extra\": \"--idle\", \"scanners_enabled\": \"scanners: enabled\"}"},{"id":51,"name":"logzio-prod-le-us-east-1","geoRegion":"us-east-1","availability":"PROD","kubernetesMaster":"https://k8s-2-prod-us-east-1.internal.logz.io:6443","kubernetesToken":"******","kubernetesCaCert":null,"kubernetesNamespace":"prod","servicePortCoefficient":0,"requireDeploymentMessage":true,"requireHealthCheck":true,"concurrencyLimit":1,"additionalParams":"{\"type\": \"NodePort\", \"nodePortNginx\": \"nodePort: 30002\", \"nodePortNginxredirect\": \"nodePort: 30011\", \"az_label\": \"logzio/az:\", \"kafka_servers\": \"PROD-kafka-1-i-e00f317d.servers.us-east-1.internal.logz.io:9092,PROD-kafka10-1-i-0abda0e1a9c29f715.servers.us-east-1.internal.logz.io:9092,PROD-kafka10-1-i-030357de1466f029f.servers.us-east-1.internal.logz.io:9092,PROD-kafka10-1-i-0374261842751eb23.servers.us-east-1.internal.logz.io:9092,PROD-kafka10-1-i-0cdc4c3284e19803d.servers.us-east-1.internal.logz.io:9092\", \"graphite_host\": \"graphite.internal.logz.io\", \"consul_server\": \"consul-prod-us-east-1.internal.logz.io\", \"salt_extra\": \"--idle\"}"},{"id":52,"name":"logzio-prod-le-eu-central-1","geoRegion":"eu-central-1","availability":"PROD","kubernetesMaster":"https://k8s-2-prod-eu-central-1.internal.logz.io:6443","kubernetesToken":"******","kubernetesCaCert":null,"kubernetesNamespace":"prod","servicePortCoefficient":0,"requireDeploymentMessage":true,"requireHealthCheck":true,"concurrencyLimit":1,"additionalParams":"{\"type\": \"NodePort\", \"nodePortNginx\": \"nodePort: 30002\", \"nodePortNginxredirect\": \"nodePort: 30011\", \"az_label\": \"logzio/az:\", \"kafka_servers\": \"PROD-kafka-1-i-e00f317d.servers.us-east-1.internal.logz.io:9092,PROD-kafka10-1-i-0abda0e1a9c29f715.servers.us-east-1.internal.logz.io:9092,PROD-kafka10-1-i-030357de1466f029f.servers.us-east-1.internal.logz.io:9092,PROD-kafka10-1-i-0374261842751eb23.servers.us-east-1.internal.logz.io:9092,PROD-kafka10-1-i-0cdc4c3284e19803d.servers.us-east-1.internal.logz.io:9092\", \"graphite_host\": \"graphite.internal.logz.io\", \"consul_server\": \"consul.internal.logz.io:8500\", \"salt_extra\": \"--idle\"}"},{"id":58,"name":"logzio-prod-westeurope-services","geoRegion":"westeurope","availability":"PROD","kubernetesMaster":"https://logzio-westeurope-prod-aks-1-services-2a77397a.hcp.westeurope.azmk8s.io","kubernetesToken":"******","kubernetesCaCert":"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUV5RENDQXJDZ0F3SUJBZ0lSQU5tWDJmdDB1S1E3MkpOOGdCOStlYWt3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTVRrd01qSTJNRFkxTnpVNFdoY05NakV3TWpJMU1EWTFOelU0V2pBTgpNUXN3Q1FZRFZRUURFd0pqWVRDQ0FpSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnSVBBRENDQWdvQ2dnSUJBT0NoCjk0NklXTkh5QTVQaUhHeWl2QlZFbm96OUdBdWNDRkpUVEFZTHNOT3I4QWZ4Y3A0bVY2YWNTVGpYOTFOR0FDSmMKVzQvYXhGVVZ1RTB0VHBGNldoREZOOUU1Z0ZpT2grVTlMNCsvUFdiTVhCNzEvR0l1dERIVjdPc2VJTktJUWpBYwpvMEJMVVB4UitFdlRrcW1tUURsTkgzb2RYTGJpenUyNTYyakp6eEpzaEhveDUxM0pmN0lHYWNiUG9udVFkRTF6ClR0SEhEL2QxcVFNa0dHUkdTTEUyUFRYOTRXcVU3RTZtcUFyVlBIeEptWjl1U2dmL0lISHNjYnVNRVdZTHZ2V1kKRlhnQVNTMms3enFaSEtSNE1UeUM0Q1hZMVdaeXRyUy9aamwyWkZxU2tQVHl2TzVGME0vakJ5VnBkL25RZkJWego3ckFtcXRVOXV2NWdNUVJkUWNlRXdUVUU0Mit0V245cmJOdFBwbmM0SjJyTUpiT1NHTFIzeUhOVldBMTA1YWxwCkhSK3NrK29ob3FZb2dvaGU4VVBGcDZTZ1V2bFI3WFVZZUFJejYwVFkxZDN6anVJcmU3TWtHWE5qeFF5M1NLM2MKc2UyWE9HWXhWZTZwYzV2MGNDVWRoZlZoNHdHVzRSYUdoMHJENHp6aUtYbU9PTzJ3Y2lreXI0bUZqbEVNN1Ezagp1R1E5ZncyWEFORzhEV2FFUEp3b0pwZFhnUU5MTy9TVk1iNUpoSUVGb0g0dXVmdDlONmxjUExUeFRFblh4Z3BnCktTdDY5elM4QVZPSll0NVlYN0ZPT1NrMThHTWw5ODVTelZ2cHBkZ2NVSlVQSElmdkpYN2J0OWtaYUJOQXYvQjUKZjB5MjJhQ0xzdnduNmlFNWgwT2lBUG85MC9FaEZnczhrc1pjNkNvZkFnTUJBQUdqSXpBaE1BNEdBMVVkRHdFQgovd1FFQXdJQ3BEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQ0FRQWxNUkNZCmNXeGxqa3V5Z25DR0t6anNKZVdDVnE2SUhMY01Gd0JTYytXd3VLQ1daTmFYZGpBWkhQV2x2aHVFR1JVdmNzNWUKQjE1ZmZKQVBBY2ZUL2hiUmFHcW4xTi9IOVdjSTNzU3lRRk8ydmVkNWorQ2pFa3o0NndRbXJpb3ZZd0EybWtOVwpONGpTSmhoWmdURnltTDF1RzFHQVdyU0N1eDMvbHRGYzNEREhza3RRd1FpK1RGL3J2dGhxNW96NFdydmx0M3VKCmhIYTh0VWNGYjlTd00wUU5DR3dKQ2VBRTFBOU1tMDkzc1RHTDMrd0tremgzWGRPZFpiWnh0aVppenJ1WkQrSDQKQnZNS0FnYkxVUnZPYVoxbnhsaTBJWm52WEpzZVZydnpFaWVTMm9mK0psdVRKbFYrdjl4N3Y0Yzc2VTVPWVZaagoyczZIZ0xUYWI3NDBpbW1PWE1pT3RXWHlndjk0MytjNVRLTGo5NUJvQTJoWmQ4bUhvSUZRT29NRGEyZEl6WWEwCkJHamdHWDQwdWhZSzM1VStwQmJXbHBIbEw1TCtTTDZqMDNWZGFZVVU5aXBvVjgxOXhKZTl1eW1nZzVSQmliTDUKYStYTFFEZXllWlJ0WHdtVDhuVHE0NTRSaW1iRE5EdFc5V1Z0OUsxd01Sc21BMmZWMnl1d0ZqdjBHRUVvUGlqMAo1TkJtWDZKN1FqbmRDZEQ2QTJyT3pjUWVjK3ZpbU83ckRTVytGZWpjajhZb3AwdlJXYklBSG9uWjRNU1Z2bUFNCm1QSmZBbU0xT0grUHBiTUVpanFMWHpvbldwV0lQdERnZ2ZIMGw5MFJ6ZC90ZHNielhERHZpM3NNVERxcUtIbVMKM0p6b0gwVlJaNSs3Q3pOdGtDWFBUL0U3YVpzbncvUWZkTkdIMFE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg","kubernetesNamespace":"prod","servicePortCoefficient":0,"requireDeploymentMessage":true,"requireHealthCheck":true,"concurrencyLimit":-1,"additionalParams":"{\"type\": \"LoadBalancer\", \"annotations\": \"annotations:\", \"internalLB\":\"service.beta.kubernetes.io/azure-load-balancer-internal: \\\"true\\\"\", \"kafka_servers\": \"prod-westeurope-kafka-1-broker-1001.internal.logz.io:9092,prod-westeurope-kafka-1-broker-1002.internal.logz.io:9092,prod-westeurope-kafka-1-broker-1003.internal.logz.io:9092\", \"graphite_host\": \"graphite.prod.westeurope.internal.logz.io\", \"consul_server\": \"consul-prod-us-east-1.internal.logz.io\", \"salt_extra\": \"--idle\"}"},{"id":59,"name":"logzio-prod-westeurope-le","geoRegion":"westeurope","availability":"PROD","kubernetesMaster":"https://logzio-westeurope-prod-aks-2-logengines-75bc4237.hcp.westeurope.azmk8s.io","kubernetesToken":"******","kubernetesCaCert":"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUV4ekNDQXErZ0F3SUJBZ0lRR1pqazlkR3ByVFd2Y2o4RmlMbFpjakFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB4T1RBeU1qWXhNVEExTURkYUZ3MHlNVEF5TWpVeE1UQTFNRGRhTUEweApDekFKQmdOVkJBTVRBbU5oTUlJQ0lqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FnOEFNSUlDQ2dLQ0FnRUF4dCtiCm51VUFHVHljRGNyaWNFWjQyZ1I0UnRqYTl3Nk95RTBUTW4xUmFoaEh6Rk1mUk1wQ0o4cmdlb0RMNmZSRzczNysKZGJ3N0RQeVJ2L1Qxd1UvMm5tSFA4bnBpenZiSTErV3RZVXI5VzBsa2RZMUYxM213Z1NoRm1nMHIyWnZIUTdIeAp4MkFLMGljTldmWUdvRzFuZmJvLzhmNVNJNDRVTnFINHBFaFRUYUJHQTFtTVcvMXpFUkFGaFJrcnJVZkhKUnQzCi93Q0FZS1FkWUt3WVd2STBYaGhlT1FWOTJaM1djbXRWVDkzZHlwWjRDcmZGK3dHTTJ5M0p6M0dkYXU2R2ZwK1kKT044Sm00bkE2OEE2REkrVDlUV0ZDWVFOK1BzY1hQZ1FCZTZsSEo5ZTg5bUhoYjFETDRpcnhXOFBkSmNXY2YvVApUeVB6Z2RiZ0h5SEFQTkpuR0pHQUxFaTE2a21Zdyt3ekY1ZlV5dEcvMHU5S0xCZFhFK09PMGFKWFNjM1pBL2RICmZTenR6MDBqMHVUSEM0ajhUUFk1Z0U1ejBhR2ZpQ1cvZitOdDNzVGNXaXVtMUVqbjc5cVdwcHRuc3Y4L0IxNkgKVFJVZkNGSmRMV3FnZ3VBU2xrb3JTTXR0M21hcXd2VmZtVzkrcG1ZVU5aMVd1ZFB6cjhXNjhQb3RnSEJGN1cyaApSL0s4WVh3VDJtZlR1d0d0NFVuRjBaVTdoQUZFTTFFbE1Vank4ZHBIVzNIR01IR0lUK3BBcnJybmtmcjlwU1dRCnliRkxwNmNZM056d01rbUppL1poM3RSMWFXTWtrNVlDZ1hKSTVaZGQ5bElNUjNFNjhWMmlxVjh5bmQyWFcxSDcKWlkxUEhGbkZQZXNJUVlIc1JCVDNSMDQ5UjViZGFrcCs2bTkyT2hjQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFILwpCQVFEQWdLa01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dJQkFJRVE3WDBxCjZMdkxrKzdIZ3FoTzJ0VHp1RUtZWGYyU2JMYVJOQWNkbGI5TEU0WG5iMElOM0VEMmJ2TFlabmQxV2piazc3bnQKbGV1ZkNNRFhPdy90WDRYVXR1eWdEWTJzeVo0N1M1UTZlT1h0eDVXK2M4VFVvc21sVitsM1NYSnJIZXgwZ2g1RApUeXppTTJ4NTltZGxrc1dJT2tSWUhBTUVYZHBXK3BDS3IydDVUTXpvV2tqNmlmbTUxWVhkcWVHWDNheG94cU5nCkM0bDFVQk5JMVpQU1lsWldJakVqQ3hRaXoxRWd5bGdLUENCa056a3JhdWhlRkhBZWVlSnF6TzFLS1dQUitNb08KaE5FK1RnSHZyWjhKOUdJaExkaStReUZDQk1zalo1SndhNU9Gby9TMkpSZDhvckdHQnVqVDZ3NDExajNtbUo2Ngp2dm14Tk1GNThMUllvcVN1SFRYckVqOTNhNEJCZERBblQweVppc0ErU0pFenhPeTFnc3VOWjlYZkRPdHgzb1Y3Ci91VENpN0pyb3VEeEZmNFliYndVeWNraUlaV3FTbHNlSjJPNUEvQmRqMTA1Um5jRy94dkROUlh5U2Q1b1dzcnQKc2YvdzZVME9YNmtjY0ZJdUpvUGxKYUVET2FUWjJ5WHZVQkhGdXdYeUFudnM5dC92MnljMVF0VEgyeC9Ob2pYYQpWTU5HN1NMYmlFNmJxWVFtbk1ESW5qcmMxMVkweDFVTVNGRHpydThWRkNJakFvTzBaQi9iR3Fmd0V5bjJJdW5jCnJJU2lmVEtWVUpvd3pONUxhR2xEeFFoZ29oOUlTL3JjaGJjSjFOVmsyQjFYMi9SdFVQUVVqSk9zRjE5VU4vRHUKMWtJYWU5SmNuVFNBWEdlS0N2RzFwK2k5Y3MwVXNVV3o4a3lzCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K","kubernetesNamespace":"prod","servicePortCoefficient":0,"requireDeploymentMessage":true,"requireHealthCheck":true,"concurrencyLimit":-1,"additionalParams":"{\"type\": \"LoadBalancer\", \"annotations\": \"annotations:\", \"internalLB\":\"service.beta.kubernetes.io/azure-load-balancer-internal: \\\"true\\\"\", \"kafka_servers\": \"prod-westeurope-kafka-1-broker-1001.internal.logz.io:9092,prod-westeurope-kafka-1-broker-1002.internal.logz.io:9092,prod-westeurope-kafka-1-broker-1003.internal.logz.io:9092\", \"graphite_host\": \"graphite.prod.westeurope.internal.logz.io\", \"consul_server\": \"consul-prod-us-east-1.internal.logz.io\", \"salt_extra\": \"--idle\"}"},{"id":60,"name":"logzio-prod-westeurope-scanners","geoRegion":"westeurope","availability":"PROD","kubernetesMaster":"https://logzio-westeurope-prod-aks-4-scanners-721d9ba1.hcp.westeurope.azmk8s.io","kubernetesToken":"******","kubernetesCaCert":"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUV4ekNDQXErZ0F3SUJBZ0lRZG8wcjRXUS9xZm0za3dDV28xenM0REFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB4T1RBeU1qWXhNVEExTVRCYUZ3MHlNVEF5TWpVeE1UQTFNVEJhTUEweApDekFKQmdOVkJBTVRBbU5oTUlJQ0lqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FnOEFNSUlDQ2dLQ0FnRUEwcWZlClM3SnZzM3dSNlIwTzAwdEY5M29LVFFTYlhBazhyU2tMUUIwR2pwdjExbDNqQWlzRmF5TCs2Vm45dUo2MC9MMzEKa3ZkMXJYRXFCdGxuQTZvNHh1RmhCYjUvSitGa2drdi9UZzZGaVU4YWdydm5NbUphWUpqbkNTdURkdUpDalM3cgpCRnMvQWFlYTdjVTF5R05QMFE2SmRtM0pSM1FYcnljT1AwUE16WUFnVmorWkRLb0dJUFJmazNnZ0VxZThOaEhpCkQ2UktpZ3drRjNXL1VHYWhqVzJqYUIxTUxPRXRyN2tJWWoxU0VkWk5uUm5mZE5kWFVRME1EWlBCVU83aFkvdzQKRnZMMDkxWGd1YU0zQmU0cXRoRUx1cHJDYWE4ZlV5S3dBS1ZzM3JldHpHV3lOOWhoQmZ1djJRQ0NOdDRMYi82MQpUS3lPeS9KemlTNkNGdWc4Zy9Wd3hyb0F1QTVwSDk0b2VzTWRrRTV6L3AvUGtWTG5WQ0dNWXRPYXFrMG9rbFhrCnZucGlRRTQ2dDM1MnIzZWxCRUYrdzcwT2tKenJrczhlbk9kd3crUHN6YzA3bER6M1o4MnV3UTlCRWREYlJQNC8KWHFSNk12Sy82d3d0Uml2ZFJLTytNc3RzbjMydzA2UVdRLzFUSit1Y3dSY1ROUERyYTMxMHVyWHVYbDZ3Unl3MgpZZFNSa0xJZ1lMZFRFQ0t5aG56NEk4S2VyM3lYRmc0TWk1Q0RXSE5PYTlYeEduMEIzT1dORG5NLzZJcFY3TUYwCjVCRk1QQXp0dU5EcDVrZUVQcDlBNVlJdVoyVjlrZmhMZWxvNlR4WkVObzBaR09mQ1dmMVFPZklxRW1mWkwzOWwKTGIydlo4VW1MTm80Ly9JVW1nc0VKN09BbE80SUR4UFJyWVF1NGk4Q0F3RUFBYU1qTUNFd0RnWURWUjBQQVFILwpCQVFEQWdLa01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dJQkFLbnBGd2U5CmowaUpQT3FCRHYzYnBoWFZhS3RTbEwzeGdWbW5CTENJNk9MYXdqYkRBQkpJWDNqa3k4UmRVaWcxK3Y5UXg3VVAKWXZ0ZWNRcXpCb2NlcWxRL2lqclVzYklNQzU2dWVSNkh0MjAyQzJXMVJnd3F1VzVUTHJEWlZYelpBYUQ1clV1cgphUmNvSkNmdUlXY2h6YVZvMTZoVWNGeGtGcWFsTmlaWmcwTlN1ZnpmTHlNajJicXIwSkZMZnhHSlRGdzgyMkZaCmNDVmVxT092UmJXdzI5T2I0UVBHVy8yUzQ1VGkvUFVackVBWHVBK25ZUkxBclpGN0hMUDh3U08vMnZXc1V6eEsKMUdjczRSSzZVQ1QrMlZIOUp2dVZFS0NCejgvaGNkMFVGbTNpSzhqSS9wa2NkNzZSSlZPVGZGcTdQZ1MyUE9wTQozVURFZDh0Sm5vNlJjMHcvdlk2eTNMWk5PQUV4V3JlVmlKUXQyblIxYThROC9xZlRzcHFYN0Y2eWpSaFdocW85ClF2cEw0cFdURU00NWxULytOUWM1dXNxWUJFdklOOWJHZGR4MkNVOFlrcCtWMituZTBnU0RkS0VEUmRqMVpEOGkKSDFGM1RINGh2amNXVEVpZ0doYW02Z2N0UlVrNEhlc1NQeEd4YWhQc296K08vUUV0YU81bjIyUW1RVWFDZHlxUQptVlMycE9adCtvUy96bmYyZFI2T25WcVFwWmMwY3kyM2xZdUdjMmR3NFZXM1pZdzR0RFBCdjRnV1N3TlVLdnhLCmRnUk1SYXR6dHZIZE9nQTdNZE92TnRpdHFGMjd1R1ZDdVZHTmZHQVpZZ3ozNmJTU1U5d2JDS0hnbFlubHNvdjIKUTB0dFZPb2xhZ25hTVlxaWVzaG43anJvcVRRNFVCTGdTUjl5Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K","kubernetesNamespace":"prod","servicePortCoefficient":0,"requireDeploymentMessage":true,"requireHealthCheck":true,"concurrencyLimit":-1,"additionalParams":"{\"type\": \"LoadBalancer\", \"annotations\": \"annotations:\", \"internalLB\":\"service.beta.kubernetes.io/azure-load-balancer-internal: \\\"true\\\"\", \"kafka_servers\": \"prod-westeurope-kafka-1-broker-1001.internal.logz.io:9092,prod-westeurope-kafka-1-broker-1002.internal.logz.io:9092,prod-westeurope-kafka-1-broker-1003.internal.logz.io:9092\", \"graphite_host\": \"graphite.prod.westeurope.internal.logz.io\", \"consul_server\": \"consul-prod-us-east-1.internal.logz.io\", \"salt_extra\": \"--idle\"}\n"},{"id":65,"name":"logzio-prod-ca-central-1-services","geoRegion":"ca-central-1","availability":"PROD","kubernetesMaster":"https://k8s-1-prod-ca-central-1.internal.logz.io:6443","kubernetesToken":"******","kubernetesCaCert":null,"kubernetesNamespace":"prod","servicePortCoefficient":0,"requireDeploymentMessage":true,"requireHealthCheck":true,"concurrencyLimit":-1,"additionalParams":"{\"type\": \"NodePort\", \"nodePortNginx\": \"nodePort: 30002\", \"nodePortNginxredirect\": \"nodePort: 30011\", \"nodePortHttps\": \"nodePort: 30007\", \"nodePortEngine\": \"nodePort: 30008\", \"az_label\": \"logzio/az:\", \"kafka_servers\": \"prod-ca-central-1-kafka-1-broker-1001.internal.logz.io:9092,prod-ca-central-1-kafka-1-broker-1002.internal.logz.io:9092,prod-ca-central-1-kafka-1-broker-1003.internal.logz.io:9092\", \"graphite_host\": \"graphite.prod.ca-central-1.internal.logz.io\", \"consul_server\": \"consul-prod-ca-central-1.internal.logz.io\", \"salt_extra\": \"--idle\",\"scanners_enabled\": \"scanners: enabled\"}"},{"id":66,"name":"logzio-prod-ca-central-1-le","geoRegion":"ca-central-1","availability":"PROD","kubernetesMaster":"https://k8s-3-prod-ca-central-1.internal.logz.io:6443","kubernetesToken":"******","kubernetesCaCert":null,"kubernetesNamespace":"prod","servicePortCoefficient":0,"requireDeploymentMessage":true,"requireHealthCheck":true,"concurrencyLimit":-1,"additionalParams":"{\"type\": \"NodePort\", \"nodePortNginx\": \"nodePort: 30002\", \"nodePortNginxredirect\": \"nodePort: 30011\", \"nodePortHttps\": \"nodePort: 30007\", \"nodePortEngine\": \"nodePort: 30008\", \"az_label\": \"logzio/az:\", \"kafka_servers\": \"prod-ca-central-1-kafka-1-broker-1001.internal.logz.io:9092,prod-ca-central-1-kafka-1-broker-1002.internal.logz.io:9092,prod-ca-central-1-kafka-1-broker-1003.internal.logz.io:9092\", \"graphite_host\": \"graphite.prod.ca-central-1-all.internal.logz.io\", \"consul_server\": \"consul-prod-ca-central-1.internal.logz.io\", \"salt_extra\": \"--idle\"}"},{"id":67,"name":"logzio-prod-ap-southeast-2-services","geoRegion":"ap-southeast-2","availability":"PROD","kubernetesMaster":"https://k8s-1-prod-ap-southeast-2.internal.logz.io:6443","kubernetesToken":"******","kubernetesCaCert":null,"kubernetesNamespace":"prod","servicePortCoefficient":0,"requireDeploymentMessage":true,"requireHealthCheck":true,"concurrencyLimit":-1,"additionalParams":"{\"type\": \"NodePort\", \"nodePortNginx\": \"nodePort: 30002\", \"nodePortNginxredirect\": \"nodePort: 30011\", \"nodePortHttps\": \"nodePort: 30007\", \"nodePortEngine\": \"nodePort: 30008\", \"az_label\": \"logzio/az:\", \"kafka_servers\": \"prod-ap-southeast-2-kafka-1-broker-1001.internal.logz.io:9092,prod-ap-southeast-2-kafka-1-broker-1002.internal.logz.io:9092,prod-ap-southeast-2-kafka-1-broker-1003.internal.logz.io:9092\", \"graphite_host\": \"graphite.prod.ap-southeast-2.internal.logz.io\", \"consul_server\": \"consul-prod-ap-southeast-2.internal.logz.io\", \"salt_extra\": \"--idle\",\"scanners_enabled\": \"scanners: enabled\"}"},{"id":68,"name":"logzio-prod-ap-southeast-2-le","geoRegion":"ap-southeast-2","availability":"PROD","kubernetesMaster":"https://k8s-3-prod-ap-southeast-2.internal.logz.io:6443","kubernetesToken":"******","kubernetesCaCert":null,"kubernetesNamespace":"prod","servicePortCoefficient":0,"requireDeploymentMessage":true,"requireHealthCheck":true,"concurrencyLimit":-1,"additionalParams":"{\"type\": \"NodePort\", \"nodePortNginx\": \"nodePort: 30002\", \"nodePortNginxredirect\": \"nodePort: 30011\", \"nodePortHttps\": \"nodePort: 30007\", \"nodePortEngine\": \"nodePort: 30008\", \"az_label\": \"logzio/az:\", \"kafka_servers\": \"prod-ap-southeast-2-kafka-1-broker-1001.internal.logz.io:9092,prod-ap-southeast-2-kafka-1-broker-1002.internal.logz.io:9092,prod-ap-southeast-2-kafka-1-broker-1003.internal.logz.io:9092\", \"graphite_host\": \"graphite.prod.ap-southeast-2-all.internal.logz.io\", \"consul_server\": \"consul-prod-ap-southeast-2.internal.logz.io\", \"salt_extra\": \"--idle\"}"},{"id":69,"name":"logzio-prod-westus2-services","geoRegion":"westus2","availability":"PROD","kubernetesMaster":"https://logzio-westus2-prod-aks-1-services-31a82d14.hcp.westus2.azmk8s.io:443","kubernetesToken":"******","kubernetesCaCert":"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUV5RENDQXJDZ0F3SUJBZ0lSQUx2QnNOblk1eFhaaDVYTXhtSkF4RHN3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTVRrd05qRXdNRGt4TmpJMldoY05ORGt3TmpBeU1Ea3lOakkyV2pBTgpNUXN3Q1FZRFZRUURFd0pqWVRDQ0FpSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnSVBBRENDQWdvQ2dnSUJBSnY4CmV0RHBLeDY1S0ZKT1RqclhqckZxZmZ2cmI1UkdmUnc2M2pzRWsvQXBxcDI5UTNGZW1FVEVBSERzTy93ZkpQK2UKMEkvS2xMaUhVWStxbU5RdkZXV01LZndrTmt3U1hwUHQ1d0lLMWRVYlFXWGZDQWVJVS9rbXFEbmphK21ySElZaApiYmduaHcvMmljUTh6U1g1SGtRWXE4ZHhxWnlGeFhrQkI2K1NYTTIwRkFQUUs0bDNCazlqNmZmK2g0dVhhUUgrCjZUSks3T1BtSVcwYVdseUUvVlFlb2hzRzJ6ZXdSRnBxaWI2TWtVQ0NqR2dJL3EvOVFkejZPNDBiKysxRjhBZUMKbnJyQlFOSWhBdzYzSi91YWV6N0gxVjlJYW9NQ25PVytBMVRkTlhqYnJucnpoSlhDZCtDK282V1BSWDVBVmRuRgp4Q0liREQybllzdFNNVDd4a0lmQTRkNGliVTNLV0M4MWVPakJGZXkvR0xOUUFobC9jYm45bkcwTXpHbUJOZjRKCjQwR1M4TlM3QU5sS3B0cHpXREJFbVBZRS82Ym9ZQjd6VFVKOGdIaWlPaTU0QVJLRmhmeVl1dXROclNWNllhUy8KU2pYVXlveklyaHM0RkdHOUFjQ0NiQTRwUWN0K3ZnN1ZuSHA2WEFYRW9jendOWnNhQ2tmZmNGMWdnK2IyRWwyTAozRVR1eU9nODAxb2dQMUFLSG9GQXA5TzdrRENvYTlUdTRxaXpUWXU3NlNEcEI1Y2paNE9xUUkyR2xxT2JZdnQ5CkFsZHBma1F6OCtMRmR2TXV3dzBoUmw0UVc3TVM2QWcxYTlCckxDQ0paZ0YzT1c1M1VxS29CcGpCNlFkT05mVkEKdjhEOTE0a1VWQ2x1OWV2R1NFSk1aZXZIL1dZYlE2SkRGdXFLdlhiUEFnTUJBQUdqSXpBaE1BNEdBMVVkRHdFQgovd1FFQXdJQ3BEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQ0FRQkNQeWJmCmMyanE3elc4a0JlcjhOUWl2ekt4akFzYnJqVVBsZW45MlRFNU9DenJQM1lsZDZTcmUvQ205WlVWS005K3ZDTzAKclZ4aGM4bjM0SGM0SE53R2RCc1hwS1Z2b1VRSS95NEhMTGpoZTVzak5NOVZHRTI2NFNqeS84cnRvZkc0eVN1SApvQzJva0JZdWF1d1ppZlJTTldpYWdRV3E0dEhWcUZVY2s1NWZLVUJqR0tvZzFTZm5jOWZoc0liZUlPYnk1N20wCjUvMjJZL2lYZERlSyt1VExvZUYxWkpwbEcyQ3VYblRkQm1wTGRRVzlpeXJFT2NmMDMybnI3YXg0OWtjZGJaVmwKS0ZDSWdya09wNlhaL0NPbE4xNytRTE5oNjlqU0RqT2taeUNsbUNQdEJ6cmx3K1FwNTR5OStWNk91WHptSCsvWgppZTdhcWNOMG5mNVd3Vkt4Z2NITGtMcE9vRUJsQkxCb05SQWRySDcvQTM3c0poK2ZFWXZra1JsM0pUblA3aTA5CkozM2FObE56dmRxUmI4czhaU1NkNWZJZjl6dnZrK2k1OGRobjhUeDVKSmY0cG11b0hUMzVBdzNKMWJUTkNYWFkKM1JqaUk2N0cyOTdGakxrbWozVVpmQ0ZMTDB0NWNqYmp0TkxhcUk1UXJvUFlmSVB0M2VXZXlEaUdib3luY1dpMQpOUDQrYjZiellZNzJMMWJWSGlBRjZnT1E0ZkVYc1FKdzRtdnQxb0NPdkV1NjdzQzBMWXg1Z0F6ZUZ6YUlsM29FCk1qTlFralY5aFJtWGx6elN1OC8rSkhjclZTVXZQZHl1NE1RMnNmUkRTWlZFTjBPSmVjM3p2eGZ1SXhkZE8rUGgKOVRGak4zdFMxTEJTeEE2OWlXb1IxTURmaThpM1pvY1JKOW94a3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg","kubernetesNamespace":"prod","servicePortCoefficient":0,"requireDeploymentMessage":true,"requireHealthCheck":true,"concurrencyLimit":-1,"additionalParams":"{\"type\": \"LoadBalancer\", \"annotations\": \"annotations:\", \"internalLB\":\"service.beta.kubernetes.io/azure-load-balancer-internal: \\\"true\\\"\", \"kafka_servers\": \"prod-westus2-kafka-1-broker-1001.internal.logz.io:9092,prod-westus2-kafka-1-broker-1002.internal.logz.io:9092,prod-westus2-kafka-1-broker-1003.internal.logz.io:9092\", \"graphite_host\": \"graphite.prod.westus2.internal.logz.io\", \"consul_server\": \"consul-prod-us-east-1.internal.logz.io\", \"salt_extra\": \"--idle\"}"},{"id":70,"name":"logzio-prod-westus2-logengines","geoRegion":"westus2","availability":"PROD","kubernetesMaster":"https://logzio-westus2-prod-aks-2-logengines-06278ae3.hcp.westus2.azmk8s.io:443","kubernetesToken":"******","kubernetesCaCert":"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUV4ekNDQXErZ0F3SUJBZ0lRYk5RcktIcTdZempHMG1HMWs3dFBNREFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB4T1RBMk1UQXdPVEUyTVRkYUZ3MDBPVEEyTURJd09USTJNVGRhTUEweApDekFKQmdOVkJBTVRBbU5oTUlJQ0lqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FnOEFNSUlDQ2dLQ0FnRUF6c2txCklsRzNtMncxY3ZHYXJPY1dtNXdkMkZTOVcxR05LeHhiV0p4U3k1bHpEUjlJcUJtR1pjaGlHMytDUjkxNFgvdCsKNUNOeGJvL1RMa3lLengzZnFFVktJUGNQY2tuamFpYU1ScmE3c0gyeHpFcWNEMDJBalZvMG83cFVuNHVRbzg2QgpTMWU0TmVuZnF3QklBcUtrcmYxcUlNczR3Wm5iZFNKVThGTElZSGZpaFJRVHRDQ0M5SnM0eWpjbHBudW16QXpxCnppLzFCSlpQbzNUU1JiZGdSeUVncDBTQnZza3U1S1dhaDNwdWhGTmRhdk0vNlQ3alNkWTlkOG9oSktFZmd0TFYKNGQrQWNPWnlXVnloQVkrdEZTbmVBMHRJTUJ6eFVvNXJMZmpsMzJOZmRranh2UC9ibXgwY0tUZkxXK0ZKV2F4RwpDVERkVUdHRWIwVUd1NmV5UXp4YzY3MDJITTZGVkdsT092eGhUSjlwQWF3Qld3UHhqU1l1WmdNcWNDdU4yT3RrClZmaUtHT3U4eVZyTGxYd1hpSEs3Y21DaHFUL2VGaE81TGJOOVdteWV3dm1DRG9Qd2YySk5iblRxTm5rU0xPUVgKSmxES0JHRVpFeWZjbTJNZDg0T29qV1ZFR0V5YmtOQzQzVGMzekMwcG1QaFBGZzVmZFBJSUd4UlJxTVpDTmNhSwpGWE1ZVndjK2djMU5ucjJZTWcwSEZ2ZFZZY1JOR1ZjUGs2Mko3VDRmSThEUWJ0Sktzb3ZINHNqYXU2cTZ2VDJPCkN4bEduRzZQb3c5RFFXbmQyMW1vY2R3OURMR2Q3cEhlVG1vQm91UFVna2FuTEhTcThqTmlXanZhTEwyUmlUUzcKbVg4YUNzQmYya0JiWlBEUGQydHlxYWhQdUJzbU1sYnNEYU5pK1pNQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFILwpCQVFEQWdLa01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dJQkFHcUdKeTVNCnNSN2g2YlM1K3B3TmhIK2J4eTZBM2ErRXhOU1crZ2dkL1RzazFuUlIvK3RBbVI2THVKS3ZSNVBaSHRjQUxBVkoKc09ZSEZjYWt4UWMyTFlucmF4TGhIVHpLclNDcHhEVml6cjl6eUFGQWNkU1Urb3dmaTFkeTFWampLV1lYUjM1dgo0cW9xTWJLdW4xelpaOWZNSmxiZmNNL21jSnEwT2c1ZGJ3T0hpVHdtL3pQb3Q2dnkweFBKSnBYMUFuOURhR0haCjI4dEdnNWZQbkVYMGdoVjEzNmdYcUhiRXJIZGpIeTdhVEFxZGxHNTFheEJCT3UwOHJMeTY4VGpZU2dzYTI4d00KSkFKNjhtWWVzb2NiRmJtS2M4U21laTdEWFVKUEszRTlxWEdwblkrKzhZVmxLOTFyQXpSbkNpMy9tZGZiR21jZwo4WExTK3A0THhlWERRbWVWa00xSHlLZ1ZCOThuTTNjZVdiakZQaWZqKzJ6bHpOdkZIT3R2RnhuNUtSR0U2ckE3CmdVTTcxbkNwcENQQVFtY2dVSlpGS3cySGZjdUNHYUNlRFB2NCtlZzJVM3JKNHdtOFVSVk9URW9paEZWeFUzUDcKRWtiMURaRlNJK2lGdDJGWklvTkc1L2ZYY1BlTG9KUlc1WEwvaXNIYWYxMG82U2hOK0k0d2g0MkxSNFNGNERmdQpka3AzL1U5Q2dxL3c1aWJESnJHRmMzZ1JrZzZET0tUV2ZrT2VDMDN6U2ZzR2lnM2ExOVJTcGk0UFRzdDZPUmFaCkVIYUpzZ1o0emtXa1dzdksreXpBN0FRMTUyR0x1YllMbG5ZeFZhK0F5OCtXY0tJU2ZEbFlZT2xWdlk0WXJ0V04KWjRxdDR3MzJRUEl4YXFWNlF0WVh5ZmJiSlluamE3SGxPUE12Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K","kubernetesNamespace":"prod","servicePortCoefficient":0,"requireDeploymentMessage":true,"requireHealthCheck":true,"concurrencyLimit":-1,"additionalParams":"{\"type\": \"LoadBalancer\", \"annotations\": \"annotations:\", \"internalLB\":\"service.beta.kubernetes.io/azure-load-balancer-internal: \\\"true\\\"\", \"kafka_servers\": \"prod-westus2-kafka-1-broker-1001.internal.logz.io:9092,prod-westus2-kafka-1-broker-1002.internal.logz.io:9092,prod-westus2-kafka-1-broker-1003.internal.logz.io:9092\", \"graphite_host\": \"graphite.prod.westus2.internal.logz.io\", \"consul_server\": \"consul-prod-us-east-1.internal.logz.io\", \"salt_extra\": \"--idle\"}"},{"id":71,"name":"logzio-prod-westus2-scanners","geoRegion":"westus2","availability":"PROD","kubernetesMaster":"https://logzio-westus2-prod-aks-4-scanners-d8914f8b.hcp.westus2.azmk8s.io:443","kubernetesToken":"******","kubernetesCaCert":"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUV5RENDQXJDZ0F3SUJBZ0lSQU5rZE1pdDcxRE9Fa1cxYVNXckx2eDB3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTVRrd05qRXdNRGt4TmpJeldoY05ORGt3TmpBeU1Ea3lOakl6V2pBTgpNUXN3Q1FZRFZRUURFd0pqWVRDQ0FpSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnSVBBRENDQWdvQ2dnSUJBTzFZCmREdWw5cVR4UGp0RWR5QnJMVWJuejRKZDY3SEtjZzlRWVhQTDFiS0czSlphS3N0blAzUk9hYTVGcXltOXduU2kKRTZaQklYVlVhUWJuRU9ONXBlTk55Mi9Pb3orSnEyMis1am5mMkx2emhUMXdpeldKU2tDMnVkS2hrbkwxYlNlYgpiTG5WaGdzUktsSW5NK011Qms1TDI3Zk5Yam5QUzJGODNxTmxiTmJzUHp6SWtNK294OXJNUlFrTWkxS3pVQ0QrCmV2cTNZMmhEK092cjV3ZGJpV2FoMDkzTkc1Y1FidUJ0aW9Eamx6SW5CdDE3Q3ZLRGhhd2VOU2FKdjU1MUppL1gKL29LdHo0aFd5MytWQlFTUGM3cnQwaGxkU3VMMzhaOFdhbVFOWkk2TW42UkJhZ1F6SHFxOUhZMmZjNTJjanVlMQp4bml0U2k3WUhqNVlIWDF6RWk2a3JDV3dDczZ1TUZYRWo3Y2tZNEN3S3BFcEgrVSttc3phYUcvVzJIaUtQclVaCi9jNzNXcXVmYTdEMGY4Sk1NazkzRzVONGRUcnVLNXVMUzBtMW5wbGo0TkFBRHI5emZYS1VvRTBPMC9mY2QyVTAKN2xQZjdiWHE5cGR3c0gyTXRVS1Rac1BTMlFSNnQ3ZlFiNVNIS0d3Mm90SEJtUzAvVlc3NFRtUTJ1bGU0a3czQgp6RjE0bXpkcHN2WU53enJZU0hWREV0b2dGNmxpODR5WDl3dEY3czhWTmZxaGNJaGIyVHpBWWljRzB0cHlZeGRuCmtpckk2VXBlMWdoN0tmbE9zaDVMaVVNcnVENkF5dG9YUlVKcm96dmlrNGFNSWZtc3NNUnk2dDlTb0ZzMU1mNzIKL2pPTFNVUC9HUkhGRGQ0ZjJ2VmFUWEdTa3Q1Q1dLYVNDeGFqY2pJN0FnTUJBQUdqSXpBaE1BNEdBMVVkRHdFQgovd1FFQXdJQ3BEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQ0FRQ2QwNktqCmxhSHYyaTVFYXZuc3BDZXRFOVlydzBQQnZnL0lJY3Ewa01nenhINmZIWm5qaTZDZkd2UExKWmN1Q3JDTWRqaEIKQ2NlWkE3eGJHRWJudHI4RWt1bG52R085Y204QWF4NXoxaWZNODJTRXkzRFZSdGcxUUE4Qncxd3FkK0UzNFR4bApGblpmSWRQTVJIYTIxdkdXQkNmZlRoNDl1TTVQc3dRUG1qUkQwc2FiTVhrYnpROW5JUHZ4OUhYNGZ0SFdhTXhrCmJ0TXZyRUJORXhpSkdYNS9zOUhvVzBTRVhhY25lZG9YM2FWY2g2WGVJSlVRMVM4cGFLRWh0R2o1bUZWVEJZUmQKUFl0YkNtbnhDcktlNkhhbG9sU2w3dXZORFpzVEN1NzZSZ3E5L245a3h5c005S292a0YyNjVKVFdhY1lVUm1OLwpsb0pXekcyTGRFUnhYa3RQZldleElVdGtUY0NMZVRVQkpRWHQvaldPUTRPWUYwdlpiQ1grTnlFaTBKM21WSER0Cjh1TEJQZEZRRjVMWGVxNW1oendUSHlkSGtRSlV5aWtpYVowdDkxNXhuc2NMQXF0Y29rMDZoVUUzMWt1S3pZa2gKU01hZ25YVWNrR3hjT1o4OUYvK2ZNUHF5WCtaSXd5WmlIcXlFVytTa3BYTlZ4MGJPKzNFb1pSdDM4YXhrVzZHYQo5ZzFmQ1NMbVh5MGxLcTl0bXg3YUQ1M3RHK3VZM3I3TnBqQmNGZk5KWUtNYVBsVGU5d2VrUk5jTzdMOWxPWmtDCnpxeGhtdkNmaXRVaFRsREVsMVdFdnduZlBsNU80cVYxZVVGZ29QaFp4TWc2enArdjRpblpCSDJ3VU9PQll4R3cKcFVrZUxmNS9tSHZuZHNxNmVlbUxJaTVEcVlwU2ZnZkszVGZzcGc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg","kubernetesNamespace":"prod","servicePortCoefficient":0,"requireDeploymentMessage":true,"requireHealthCheck":true,"concurrencyLimit":-1,"additionalParams":"{\"type\": \"LoadBalancer\", \"annotations\": \"annotations:\", \"internalLB\":\"service.beta.kubernetes.io/azure-load-balancer-internal: \\\"true\\\"\", \"kafka_servers\": \"prod-westus2-kafka-1-broker-1001.internal.logz.io:9092,prod-westus2-kafka-1-broker-1002.internal.logz.io:9092,prod-westus2-kafka-1-broker-1003.internal.logz.io:9092\", \"graphite_host\": \"graphite.prod.westus2.internal.logz.io\", \"consul_server\": \"consul-prod-us-east-1.internal.logz.io\", \"salt_extra\": \"--idle\"}"}];
export const stackEnvironmentsMock = [{"id":1,"name":"Production Logengines","stackType":"ENVIRONMENTS","environments":[51,52,59,66,68,70],"enabled":true},{"id":2,"name":"Non-LE Prod envs","stackType":"ENVIRONMENTS","environments":[5,9,58,65,67,69],"enabled":true},{"id":3,"name":"Staging","stackType":"ENVIRONMENTS","environments":[2,7],"enabled":true}];
export const depVersionMock = [{"id":555382,"gitCommitSha":"e523bcc7286d295a7ef339a3d802bbc8f37c17ea","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/e523bcc7286d295a7ef339a3d802bbc8f37c17ea","commitMessage":"Revert Text.comp","commitDate":1565097875000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/8701610?v=4","committerName":"Gal Angel"},{"id":555241,"gitCommitSha":"92b11aa5331f85aba66d137d6642c15cc5cd95f3","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/92b11aa5331f85aba66d137d6642c15cc5cd95f3","commitMessage":"DEV-14383 Time unit select (#3151)\n\n* Add time unit select component\r\n\r\n* Add snapshot photo","commitDate":1565097535000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/11076023?v=4","committerName":"nofar9792"},{"id":555193,"gitCommitSha":"1d33d54f2adb6f138da4ee844a8c75067ca198ae","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/1d33d54f2adb6f138da4ee844a8c75067ca198ae","commitMessage":"Fix selenuim not clear value","commitDate":1565097258000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/12782945?v=4","committerName":"sitbubu"},{"id":555182,"gitCommitSha":"d52204c4b2263f882c718c1b5c1a90ad681f55f1","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/d52204c4b2263f882c718c1b5c1a90ad681f55f1","commitMessage":"Fix again alerts route","commitDate":1565097169000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/11076023?v=4","committerName":"nofar9792"},{"id":555187,"gitCommitSha":"2e700d6af2fbb8abdf48dfb7d90c032d1f37c30c","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/2e700d6af2fbb8abdf48dfb7d90c032d1f37c30c","commitMessage":"ALMOST WORKS","commitDate":1565097104000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/12447231?v=4","committerName":"Eden Turgeman"},{"id":555088,"gitCommitSha":"274fe68ffc3c83c1089fccb83fadb729eec6e9c5","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/274fe68ffc3c83c1089fccb83fadb729eec6e9c5","commitMessage":"CR fixes","commitDate":1565096426000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/11076023?v=4","committerName":"nofar9792"},{"id":555082,"gitCommitSha":"9954a22a26f702eaa4d2dd9c22a8ef8f29831c67","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/9954a22a26f702eaa4d2dd9c22a8ef8f29831c67","commitMessage":"Fix selenuim not clear value","commitDate":1565096345000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/12782945?v=4","committerName":"sitbubu"},{"id":555136,"gitCommitSha":"e1ddd91fbde9545ddbd07980b38ab36c3115ae29","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/e1ddd91fbde9545ddbd07980b38ab36c3115ae29","commitMessage":"DEV-14906 Text ellipsis with tooltip component (#3152)","commitDate":1565095396000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/8701610?v=4","committerName":"Gal Angel"},{"id":555074,"gitCommitSha":"718f38d3c391a4489431e80726db7a1bf764c8b1","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/718f38d3c391a4489431e80726db7a1bf764c8b1","commitMessage":"DEV-14500 Remove react recompose (#3117)\n\n* Remove recompose usage from Drawer.story\r\n\r\n* DEV-13262 Add user management store info (#3113)\r\n\r\n* Add files from other branch\r\n\r\n* Add reset action on login\r\n\r\n* Fix unit tests\r\n\r\n* Removed recompose usage form Modal.story\r\n\r\n* DEV-14591 Add IAM Role authentication to all Fetchers (#3070)\r\n\r\n* Add Generic IAM\r\n\r\n* Add IAM variant to generic bucket\r\n\r\n* Add S3 IAM variant\r\n\r\n* Move shared code to common file\r\n\r\n* External Id should be borderless\r\n\r\n* Add is submitting\r\n\r\n* Pass fake id manually\r\n\r\n* Add fakeId param to saveBucket method\r\n\r\n* Treat different bucket types as the same when saved\r\n\r\n* Update bucket creation flow\r\n\r\n* Replace existing object with new settings, not the server response\r\n\r\n* After a successful save, revert secret key back to ***\r\n\r\n* Handle re rendering on delete/save\r\n\r\n* Change isActive file\r\n\r\n* Add toggle for edit functionality\r\n\r\n* ActiveToggle should have default behavior\r\n\r\n* Remove cloudtrail specific logic for toggling active\r\n\r\n* Add configuration for iam role\r\n\r\n* Update tests for iam role type authentication\r\n\r\n* Remove console log\r\n\r\n* Make animation appear when Toggling for quick edit\r\n\r\n* Remove clutter\r\n\r\n* remove isLoading->isSubmitting\r\n\r\n* Apply PR comments\r\n\r\n* Get logzAccountId for bucketType\r\n\r\n* Remove box shadow from card\r\n\r\n* Cloudtrail toggled will now send update request\r\n\r\n* Add region on newBucket\r\n\r\n* Add logtype to request\r\n\r\n* Dont lost reference to array\r\n\r\n* Apply PR comments\r\n\r\n* React.Fragment should be <>\r\n\r\n* Fix fetcher tests\r\n\r\n* Update elb tests to iam\r\n\r\n* Fix s3 tests to arn\r\n\r\n* Remove update tests from fetchers\r\n\r\n* Fix s3 settings e2e\r\n\r\n* Fix s3 bucket selector\r\n\r\n* DEV-14539 Create tag container with ellipsis (#3093)\r\n\r\n* DEV-14576 Form Fields (#3072)\r\n\r\n* Fields in Reports completed\r\n\r\n* Add missing initial values\r\n\r\n* CR fixes\r\n\r\n* Revert width change\r\n\r\n* Changes due to CR\r\n\r\n* Remove recompose usage from Popover.story\r\n\r\n* Remove recompose usage from Menu.story\r\n\r\n* DEV-14378 Create aggregator select (#3112)\r\n\r\n* Add aggregator select\r\n\r\n* Few changes\r\n\r\n* Remove comments\r\n\r\n* Revert few things\r\n\r\n* Remove export\r\n\r\n* CR fixes\r\n\r\n* DEV-14710 Add new tour (#3080)\r\n\r\n* Add new tour; Change tours activated by Welcome Center Modal\r\n\r\n* CR Fix: Refactor tour navigation method into tour config\r\n\r\n* Remove tours from local env; keep in Staging env\r\n\r\n* Remove tours from staging env\r\n\r\n* Return Tours to staging for testing purposes\r\n\r\n* Change tour token\r\n\r\n* Use built in context of button\r\n\r\n* DEV-14095 Transform shipper button to modal (#2951)\r\n\r\n* Build basic designed modal and shipperButton - no logic, no aditional fields and no clone section\r\n\r\n* add support in logType option\r\n\r\n* Add condition fields ui\r\n\r\n* Separate modal from formik usage\r\n\r\n* Add option to add more then one logType\r\n\r\n* Add margin bottom to labels + remove And word if first fieldCondition\r\n\r\n* Made ui adjustments, support our components and text changes\r\n\r\n* Changed file names to be based on folder path\r\n\r\n* Changed form to be function instead of class component\r\n\r\n* Move logTypeItem outside form\r\n\r\n* Wrapped form components with FastField in order to avoid re render of all form on change + reveal form and field prop inside inner component + move os outside arr\r\n\r\n* Move path placeholder to outer function\r\n\r\n* Changed ShipperButton to FilebeatConfWiz name\r\n\r\n* changed Page to LogzioThemeProvider to wrap btn\r\n\r\n* Insert title inside modal instead of sending it as prop\r\n\r\n* Add form validations\r\n\r\n* Add logType validation + add cancel confirm btns without logic\r\n\r\n* Add action in order to fetch basic yaml conf\r\n\r\n* Implement yaml render all values - exept token, listener which require different action creation\r\n\r\n* Add user auth and listener info support using angular service\r\n\r\n* Add report analytic service\r\n\r\n* Made Hr separator between sections and not between additional info\r\n\r\n* Changed container empty state to regular container + move form functions into form-config\r\n\r\n* called initialFormVal as getInitailFormVal\r\n\r\n* Remove dist test-selectors from git tracking\r\n\r\n* Set log-shippers-service using export functions, no class is needed\r\n\r\n* Download yml file using file-saver module instead href logic\r\n\r\n* Fix generateYamlLogTypeSection typo\r\n\r\n* Move error setters inside outer functions\r\n\r\n* Return data of yml functions onlly on success\r\n\r\n*  changed get angular services recieved with promiseAll\r\n\r\n* Move getUserData logic outside handleSubmit\r\n\r\n* Set renderLogTypes inside function outside component + move osUrls and tooltip text to form coonfig\r\n\r\n* Move build yaml logic to supperate file + simplify its logic\r\n\r\n* Remove true from inline prop since default\r\n\r\n* Rename var and methods fit role\r\n\r\n* Remove text empty state and set style + remove align left from container\r\n\r\n* Remove multiline regex key\r\n\r\n* Changed action flow filebit reterned value to be string\r\n\r\n* remove extra dist path from styleguide gitignore + changed logtypeselct state error to be apiError inside component\r\n\r\n* Move additional field title to be outside additional fields component\r\n\r\n* Move getUserData logic to services instead sit inside component file\r\n\r\n* Move handleSubmit logic to actions-flow\r\n\r\n* changed fieldCondition error supperate for each input\r\n\r\n* Remove angular-file-saver support and used file-saver instead, changed csv service accordingly and made file-saver service independent service\r\n\r\n* Adjust csv tests to new structure of file-saver\r\n\r\n* Changed event.target.name to field.name in radioSelect\r\n\r\n* Remove comments from csv.service\r\n\r\n* Usev build-yaml in action flow using import instead passing callback\r\n\r\n* Seperate logzFilSaver service support both angular and react using 2 different functions\r\n\r\n* Remove styling from Text component tags\r\n\r\n* changed titles to be from Modal type\r\n\r\n* Made interface for form values in order pass in function\r\n\r\n* DEV-14095 Add feature flag support (#3055)\r\n\r\n* Add feature flag support for filebeatcomponent using both angular condition for selection and on react component for rendering\r\n\r\n* Allow option to set component using os flag in order to set it on 2 different location on page\r\n\r\n* Set featureFlag using enum at angular side\r\n\r\n* Made enum with capital + move themeProvider inside container + minor syntax changes\r\n\r\n* Move store to datasource controller in order to check feature flag instead inside component\r\n\r\n* Set reactToAngular component using pass param instead code duplicate\r\n\r\n* Set os type as enum\r\n\r\n* Set enum on action-flow + set flag for show modal without modal dependency + change findIndex without lodash\r\n\r\n* Rebased modal branch leftovers\r\n\r\n* Set featureFlag use old system since still needs to verify store async with angular + changed to IAMS3 from IamS3\r\n\r\n* Set windows/linux with right upper/Lower cases and use value to check instead label\r\n\r\n* Move IFormValues to config + get actionflow os from config\r\n\r\n* Set Os and Format enums uder enums + changed Os to OperatingSystem\r\n\r\n* Changed hardcoded values to use enums\r\n\r\n* Set adjustments after rebasing master\r\n\r\n* DEV-8282 Sneaky elastic (#3131)\r\n\r\n* Docker networks\r\n\r\n* Docker networks\r\n\r\n* Docker network\r\n\r\n* Docker network\r\n\r\n* Docker networks\r\n\r\n* Docker networks\r\n\r\n* Docker networks\r\n\r\n* DEV-14558 Schedule model create (#3120)\r\n\r\n* Fields in Reports completed\r\n\r\n* Add missing initial values\r\n\r\n* CR fixes\r\n\r\n* Revert width change\r\n\r\n* Changes due to CR\r\n\r\n* Add action flow create call\r\n\r\n* Updates\r\n\r\n* Add endpoint and timezone\r\n\r\n* Revert unnecessary file change\r\n\r\n* Cr fixes\r\n\r\n* DEV-12868 Add Limit Exceeded status to request status (#3137)\r\n\r\n* DEV-14097 Convert web-app-ng-injector-provider to const export (#3106)\r\n\r\n* Merge conflicts\r\n\r\n* Merge conflicts V2\r\n\r\n* DEV-14676 Alerts API Service (#3075)\r\n\r\n* Start of alert model\r\n\r\n* Fix api names\r\n\r\n* API fix\r\n\r\n* Add enums\r\n\r\n* Add manipulators\r\n\r\n* Fix api design\r\n\r\n* Add api service\r\n\r\n* Fix kibana field select unit test\r\n\r\n* Fix types\r\n\r\n* DEV-14097 Convert web app ng injector provider to const export (#3140)\r\n\r\n* DEV-14349 Fix tests broken by welcome center flow with FF still disabled (#3077)\r\n\r\n* Dismiss welcome center modal according to new conditions\r\n\r\n* Enable FF\r\n\r\n* Fix logout flaky\r\n\r\n* Fix flaky by try and finally - stupid comment no one reads\r\n\r\n* Revert changes to header test helper method\r\n\r\n* Use open general settings\r\n\r\n* Rename const\r\n\r\n* Disable FF\r\n\r\n* Enable FF\r\n\r\n* Add empty catch\r\n\r\n* Disable FF\r\n\r\n* Enable FF\r\n\r\n* Change navigation validation method\r\n\r\n* Add check\r\n\r\n* Add logout to fix flaky\r\n\r\n* Add logout to fix flaky\r\n\r\n* Refactor test into describe units\r\n\r\n* Catch exception when failing to find enabled features in session storage\r\n\r\n* Fix flaky\r\n\r\n* Attempt method with retries to fix flakey\r\n\r\n* Revert\r\n\r\n* Disable FF\r\n\r\n* Enable FF\r\n\r\n* Fix progress bar value decrease on request abort/cancel\r\n\r\n* Disable FF\r\n\r\n* Enable FF\r\n\r\n* Disable FF\r\n\r\n* Enable FF\r\n\r\n* Log all requests (REMOVE THIS COMMIT)\r\n\r\n* Log all requests (REMOVE THIS COMMIT)\r\n\r\n* Log all requests (REMOVE THIS COMMIT)\r\n\r\n* Log all requests (REMOVE THIS COMMIT)\r\n\r\n* Switch to security takes long, 3 sec not enough\r\n\r\n* Disable FF for diff\r\n\r\n* Enable FF for diff\r\n\r\n* Disable FF for diff\r\n\r\n* Enable FF\r\n\r\n* Log true pending length; REMOVE LOGS FROM THIS COMMIT\r\n\r\n* Increment and log true pending length; REMOVE LOGS FROM THIS COMMIT\r\n\r\n* Add logs REMOVE THIS COMMIT BEFORE MERGE\r\n\r\n* Attempt to bootstrap kibana page before switching to security\r\n\r\n* Comment out logs\r\n\r\n* Add 10 second timeout to all requests REMOVE THIS COMMIT BEFORE MERGE\r\n\r\n* Remove timeout\r\n\r\n* Remove comments and logs\r\n\r\n* Count pending requests by hand\r\n\r\n* OMG THE TEREF\r\n\r\n* Remove call to reset from iproducts\r\n\r\n* Hold for progress bar in 'when user is not admin' suite\r\n\r\n* Revert reset of kibana requests\r\n\r\n* Wait for progress bar before switching account after logging in\r\n\r\n* Print list of files changed\r\n...","commitDate":1565095228000,"committerAvatarUrl":"https://avatars0.githubusercontent.com/u/38426461?v=4","committerName":"ifatregev"},{"id":555027,"gitCommitSha":"a36a40462d0591fac3a15e2a23a25ca0dcb0e635","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/a36a40462d0591fac3a15e2a23a25ca0dcb0e635","commitMessage":"Merge branch 'master' of github.com:logzio/gaia-hermes-ws into report-send-test","commitDate":1565094622000,"committerAvatarUrl":"https://avatars0.githubusercontent.com/u/17049991?v=4","committerName":"Itai Sinai"},{"id":555023,"gitCommitSha":"5e9ca558f67cab7ac8de4231c4af7079872b95bf","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/5e9ca558f67cab7ac8de4231c4af7079872b95bf","commitMessage":"Fix state","commitDate":1565094559000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/11076023?v=4","committerName":"nofar9792"},{"id":554975,"gitCommitSha":"e4f2d666557d58ff5ddd58d38bf4baa20e424d32","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/e4f2d666557d58ff5ddd58d38bf4baa20e424d32","commitMessage":"Fix state","commitDate":1565093529000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/11076023?v=4","committerName":"nofar9792"},{"id":554968,"gitCommitSha":"32811b34e2f7da358d23aa52ec87eef142c66f3a","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/32811b34e2f7da358d23aa52ec87eef142c66f3a","commitMessage":"Remove","commitDate":1565092769000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/8701610?v=4","committerName":"Gal Angel"},{"id":554962,"gitCommitSha":"900e438f1c1b9325411cbd3000b0f7743690f1a5","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/900e438f1c1b9325411cbd3000b0f7743690f1a5","commitMessage":"Fix alert test","commitDate":1565091922000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/11076023?v=4","committerName":"nofar9792"},{"id":554913,"gitCommitSha":"f51b710b5847b7c953d8955681d0cf24b9ba9bd5","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/f51b710b5847b7c953d8955681d0cf24b9ba9bd5","commitMessage":"DEV-14371 Create option to open optimizer creation screen (#2950)\n\n* Start seperation of alert and optimizer\r\n\r\n* Change feature flag name\r\n\r\n* Remove optimizer popper when clicking on createTrigger button\r\n\r\n* Fix ui test\r\n\r\n* Change alert optimizer to work with state\r\n\r\n* Fix ui tests\r\n\r\n* Remove unnecessary code\r\n\r\n* Again\r\n\r\n* CR fixes\r\n\r\n* Fix ui test\r\n\r\n* Rename function\r\n\r\n* CR fixes","commitDate":1565090493000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/11076023?v=4","committerName":"nofar9792"},{"id":554710,"gitCommitSha":"05c1727c494791b1a183a68c4d005ddc59ffbc68","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/05c1727c494791b1a183a68c4d005ddc59ffbc68","commitMessage":"Rejects","commitDate":1565086327000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/8701610?v=4","committerName":"Gal Angel"},{"id":554707,"gitCommitSha":"d36bd38be579ab3fc795695c1d6f8e0154d4154b","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/d36bd38be579ab3fc795695c1d6f8e0154d4154b","commitMessage":"Merge branch 'DEV-12398-Admin-Console-Metrics-Account-Plan' of github.com:logzio/gaia-hermes-ws into DEV-12398-Admin-Console-Metrics-Account-Plan","commitDate":1565085989000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/15690241?v=4","committerName":"Barak Kakoun"},{"id":554543,"gitCommitSha":"d38d03ac703e3d3e0a9240a999ab139b4b1612c2","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/d38d03ac703e3d3e0a9240a999ab139b4b1612c2","commitMessage":"WHAT DA JAM","commitDate":1565085231000,"committerAvatarUrl":"https://avatars0.githubusercontent.com/u/38426461?v=4","committerName":"ifatregev"},{"id":554499,"gitCommitSha":"932cfb273bb1b4fbb24794fca1dc66f3b661f67c","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/932cfb273bb1b4fbb24794fca1dc66f3b661f67c","commitMessage":"Revert that meanttime","commitDate":1565084931000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/1812912?v=4","committerName":"Alon Mizrahi"},{"id":554486,"gitCommitSha":"31a46d7c849ddad451bf3fb4cfb947962a4beda5","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/31a46d7c849ddad451bf3fb4cfb947962a4beda5","commitMessage":"Huzzah","commitDate":1565084363000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/8065975?v=4","committerName":"Amir Tugendhaft"},{"id":554439,"gitCommitSha":"7f4cc45610d9bb690316023203fac850a926594c","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/7f4cc45610d9bb690316023203fac850a926594c","commitMessage":"Ma ze?","commitDate":1565083622000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/1812912?v=4","committerName":"Alon Mizrahi"},{"id":554484,"gitCommitSha":"cdd383e3e211bfae40eabac25fa236861f0bbed4","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/cdd383e3e211bfae40eabac25fa236861f0bbed4","commitMessage":"I am amazed","commitDate":1565083492000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/8065975?v=4","committerName":"Amir Tugendhaft"},{"id":554378,"gitCommitSha":"ee21627c27bb797522b7a18b5a0ecd604ba40fe0","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/ee21627c27bb797522b7a18b5a0ecd604ba40fe0","commitMessage":"Much stable","commitDate":1565082363000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/1812912?v=4","committerName":"Alon Mizrahi"},{"id":554330,"gitCommitSha":"075b40046e8a013c7c20440459a0490a0a6618c1","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/075b40046e8a013c7c20440459a0490a0a6618c1","commitMessage":"Fix rebase problems","commitDate":1565081840000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/11076023?v=4","committerName":"nofar9792"},{"id":554384,"gitCommitSha":"11164a3aec4ee993e5b4dc9b9810cef7ba8ac1ae","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/11164a3aec4ee993e5b4dc9b9810cef7ba8ac1ae","commitMessage":"DEV-14953 Add Azure West EU to smoke env (#3154)\n\n* add env\r\n\r\n* Update config.ts","commitDate":1565081508000,"committerAvatarUrl":"https://avatars0.githubusercontent.com/u/51876145?v=4","committerName":"Omer botenski"},{"id":554324,"gitCommitSha":"9380ddf64baf0643d7bdd118fb5663a7465aa3c2","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/9380ddf64baf0643d7bdd118fb5663a7465aa3c2","commitMessage":"Add .whitesource configuration file","commitDate":1565080874000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/in/16809?v=4","committerName":"whitesource-bolt-for-github[bot]"},{"id":554319,"gitCommitSha":"e0deba37de913e0f56ce2ec3dedf3eac338d72ed","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/e0deba37de913e0f56ce2ec3dedf3eac338d72ed","commitMessage":"Delete package-lock.json\n\nWasn't supposed to be pushed","commitDate":1565080868000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/15690241?v=4","committerName":"Barak Kakoun"},{"id":554158,"gitCommitSha":"36a23e1d17c0de080a1603e2e8e6bf20cfbbb939","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/36a23e1d17c0de080a1603e2e8e6bf20cfbbb939","commitMessage":"Insert query only when relevant","commitDate":1565078496000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/1812912?v=4","committerName":"Alon Mizrahi"},{"id":553877,"gitCommitSha":"f8416fcec51e79e2053d03607b9be4091f042d69","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/f8416fcec51e79e2053d03607b9be4091f042d69","commitMessage":"Fix selenuim not clear value","commitDate":1565075159000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/12782945?v=4","committerName":"sitbubu"},{"id":553868,"gitCommitSha":"e1c819540a015b16c9a19cdf858186f441057906","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/e1c819540a015b16c9a19cdf858186f441057906","commitMessage":"Tests improve","commitDate":1565074962000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/1812912?v=4","committerName":"Alon Mizrahi"},{"id":553863,"gitCommitSha":"86282487ad7b408431327ca9e60c27ffda387037","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/86282487ad7b408431327ca9e60c27ffda387037","commitMessage":"Fix alert test","commitDate":1565074400000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/11076023?v=4","committerName":"nofar9792"},{"id":553814,"gitCommitSha":"d3109f62a186a5cbce012499489ddb9e38f55dc8","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/d3109f62a186a5cbce012499489ddb9e38f55dc8","commitMessage":"Add enable feature flag support for tests usage only","commitDate":1565070738000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/12782945?v=4","committerName":"sitbubu"},{"id":553805,"gitCommitSha":"00f9cea5b84240b10b632742f3ff317868420c09","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/00f9cea5b84240b10b632742f3ff317868420c09","commitMessage":"Update config.ts","commitDate":1565067912000,"committerAvatarUrl":"https://avatars0.githubusercontent.com/u/51876145?v=4","committerName":"Omer botenski"},{"id":553601,"gitCommitSha":"87a094cd7dcadb905182cf3f60fe080aee6f9e35","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/87a094cd7dcadb905182cf3f60fe080aee6f9e35","commitMessage":"add env","commitDate":1565034088000,"committerAvatarUrl":"https://avatars0.githubusercontent.com/u/51876145?v=4","committerName":"Omer botenski"},{"id":553594,"gitCommitSha":"caa04afcf9290b0b621da34cf27e65dc99797ad9","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/caa04afcf9290b0b621da34cf27e65dc99797ad9","commitMessage":"Fix linter to run only on specified files inside e2e folder - solved add '' error","commitDate":1565033655000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/12782945?v=4","committerName":"sitbubu"},{"id":553549,"gitCommitSha":"82103347a284d4ae021ab204fbaf0ca30b6950bc","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/82103347a284d4ae021ab204fbaf0ca30b6950bc","commitMessage":"This dot","commitDate":1565032228000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/1812912?v=4","committerName":"Alon Mizrahi"},{"id":553462,"gitCommitSha":"65013c67d26870ca53c5c551add2304ba81b9ec3","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/65013c67d26870ca53c5c551add2304ba81b9ec3","commitMessage":"Fix linter to run only on specified files inside e2e folder - solved add '' error","commitDate":1565027808000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/12782945?v=4","committerName":"sitbubu"},{"id":553457,"gitCommitSha":"702560145050b1d9ce9645106ebc3af75cb8694d","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/702560145050b1d9ce9645106ebc3af75cb8694d","commitMessage":"Well i think thats it","commitDate":1565027462000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/1812912?v=4","committerName":"Alon Mizrahi"},{"id":553449,"gitCommitSha":"33e9cb27c33306b6411009ae6ea2ad2aecc930a7","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/33e9cb27c33306b6411009ae6ea2ad2aecc930a7","commitMessage":"Bad Bad angular","commitDate":1565025328000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/1812912?v=4","committerName":"Alon Mizrahi"},{"id":553438,"gitCommitSha":"5e3d075d6c123be146236f9a33512954d8d21285","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/5e3d075d6c123be146236f9a33512954d8d21285","commitMessage":"Update new routes","commitDate":1565023612000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/15690241?v=4","committerName":"Barak Kakoun"},{"id":553430,"gitCommitSha":"1e553784ed1775bed4f7afac09e3aaeb412249a6","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/1e553784ed1775bed4f7afac09e3aaeb412249a6","commitMessage":"Simple","commitDate":1565023030000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/1812912?v=4","committerName":"Alon Mizrahi"},{"id":553424,"gitCommitSha":"d9764f7c8223f77bdabcc877d55e7cd5a4b723a9","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/d9764f7c8223f77bdabcc877d55e7cd5a4b723a9","commitMessage":"Might Be a valid solution","commitDate":1565022886000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/1812912?v=4","committerName":"Alon Mizrahi"},{"id":553020,"gitCommitSha":"31c318c4223d8e9eaadf0868b61d689640b89389","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/31c318c4223d8e9eaadf0868b61d689640b89389","commitMessage":"DEV-14543 Scheduled Reports Table - Tooltips (#3127)","commitDate":1565015890000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/8701610?v=4","committerName":"Gal Angel"},{"id":552896,"gitCommitSha":"9d9c3a4679a58b078068a2b49a14d8509b27423e","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/9d9c3a4679a58b078068a2b49a14d8509b27423e","commitMessage":"Add snapshot photo","commitDate":1565015046000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/11076023?v=4","committerName":"nofar9792"},{"id":552890,"gitCommitSha":"93932ad191225ff13e9d07a1da0654941fe3e197","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/93932ad191225ff13e9d07a1da0654941fe3e197","commitMessage":"Lambert","commitDate":1565014856000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/8701610?v=4","committerName":"Gal Angel"},{"id":552843,"gitCommitSha":"de9f4864719d61bc17a98cfc026a4117212899a4","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/de9f4864719d61bc17a98cfc026a4117212899a4","commitMessage":"Digest with carefull","commitDate":1565013125000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/1812912?v=4","committerName":"Alon Mizrahi"},{"id":552835,"gitCommitSha":"c8ad797223b5fbb6cc893ceebb01948c8d107281","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/c8ad797223b5fbb6cc893ceebb01948c8d107281","commitMessage":"Add time unit select component","commitDate":1565012940000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/11076023?v=4","committerName":"nofar9792"},{"id":552797,"gitCommitSha":"46047b4a04ebcdecf716eb5c571288d3c32ec552","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/46047b4a04ebcdecf716eb5c571288d3c32ec552","commitMessage":"Fix linter to run only on specified files inside e2e folder - solved add '' error","commitDate":1565012623000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/12782945?v=4","committerName":"sitbubu"},{"id":552627,"gitCommitSha":"1e62bdf86c90429cb641ea0d2255eb2039785187","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/1e62bdf86c90429cb641ea0d2255eb2039785187","commitMessage":"Merge branch 'master' into DEV-14543-Scheduled-Reports-Table-Tooltips","commitDate":1565010763000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/8701610?v=4","committerName":"Gal Angel"},{"id":552620,"gitCommitSha":"7255086005ac31640721c7823dd5238606d7900a","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/7255086005ac31640721c7823dd5238606d7900a","commitMessage":"Add .whitesource configuration file","commitDate":1565010355000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/in/16809?v=4","committerName":"whitesource-bolt-for-github[bot]"},{"id":552614,"gitCommitSha":"38ac6531ab829fe4a2ce8f2cc5115db02451195d","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/38ac6531ab829fe4a2ce8f2cc5115db02451195d","commitMessage":"Add Highcharts-react hoc","commitDate":1565010325000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/3125539?v=4","committerName":"Yoav"},{"id":552376,"gitCommitSha":"f4a8c1bac0d83104483782007561cc72aa4d4d2a","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/f4a8c1bac0d83104483782007561cc72aa4d4d2a","commitMessage":"Skip these mfers","commitDate":1565007247000,"committerAvatarUrl":"https://avatars1.githubusercontent.com/u/32754747?v=4","committerName":"Tzur Ziv"},{"id":552382,"gitCommitSha":"e5ab277bc535600dbd7eb8cc02c6766b48874f85","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/e5ab277bc535600dbd7eb8cc02c6766b48874f85","commitMessage":"Poppah improvements","commitDate":1565006738000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/12447231?v=4","committerName":"Eden Turgeman"},{"id":552366,"gitCommitSha":"85c6c177ad4668a8a1de798d55afab9ac360f898","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/85c6c177ad4668a8a1de798d55afab9ac360f898","commitMessage":"Merge branch 'master' of github.com:logzio/gaia-hermes-ws into DEV-14560-cron-popover","commitDate":1565006736000,"committerAvatarUrl":"https://avatars0.githubusercontent.com/u/17049991?v=4","committerName":"Itai Sinai"},{"id":552323,"gitCommitSha":"4eb137f8e3266826be49f99893f32823cf06df4f","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/4eb137f8e3266826be49f99893f32823cf06df4f","commitMessage":"Add test report","commitDate":1565006367000,"committerAvatarUrl":"https://avatars0.githubusercontent.com/u/17049991?v=4","committerName":"Itai Sinai"},{"id":552276,"gitCommitSha":"942bb98ba9ed07007ad9ede345d8b283b0198f3b","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/942bb98ba9ed07007ad9ede345d8b283b0198f3b","commitMessage":"Fix linter to run only on specified files inside e2e folder - solved add '' error","commitDate":1565005937000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/12782945?v=4","committerName":"sitbubu"},{"id":552067,"gitCommitSha":"0ba5fee089fa2921d4a5f9c2901135fa52d58135","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/0ba5fee089fa2921d4a5f9c2901135fa52d58135","commitMessage":"DEV-14676 Alerts Redux Entity (#3079)\n\n* Start of alert model\r\n\r\n* Fix api names\r\n\r\n* API fix\r\n\r\n* Add enums\r\n\r\n* Add manipulators\r\n\r\n* Fix api design\r\n\r\n* Add api service\r\n\r\n* Fix kibana field select unit test\r\n\r\n* Add redux entity\r\n\r\n* Fix enums export","commitDate":1565002802000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/8065975?v=4","committerName":"Amir Tugendhaft"},{"id":552230,"gitCommitSha":"5ca8807c3cafa36bf1cf7ce15f720dc92a9a70b3","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/5ca8807c3cafa36bf1cf7ce15f720dc92a9a70b3","commitMessage":"Add tests of add and remove logTypeSections","commitDate":1565000792000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/12782945?v=4","committerName":"sitbubu"},{"id":551884,"gitCommitSha":"8b2f241631489cac5cc8491a0984f75fcb81d5cd","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/8b2f241631489cac5cc8491a0984f75fcb81d5cd","commitMessage":"Fix imports","commitDate":1564998225000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/8065975?v=4","committerName":"Amir Tugendhaft"},{"id":551836,"gitCommitSha":"189806ebadbccfcd2250809144f823b838afa20e","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/189806ebadbccfcd2250809144f823b838afa20e","commitMessage":"Tests","commitDate":1564997832000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/8701610?v=4","committerName":"Gal Angel"},{"id":551968,"gitCommitSha":"686cb8cc480f2b077cc26998687b4874301a2ea1","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/686cb8cc480f2b077cc26998687b4874301a2ea1","commitMessage":"DEV-14541 Error Indicator for Disabled Report (#3135)","commitDate":1564997627000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/8701610?v=4","committerName":"Gal Angel"},{"id":551975,"gitCommitSha":"eb797bb4d480592764eb06efbebdc8c749c6c508","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/eb797bb4d480592764eb06efbebdc8c749c6c508","commitMessage":"DEV-14942 Scheduled-Reports-Test-Report-Action-Flow (#3145)","commitDate":1564997588000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/8701610?v=4","committerName":"Gal Angel"},{"id":551819,"gitCommitSha":"4bc540a58abb1b8f8fa5976cd2a367d9b161013a","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/4bc540a58abb1b8f8fa5976cd2a367d9b161013a","commitMessage":"Fix enums export","commitDate":1564997110000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/8065975?v=4","committerName":"Amir Tugendhaft"},{"id":551822,"gitCommitSha":"41c85abac70a51df09653b9f6c6175725c986408","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/41c85abac70a51df09653b9f6c6175725c986408","commitMessage":"I forgot to writer await","commitDate":1564997075000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/11076023?v=4","committerName":"nofar9792"},{"id":551830,"gitCommitSha":"3479b634e566c63ecd6c20584c676a7229f72240","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/3479b634e566c63ecd6c20584c676a7229f72240","commitMessage":"DEV-13045 Notification end points (#3132)\n\n* Endpoints and responsive fix\r\n\r\n* Separate Endpoints to 2 components\r\n\r\n* Index.js\r\n\r\n* Move endpoints to shared components, separated formik from the component\r\n\r\n* Add time range props\r\n\r\n* Add missing Grid.Column","commitDate":1564996863000,"committerAvatarUrl":"https://avatars0.githubusercontent.com/u/17049991?v=4","committerName":"Itai Sinai"},{"id":551670,"gitCommitSha":"00fb1e23935788a1d5c51868c11794c152324e1a","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/00fb1e23935788a1d5c51868c11794c152324e1a","commitMessage":"Merge branches 'clear-kibana-settings-cache' and 'master' of github.com:logzio/gaia-hermes-ws into clear-kibana-settings-cache","commitDate":1564994363000,"committerAvatarUrl":"https://avatars1.githubusercontent.com/u/32754747?v=4","committerName":"Tzur Ziv"},{"id":551672,"gitCommitSha":"51efa29fd3ca486e37ee4abc21831fcead6847a1","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/51efa29fd3ca486e37ee4abc21831fcead6847a1","commitMessage":"Merge branch 'master' of github.com:logzio/gaia-hermes-ws into DEV-14676-alerts-redux","commitDate":1564994273000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/8065975?v=4","committerName":"Amir Tugendhaft"},{"id":551674,"gitCommitSha":"e48339c3a32ef31aa318eb7ffbb540c5e2e79816","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/e48339c3a32ef31aa318eb7ffbb540c5e2e79816","commitMessage":"Move fillForm and clearForm logic to page helper","commitDate":1564994265000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/12782945?v=4","committerName":"sitbubu"},{"id":551663,"gitCommitSha":"2fff739f7d9ec0f9c17e8a701880b136063fb22c","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/2fff739f7d9ec0f9c17e8a701880b136063fb22c","commitMessage":"Event callback","commitDate":1564994086000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/1812912?v=4","committerName":"Alon Mizrahi"},{"id":551693,"gitCommitSha":"0f45de7ff576ea4b99f754d6eeb6ff41f5ea31f2","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/0f45de7ff576ea4b99f754d6eeb6ff41f5ea31f2","commitMessage":"Fix rebase problems","commitDate":1564992963000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/11076023?v=4","committerName":"nofar9792"},{"id":551497,"gitCommitSha":"30ac1f07cbd7c723442c8c25e5b8078bdc03d4de","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/30ac1f07cbd7c723442c8c25e5b8078bdc03d4de","commitMessage":"Fix eslint","commitDate":1564990837000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/11076023?v=4","committerName":"nofar9792"},{"id":551490,"gitCommitSha":"bdd0c41f217b7d0e876e0a42d7e91c270c1a0b1c","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/bdd0c41f217b7d0e876e0a42d7e91c270c1a0b1c","commitMessage":"Change react-highcharts to typescript","commitDate":1564989808000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/3125539?v=4","committerName":"Yoav"},{"id":551364,"gitCommitSha":"98bbdd8ea237923fd1e861f6fc9b38db9b33e56c","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/98bbdd8ea237923fd1e861f6fc9b38db9b33e56c","commitMessage":"Hapy","commitDate":1564988735000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/1812912?v=4","committerName":"Alon Mizrahi"},{"id":551317,"gitCommitSha":"b242d7fb38733eef6ec98ec16089221fc941fc92","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/b242d7fb38733eef6ec98ec16089221fc941fc92","commitMessage":"Hapy","commitDate":1564988352000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/1812912?v=4","committerName":"Alon Mizrahi"},{"id":551283,"gitCommitSha":"5f647b5103e7c0d146ed835a907f147f09d06041","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/5f647b5103e7c0d146ed835a907f147f09d06041","commitMessage":"Great lets check that","commitDate":1564988216000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/1812912?v=4","committerName":"Alon Mizrahi"},{"id":551264,"gitCommitSha":"41ef3fbd9888ce6a25d1f55d9f5bf1e037df55c3","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/41ef3fbd9888ce6a25d1f55d9f5bf1e037df55c3","commitMessage":"Gricer","commitDate":1564987854000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/8701610?v=4","committerName":"Gal Angel"},{"id":551252,"gitCommitSha":"f765784ff146ca73d25d7f941d219a50752444bc","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/f765784ff146ca73d25d7f941d219a50752444bc","commitMessage":"DEV-14543 Info tooltip component (#3142)","commitDate":1564986668000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/8701610?v=4","committerName":"Gal Angel"},{"id":550965,"gitCommitSha":"88fca3cea63eb03aaf09a856a3d987904eac6314","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/88fca3cea63eb03aaf09a856a3d987904eac6314","commitMessage":"Tests","commitDate":1564942382000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/8701610?v=4","committerName":"Gal Angel"},{"id":550958,"gitCommitSha":"e7029b0ab7ab604eb8654a8cfc33a2759eb4b3ad","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/e7029b0ab7ab604eb8654a8cfc33a2759eb4b3ad","commitMessage":"Reflation","commitDate":1564941635000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/8701610?v=4","committerName":"Gal Angel"},{"id":550953,"gitCommitSha":"07ad3087f5266f679aae7379c243af3619a242a8","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/07ad3087f5266f679aae7379c243af3619a242a8","commitMessage":"Presbycousis","commitDate":1564940373000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/8701610?v=4","committerName":"Gal Angel"},{"id":550939,"gitCommitSha":"47235ed16443742887c8edda3f87ff841f17b33a","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/47235ed16443742887c8edda3f87ff841f17b33a","commitMessage":"Fix the test finally","commitDate":1564939538000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/11076023?v=4","committerName":"nofar9792"},{"id":550935,"gitCommitSha":"3988f5d971c443eb9a683ff38bf43a54ddb4c426","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/3988f5d971c443eb9a683ff38bf43a54ddb4c426","commitMessage":"Resolve","commitDate":1564939317000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/8701610?v=4","committerName":"Gal Angel"},{"id":550929,"gitCommitSha":"bba61410e38614a17552e3ba315693499e055817","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/bba61410e38614a17552e3ba315693499e055817","commitMessage":"Fix unit test","commitDate":1564937741000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/11076023?v=4","committerName":"nofar9792"},{"id":550921,"gitCommitSha":"1e726fb08721e7ac31f7a8a78261b8583961d225","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/1e726fb08721e7ac31f7a8a78261b8583961d225","commitMessage":"DEV-10848 Handle Switch to same mode & E2E improvements (#3139)\n\n* Commit 1\r\n\r\n* So much good","commitDate":1564936370000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/1812912?v=4","committerName":"Alon Mizrahi"},{"id":550711,"gitCommitSha":"87ad3d5b0bf03b68e7531fd927da3061576be5f5","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/87ad3d5b0bf03b68e7531fd927da3061576be5f5","commitMessage":"REvert","commitDate":1564934236000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/1812912?v=4","committerName":"Alon Mizrahi"},{"id":550705,"gitCommitSha":"aabb2eb7629ecc120e4c795e4745b85870de5e88","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/aabb2eb7629ecc120e4c795e4745b85870de5e88","commitMessage":"No need for eslints like that","commitDate":1564934140000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/1812912?v=4","committerName":"Alon Mizrahi"},{"id":550823,"gitCommitSha":"1f8972a84d8b42ebca5a727a936f6901eaa22444","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/1f8972a84d8b42ebca5a727a936f6901eaa22444","commitMessage":"DEV-14097 Convert web app ng injector provider to const export V3 (#3144)\n\n* Convert import name for angular service\r\n\r\n* Jenkins load run groovy file in the prep stage","commitDate":1564934117000,"committerAvatarUrl":"https://avatars0.githubusercontent.com/u/38426461?v=4","committerName":"ifatregev"},{"id":550697,"gitCommitSha":"77f47b05694634d31c1c037e2d2eb8a79fec1628","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/77f47b05694634d31c1c037e2d2eb8a79fec1628","commitMessage":"DEV-14941 Changed the approach","commitDate":1564933741000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/12447231?v=4","committerName":"Eden Turgeman"},{"id":550556,"gitCommitSha":"7bd755d1f679dc2ac87a255903e12f1713524aac","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/7bd755d1f679dc2ac87a255903e12f1713524aac","commitMessage":"Jenkins load run groovy file in the prep stage","commitDate":1564931787000,"committerAvatarUrl":"https://avatars0.githubusercontent.com/u/38426461?v=4","committerName":"ifatregev"},{"id":550549,"gitCommitSha":"e989234aca66b9765d2bb1eea8b64dc9eb60af3e","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/e989234aca66b9765d2bb1eea8b64dc9eb60af3e","commitMessage":"Add ui test for create alert and optimizer from insights","commitDate":1564931333000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/11076023?v=4","committerName":"nofar9792"},{"id":550380,"gitCommitSha":"d935f2ad0a4e4846900bcf59db7dd159d7bf7c54","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/d935f2ad0a4e4846900bcf59db7dd159d7bf7c54","commitMessage":"Merge from master","commitDate":1564929860000,"committerAvatarUrl":"https://avatars0.githubusercontent.com/u/17049991?v=4","committerName":"Itai Sinai"},{"id":550376,"gitCommitSha":"67d6f7df18ea71923ae715519ea65e0b400f1202","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/67d6f7df18ea71923ae715519ea65e0b400f1202","commitMessage":"Convert import name for angular service","commitDate":1564929838000,"committerAvatarUrl":"https://avatars0.githubusercontent.com/u/38426461?v=4","committerName":"ifatregev"},{"id":550653,"gitCommitSha":"88d046a05c36e77c16578554521b12a836a47723","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/88d046a05c36e77c16578554521b12a836a47723","commitMessage":"Initial","commitDate":1564928545000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/8701610?v=4","committerName":"Gal Angel"},{"id":550287,"gitCommitSha":"d8118200ff929dc6ae8da59fe5b8808682dbdba5","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/d8118200ff929dc6ae8da59fe5b8808682dbdba5","commitMessage":"After CR","commitDate":1564928159000,"committerAvatarUrl":"https://avatars0.githubusercontent.com/u/38426461?v=4","committerName":"ifatregev"},{"id":550240,"gitCommitSha":"243b14386da0c8f43a9013aa156090b1e529466e","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/243b14386da0c8f43a9013aa156090b1e529466e","commitMessage":"Change cache key","commitDate":1564927283000,"committerAvatarUrl":"https://avatars1.githubusercontent.com/u/32754747?v=4","committerName":"Tzur Ziv"},{"id":550186,"gitCommitSha":"fd6ae837e048abcc5fadf2ac09e5be297ecbcebc","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/fd6ae837e048abcc5fadf2ac09e5be297ecbcebc","commitMessage":"Update storybook/stories/components/Overlays/Drawer.story.js\n\nCo-Authored-By: Amir Tugendhaft <Amir.T@logz.io>","commitDate":1564927019000,"committerAvatarUrl":"https://avatars0.githubusercontent.com/u/38426461?v=4","committerName":"ifatregev"},{"id":550178,"gitCommitSha":"5941bd40c023025b19a84754bf8b7f4bb57d9bc2","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/5941bd40c023025b19a84754bf8b7f4bb57d9bc2","commitMessage":"Update storybook/stories/components/Navigation/Menu.story.js\n\nCo-Authored-By: Amir Tugendhaft <Amir.T@logz.io>","commitDate":1564926797000,"committerAvatarUrl":"https://avatars0.githubusercontent.com/u/38426461?v=4","committerName":"ifatregev"},{"id":550170,"gitCommitSha":"6c19f1c341403b8db598ea3ce8d465cb848865e3","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/6c19f1c341403b8db598ea3ce8d465cb848865e3","commitMessage":"DEV-14941-Change-TextArea-OnChange-Behavior","commitDate":1564926539000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/12447231?v=4","committerName":"Eden Turgeman"},{"id":550102,"gitCommitSha":"32664506794477f2aca973c830450fe771820da0","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/32664506794477f2aca973c830450fe771820da0","commitMessage":"Pull from origin master","commitDate":1564926157000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/8065975?v=4","committerName":"Amir Tugendhaft"},{"id":550107,"gitCommitSha":"df04ea9fed41fd6a30ee44ba0c2e063e821f1c4c","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/df04ea9fed41fd6a30ee44ba0c2e063e821f1c4c","commitMessage":"DEV-13262 Initial user management table (#3116)\n\n* Convert to function component\r\n\r\n* Remove redundant handlers\r\n\r\n* Add store info for the user management\r\n\r\n* Add columns\r\n\r\n* Remove redundant delete modal text\r\n\r\n* CR fixes","commitDate":1564925770000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/8065975?v=4","committerName":"Amir Tugendhaft"},{"id":550157,"gitCommitSha":"8390350275947d90cd25e965972bf34f64a8b01f","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/8390350275947d90cd25e965972bf34f64a8b01f","commitMessage":"DEV-14448 Fix CloudFront Flakiness (#3095)\n\n* Change dismiss notification flow and timeouts\r\n\r\n* Bring back cloudfront tests\r\n\r\n* Should try to create iam settings","commitDate":1564925623000,"committerAvatarUrl":"https://avatars1.githubusercontent.com/u/32754747?v=4","committerName":"Tzur Ziv"},{"id":549791,"gitCommitSha":"136ab79ada4257906746c18bc0e602a674bc124d","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/136ab79ada4257906746c18bc0e602a674bc124d","commitMessage":"Merge branch 'master' of github.com:logzio/gaia-hermes-ws into clear-kibana-settings-cache","commitDate":1564922468000,"committerAvatarUrl":"https://avatars1.githubusercontent.com/u/32754747?v=4","committerName":"Tzur Ziv"},{"id":549785,"gitCommitSha":"67646397fdd51df5ff12ecaf1d542715142b7210","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/67646397fdd51df5ff12ecaf1d542715142b7210","commitMessage":"Add .whitesource configuration file","commitDate":1564922025000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/in/16809?v=4","committerName":"whitesource-bolt-for-github[bot]"},{"id":549777,"gitCommitSha":"c3e39abc21977079e36b6a6776fdaa54776de011","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/c3e39abc21977079e36b6a6776fdaa54776de011","commitMessage":"DEV-14349 Fix tests broken by welcome center flow with FF still disabled (#3077)\n\n* Dismiss welcome center modal according to new conditions\r\n\r\n* Enable FF\r\n\r\n* Fix logout flaky\r\n\r\n* Fix flaky by try and finally - stupid comment no one reads\r\n\r\n* Revert changes to header test helper method\r\n\r\n* Use open general settings\r\n\r\n* Rename const\r\n\r\n* Disable FF\r\n\r\n* Enable FF\r\n\r\n* Add empty catch\r\n\r\n* Disable FF\r\n\r\n* Enable FF\r\n\r\n* Change navigation validation method\r\n\r\n* Add check\r\n\r\n* Add logout to fix flaky\r\n\r\n* Add logout to fix flaky\r\n\r\n* Refactor test into describe units\r\n\r\n* Catch exception when failing to find enabled features in session storage\r\n\r\n* Fix flaky\r\n\r\n* Attempt method with retries to fix flakey\r\n\r\n* Revert\r\n\r\n* Disable FF\r\n\r\n* Enable FF\r\n\r\n* Fix progress bar value decrease on request abort/cancel\r\n\r\n* Disable FF\r\n\r\n* Enable FF\r\n\r\n* Disable FF\r\n\r\n* Enable FF\r\n\r\n* Log all requests (REMOVE THIS COMMIT)\r\n\r\n* Log all requests (REMOVE THIS COMMIT)\r\n\r\n* Log all requests (REMOVE THIS COMMIT)\r\n\r\n* Log all requests (REMOVE THIS COMMIT)\r\n\r\n* Switch to security takes long, 3 sec not enough\r\n\r\n* Disable FF for diff\r\n\r\n* Enable FF for diff\r\n\r\n* Disable FF for diff\r\n\r\n* Enable FF\r\n\r\n* Log true pending length; REMOVE LOGS FROM THIS COMMIT\r\n\r\n* Increment and log true pending length; REMOVE LOGS FROM THIS COMMIT\r\n\r\n* Add logs REMOVE THIS COMMIT BEFORE MERGE\r\n\r\n* Attempt to bootstrap kibana page before switching to security\r\n\r\n* Comment out logs\r\n\r\n* Add 10 second timeout to all requests REMOVE THIS COMMIT BEFORE MERGE\r\n\r\n* Remove timeout\r\n\r\n* Remove comments and logs\r\n\r\n* Count pending requests by hand\r\n\r\n* OMG THE TEREF\r\n\r\n* Remove call to reset from iproducts\r\n\r\n* Hold for progress bar in 'when user is not admin' suite\r\n\r\n* Revert reset of kibana requests\r\n\r\n* Wait for progress bar before switching account after logging in\r\n\r\n* Print list of files changed\r\n\r\n* Revert print files\r\n\r\n* Disable FF\r\n\r\n* Enable FF\r\n\r\n* Bring back reset progress bar on kill products\r\n\r\n* Disable FF\r\n\r\n* Enable FF\r\n\r\n* Fix stale element flakiness by using proper test helper method\r\n\r\n* Refactor tab controls to use names\r\n\r\n* Refactor tab names to enums\r\n\r\n* Fix header test\r\n\r\n* Fix bad call\r\n\r\n* Comment out waiting for progress bar'\r\n\r\n* Renames\r\n\r\n* Add logs, REMOVE THIS COMMIT\r\n\r\n* Remove logs\r\n\r\n* Fix Welcome-center test\r\n\r\n* Return logs; REMOVE THIS COMMIT\r\n\r\n* Remove comments\r\n\r\n* Disable FF\r\n\r\n* Enable FF\r\n\r\n* Add logs; REMOVE THIS COMMIT\r\n\r\n* Wait for login\r\n\r\n* Separate calls inside loginFlow\r\n\r\n* Try different call order inside loginFlow\r\n\r\n* Login flow call order\r\n\r\n* Disable FF and prepare for CR\r\n\r\n* CR Fix: Remove unused import\r\n\r\n* CR Fix: Extract to function\r\n\r\n* CR Fix: Make function readable\r\n\r\n* CR Fix: Change order of login flow calls\r\n\r\n* CR Fix: Better destructing\r\n\r\n* CR Fix: Revert commenting out of test unit and pass skip as third argument\r\n\r\n* CR Fix: Remove comment\r\n\r\n* CR Fix: Rename\r\n\r\n* CR Fix: Remove comments\r\n\r\n* Fix missing rename\r\n\r\n* Remove try since method should fail if cache is unavailable\r\n\r\n* Revert tab naming changes\r\n\r\n* Attempt to correctly capture all errors in pipeline even when spec is deeply nested\r\n\r\n* Remove rejections","commitDate":1564920816000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/22911480?v=4","committerName":"ojamui"},{"id":549687,"gitCommitSha":"2a02fbf1d930a17140c3fefc4b12fa3bf8868166","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/2a02fbf1d930a17140c3fefc4b12fa3bf8868166","commitMessage":"Merge branches 'clear-kibana-settings-cache', 'master' and 'clear-kibana-settings-cache' of github.com:logzio/gaia-hermes-ws into clear-kibana-settings-cache","commitDate":1564919626000,"committerAvatarUrl":"https://avatars1.githubusercontent.com/u/32754747?v=4","committerName":"Tzur Ziv"},{"id":549643,"gitCommitSha":"7b8fdd6eb2f7f3043b93e0f6bf638bb222009f97","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/7b8fdd6eb2f7f3043b93e0f6bf638bb222009f97","commitMessage":"Merge branches 'fix-cloudfront-flakiness' and 'master' of github.com:logzio/gaia-hermes-ws into fix-cloudfront-flakiness","commitDate":1564919570000,"committerAvatarUrl":"https://avatars1.githubusercontent.com/u/32754747?v=4","committerName":"Tzur Ziv"},{"id":549547,"gitCommitSha":"f7f3b5d11286ca023a83abbedaa9e8edb8abd827","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/f7f3b5d11286ca023a83abbedaa9e8edb8abd827","commitMessage":"Merge branch 'master' into DEV-14349-Tests-with-feature-enabled","commitDate":1564917359000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/22911480?v=4","committerName":"ojamui"},{"id":549556,"gitCommitSha":"85ab612797507549655f9c75b15b9a5c1bd4d330","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/85ab612797507549655f9c75b15b9a5c1bd4d330","commitMessage":"DEV-14097 Convert web app ng injector provider to const export (#3140)","commitDate":1564917318000,"committerAvatarUrl":"https://avatars0.githubusercontent.com/u/38426461?v=4","committerName":"ifatregev"},{"id":549543,"gitCommitSha":"a33e4e8eac7f996c2037dde9e00100bb6e3aa883","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/a33e4e8eac7f996c2037dde9e00100bb6e3aa883","commitMessage":"Remove rejections","commitDate":1564917232000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/22911480?v=4","committerName":"ojamui"},{"id":549325,"gitCommitSha":"f98d4cc5dbf1f163dbe93a8676a5871cc9f37316","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/f98d4cc5dbf1f163dbe93a8676a5871cc9f37316","commitMessage":"Ignore some things","commitDate":1564909624000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/1812912?v=4","committerName":"Alon Mizrahi"},{"id":549279,"gitCommitSha":"d5327f3f55af1aaf0b7ebddb5144c0ac6321a2b0","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/d5327f3f55af1aaf0b7ebddb5144c0ac6321a2b0","commitMessage":"Fix types","commitDate":1564908587000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/8065975?v=4","committerName":"Amir Tugendhaft"},{"id":549154,"gitCommitSha":"7f4237159e20598087fc9c65bf6888b70834db0e","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/7f4237159e20598087fc9c65bf6888b70834db0e","commitMessage":"Remove logs and comments","commitDate":1564902318000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/1812912?v=4","committerName":"Alon Mizrahi"},{"id":549146,"gitCommitSha":"3140246e36f7375011501d4dc64a0346b72e1325","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/3140246e36f7375011501d4dc64a0346b72e1325","commitMessage":"Merge branch 'various-bug-fixes-for-sync-url' into sync-url\n\n# Conflicts:\n#\te2e/ui-tests/pages/alerts/view-triggers-row.ui.component.ts","commitDate":1564899919000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/1812912?v=4","committerName":"Alon Mizrahi"},{"id":549141,"gitCommitSha":"c740896316cef837d782fbf2cfce3e49527ec7ff","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/c740896316cef837d782fbf2cfce3e49527ec7ff","commitMessage":"So much good","commitDate":1564899517000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/1812912?v=4","committerName":"Alon Mizrahi"},{"id":549086,"gitCommitSha":"31add97363554e49187e7becf6c6e5b9c5ca1c73","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/31add97363554e49187e7becf6c6e5b9c5ca1c73","commitMessage":"Route all services endpoints to jersey","commitDate":1564889458000,"committerAvatarUrl":"https://avatars0.githubusercontent.com/u/3153426?v=4","committerName":"Asaf Alima"},{"id":549093,"gitCommitSha":"201e2fc119e78717d46c4fe04163f7b33c9a79cd","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/201e2fc119e78717d46c4fe04163f7b33c9a79cd","commitMessage":"Return!","commitDate":1564862483000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/1812912?v=4","committerName":"Alon Mizrahi"},{"id":549079,"gitCommitSha":"333e8db5a1e08208597b6df305800fa9999b1b92","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/333e8db5a1e08208597b6df305800fa9999b1b92","commitMessage":"Only on differenet mode value","commitDate":1564862263000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/1812912?v=4","committerName":"Alon Mizrahi"},{"id":549074,"gitCommitSha":"a4e5dd5655783fe409236d1ee646021814290e59","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/a4e5dd5655783fe409236d1ee646021814290e59","commitMessage":"No impl","commitDate":1564853085000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/1812912?v=4","committerName":"Alon Mizrahi"},{"id":549067,"gitCommitSha":"9463e3ec9043383d38e55a0d190985349313bc88","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/9463e3ec9043383d38e55a0d190985349313bc88","commitMessage":"Dashboard apps","commitDate":1564850635000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/1812912?v=4","committerName":"Alon Mizrahi"},{"id":549980,"gitCommitSha":"77e37cbd662f864e24e7719e926f546dc7230ce0","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/77e37cbd662f864e24e7719e926f546dc7230ce0","commitMessage":"CR fixes","commitDate":1564848614000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/11076023?v=4","committerName":"nofar9792"},{"id":549058,"gitCommitSha":"c07f7ca4da32c5ae3a952df65122ccf74a85c274","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/c07f7ca4da32c5ae3a952df65122ccf74a85c274","commitMessage":"Better Share","commitDate":1564835636000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/1812912?v=4","committerName":"Alon Mizrahi"},{"id":549051,"gitCommitSha":"f8113ac6b1b2e6c62c9204b4ba11a4ac8f26e2be","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/f8113ac6b1b2e6c62c9204b4ba11a4ac8f26e2be","commitMessage":"Count the right thing","commitDate":1564831558000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/1812912?v=4","committerName":"Alon Mizrahi"},{"id":549043,"gitCommitSha":"7bee5466ea44a5f8780829982b5447d39d20d13c","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/7bee5466ea44a5f8780829982b5447d39d20d13c","commitMessage":"Comment","commitDate":1564831458000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/8701610?v=4","committerName":"Gal Angel"},{"id":549039,"gitCommitSha":"41cd63d6da97fa259a9fa2712a9be03ff965420d","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/41cd63d6da97fa259a9fa2712a9be03ff965420d","commitMessage":"Oops","commitDate":1564828596000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/1812912?v=4","committerName":"Alon Mizrahi"},{"id":549027,"gitCommitSha":"949ccc9b68e320b3b18b0719946591e2e3ba1f82","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/949ccc9b68e320b3b18b0719946591e2e3ba1f82","commitMessage":"Refactor trigger row","commitDate":1564828157000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/1812912?v=4","committerName":"Alon Mizrahi"},{"id":549029,"gitCommitSha":"31801057a5ca8fe9465bd721e4d7eb069afde63d","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/31801057a5ca8fe9465bd721e4d7eb069afde63d","commitMessage":"Merge branch 'DEV-14543-Scheduled-Reports-Table-Tooltips' of github.com:logzio/gaia-hermes-ws into DEV-14543-Scheduled-Reports-Table-Tooltips","commitDate":1564828118000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/8701610?v=4","committerName":"Gal Angel"},{"id":549016,"gitCommitSha":"b307b1c0fd4e9d8e321d33e1694961b0a3eefdc5","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/b307b1c0fd4e9d8e321d33e1694961b0a3eefdc5","commitMessage":"Ignore outer redirects","commitDate":1564826062000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/1812912?v=4","committerName":"Alon Mizrahi"},{"id":549008,"gitCommitSha":"ef92bd5d58ad9fd866b164074360b2310b0ad4de","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/ef92bd5d58ad9fd866b164074360b2310b0ad4de","commitMessage":"Wait for page laod","commitDate":1564812973000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/1812912?v=4","committerName":"Alon Mizrahi"},{"id":548883,"gitCommitSha":"6209545590abfd6853100c3eaf871240e3c6308a","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/6209545590abfd6853100c3eaf871240e3c6308a","commitMessage":"Temporary rules fix","commitDate":1564768229000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/1812912?v=4","committerName":"Alon Mizrahi"},{"id":548877,"gitCommitSha":"eada478b412446dc913d0b9e74ce623d0358dfa4","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/eada478b412446dc913d0b9e74ce623d0358dfa4","commitMessage":"Damn!","commitDate":1564757219000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/1812912?v=4","committerName":"Alon Mizrahi"},{"id":548865,"gitCommitSha":"7bf84f56b8c4938dba00474bc9701a3742a96ede","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/7bf84f56b8c4938dba00474bc9701a3742a96ede","commitMessage":"OMG!","commitDate":1564692000000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/1812912?v=4","committerName":"Alon Mizrahi"},{"id":548780,"gitCommitSha":"e7bfe20a3b8d98525c414067ea5826469f77ca9f","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/e7bfe20a3b8d98525c414067ea5826469f77ca9f","commitMessage":"Test madhim!","commitDate":1564688900000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/1812912?v=4","committerName":"Alon Mizrahi"},{"id":548772,"gitCommitSha":"7be77f41c0589d059a25d71a15f5fd1b31808729","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/7be77f41c0589d059a25d71a15f5fd1b31808729","commitMessage":"Step by step its a come","commitDate":1564687796000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/1812912?v=4","committerName":"Alon Mizrahi"},{"id":548763,"gitCommitSha":"0c58f6444d5116dbe4a2a02784b0ef76dfaba29e","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/0c58f6444d5116dbe4a2a02784b0ef76dfaba29e","commitMessage":"DEV-12868 Add Limit Exceeded status to request status (#3137)","commitDate":1564682867000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/13015784?v=4","committerName":"Yoni Naim"},{"id":548757,"gitCommitSha":"f89b223fb9a6671d5ad829344cce2a41c04858d5","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/f89b223fb9a6671d5ad829344cce2a41c04858d5","commitMessage":"Add status to request status","commitDate":1564681702000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/13015784?v=4","committerName":"Yoni Naim"},{"id":548636,"gitCommitSha":"6239a9992e3578470af0244ddf870c20cbc9ef67","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/6239a9992e3578470af0244ddf870c20cbc9ef67","commitMessage":"Ojs","commitDate":1564670565000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/1812912?v=4","committerName":"Alon Mizrahi"},{"id":548550,"gitCommitSha":"dd7b165734086bf6f435744b51742ae3ad7935fd","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/dd7b165734086bf6f435744b51742ae3ad7935fd","commitMessage":"Init","commitDate":1564667680000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/8701610?v=4","committerName":"Gal Angel"},{"id":548372,"gitCommitSha":"e4ace13884640305f8664067ac9f297cb1f9e689","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/e4ace13884640305f8664067ac9f297cb1f9e689","commitMessage":"Should try to create iam settings","commitDate":1564664676000,"committerAvatarUrl":"https://avatars1.githubusercontent.com/u/32754747?v=4","committerName":"Tzur Ziv"},{"id":548384,"gitCommitSha":"141213139a9607e8109a7aff0052f5a33ce3ba65","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/141213139a9607e8109a7aff0052f5a33ce3ba65","commitMessage":"Merge from master","commitDate":1564664576000,"committerAvatarUrl":"https://avatars0.githubusercontent.com/u/17049991?v=4","committerName":"Itai Sinai"},{"id":548377,"gitCommitSha":"660f91a58eaefb047713cf817da8f51664430484","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/660f91a58eaefb047713cf817da8f51664430484","commitMessage":"DEV-14558 Schedule model create (#3120)\n\n* Fields in Reports completed\r\n\r\n* Add missing initial values\r\n\r\n* CR fixes\r\n\r\n* Revert width change\r\n\r\n* Changes due to CR\r\n\r\n* Add action flow create call\r\n\r\n* Updates\r\n\r\n* Add endpoint and timezone\r\n\r\n* Revert unnecessary file change\r\n\r\n* Cr fixes","commitDate":1564663545000,"committerAvatarUrl":"https://avatars0.githubusercontent.com/u/17049991?v=4","committerName":"Itai Sinai"},{"id":548359,"gitCommitSha":"a29eae8278a9a5db2b8fa7af3ccdcc6b3fd9c33a","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/a29eae8278a9a5db2b8fa7af3ccdcc6b3fd9c33a","commitMessage":"Texts","commitDate":1564663142000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/8701610?v=4","committerName":"Gal Angel"},{"id":548351,"gitCommitSha":"d79aa56c9660a5c2c08b7472f53148691e4ef778","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/d79aa56c9660a5c2c08b7472f53148691e4ef778","commitMessage":"Merge with master","commitDate":1564662574000,"committerAvatarUrl":"https://avatars1.githubusercontent.com/u/32754747?v=4","committerName":"Tzur Ziv"},{"id":548228,"gitCommitSha":"1df60d558221ee744ae341e7bd19cc6c188af876","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/1df60d558221ee744ae341e7bd19cc6c188af876","commitMessage":"Merge branch 'master' of github.com:logzio/gaia-hermes-ws into DEV-14558-schedule-model-create","commitDate":1564660496000,"committerAvatarUrl":"https://avatars0.githubusercontent.com/u/17049991?v=4","committerName":"Itai Sinai"},{"id":548067,"gitCommitSha":"916e06b982a7c36cf8965d343a86e7ec57641b4a","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/916e06b982a7c36cf8965d343a86e7ec57641b4a","commitMessage":"Fix","commitDate":1564658877000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/11076023?v=4","committerName":"nofar9792"},{"id":547974,"gitCommitSha":"faf008bb99b6f986cdfb0d9bc6cf7e9acb3e64a8","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/faf008bb99b6f986cdfb0d9bc6cf7e9acb3e64a8","commitMessage":"Fix","commitDate":1564656038000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/11076023?v=4","committerName":"nofar9792"},{"id":547978,"gitCommitSha":"b5f2459a42704bb7f2c439cc17df74bc7fbc3d3b","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/b5f2459a42704bb7f2c439cc17df74bc7fbc3d3b","commitMessage":"DEV-8282 Sneaky elastic (#3131)\n\n* Docker networks\r\n\r\n* Docker networks\r\n\r\n* Docker network\r\n\r\n* Docker network\r\n\r\n* Docker networks\r\n\r\n* Docker networks\r\n\r\n* Docker networks","commitDate":1564655774000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/8585548?v=4","committerName":"nir winkler"},{"id":547881,"gitCommitSha":"79a4ed703765bc60286652f6baf50ede2e4a51e1","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/79a4ed703765bc60286652f6baf50ede2e4a51e1","commitMessage":"Update app-frontend/src/ui/components/ScheduledReports/Table/table-columns.tsx\n\nCo-Authored-By: Alon Mizrahi <alon@logz.io>","commitDate":1564653910000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/8701610?v=4","committerName":"Gal Angel"},{"id":547875,"gitCommitSha":"08b32994f3e318905496d343619b8a95f0f8c023","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/08b32994f3e318905496d343619b8a95f0f8c023","commitMessage":"Docker networks","commitDate":1564653607000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/8585548?v=4","committerName":"nir winkler"},{"id":547711,"gitCommitSha":"20ad8f619906a14863c5445d1963c264df6974bb","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/20ad8f619906a14863c5445d1963c264df6974bb","commitMessage":"CR fixes","commitDate":1564652884000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/11076023?v=4","committerName":"nofar9792"},{"id":547704,"gitCommitSha":"8c88900df6d488ec4cec4a5f61175b02f6c2a997","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/8c88900df6d488ec4cec4a5f61175b02f6c2a997","commitMessage":"Docker networks","commitDate":1564652185000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/8585548?v=4","committerName":"nir winkler"},{"id":547691,"gitCommitSha":"12e0df80101e443f5c501e1cb7f66a96ebcf0a34","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/12e0df80101e443f5c501e1cb7f66a96ebcf0a34","commitMessage":"Add Error handling to generate yml func","commitDate":1564650820000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/12782945?v=4","committerName":"sitbubu"},{"id":547698,"gitCommitSha":"f6585063a7f2835afbc3fdfb901ca3265c4409d6","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/f6585063a7f2835afbc3fdfb901ca3265c4409d6","commitMessage":"Attempt to correctly capture all errors in pipeline even when spec is deeply nested","commitDate":1564650729000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/22911480?v=4","committerName":"ojamui"},{"id":547681,"gitCommitSha":"acdea7727d307fabcabc2424e36b51873fefc0db","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/acdea7727d307fabcabc2424e36b51873fefc0db","commitMessage":"DEV-14095 Transform shipper button to modal (#2951)\n\n* Build basic designed modal and shipperButton - no logic, no aditional fields and no clone section\r\n\r\n* add support in logType option\r\n\r\n* Add condition fields ui\r\n\r\n* Separate modal from formik usage\r\n\r\n* Add option to add more then one logType\r\n\r\n* Add margin bottom to labels + remove And word if first fieldCondition\r\n\r\n* Made ui adjustments, support our components and text changes\r\n\r\n* Changed file names to be based on folder path\r\n\r\n* Changed form to be function instead of class component\r\n\r\n* Move logTypeItem outside form\r\n\r\n* Wrapped form components with FastField in order to avoid re render of all form on change + reveal form and field prop inside inner component + move os outside arr\r\n\r\n* Move path placeholder to outer function\r\n\r\n* Changed ShipperButton to FilebeatConfWiz name\r\n\r\n* changed Page to LogzioThemeProvider to wrap btn\r\n\r\n* Insert title inside modal instead of sending it as prop\r\n\r\n* Add form validations\r\n\r\n* Add logType validation + add cancel confirm btns without logic\r\n\r\n* Add action in order to fetch basic yaml conf\r\n\r\n* Implement yaml render all values - exept token, listener which require different action creation\r\n\r\n* Add user auth and listener info support using angular service\r\n\r\n* Add report analytic service\r\n\r\n* Made Hr separator between sections and not between additional info\r\n\r\n* Changed container empty state to regular container + move form functions into form-config\r\n\r\n* called initialFormVal as getInitailFormVal\r\n\r\n* Remove dist test-selectors from git tracking\r\n\r\n* Set log-shippers-service using export functions, no class is needed\r\n\r\n* Download yml file using file-saver module instead href logic\r\n\r\n* Fix generateYamlLogTypeSection typo\r\n\r\n* Move error setters inside outer functions\r\n\r\n* Return data of yml functions onlly on success\r\n\r\n*  changed get angular services recieved with promiseAll\r\n\r\n* Move getUserData logic outside handleSubmit\r\n\r\n* Set renderLogTypes inside function outside component + move osUrls and tooltip text to form coonfig\r\n\r\n* Move build yaml logic to supperate file + simplify its logic\r\n\r\n* Remove true from inline prop since default\r\n\r\n* Rename var and methods fit role\r\n\r\n* Remove text empty state and set style + remove align left from container\r\n\r\n* Remove multiline regex key\r\n\r\n* Changed action flow filebit reterned value to be string\r\n\r\n* remove extra dist path from styleguide gitignore + changed logtypeselct state error to be apiError inside component\r\n\r\n* Move additional field title to be outside additional fields component\r\n\r\n* Move getUserData logic to services instead sit inside component file\r\n\r\n* Move handleSubmit logic to actions-flow\r\n\r\n* changed fieldCondition error supperate for each input\r\n\r\n* Remove angular-file-saver support and used file-saver instead, changed csv service accordingly and made file-saver service independent service\r\n\r\n* Adjust csv tests to new structure of file-saver\r\n\r\n* Changed event.target.name to field.name in radioSelect\r\n\r\n* Remove comments from csv.service\r\n\r\n* Usev build-yaml in action flow using import instead passing callback\r\n\r\n* Seperate logzFilSaver service support both angular and react using 2 different functions\r\n\r\n* Remove styling from Text component tags\r\n\r\n* changed titles to be from Modal type\r\n\r\n* Made interface for form values in order pass in function\r\n\r\n* DEV-14095 Add feature flag support (#3055)\r\n\r\n* Add feature flag support for filebeatcomponent using both angular condition for selection and on react component for rendering\r\n\r\n* Allow option to set component using os flag in order to set it on 2 different location on page\r\n\r\n* Set featureFlag using enum at angular side\r\n\r\n* Made enum with capital + move themeProvider inside container + minor syntax changes\r\n\r\n* Move store to datasource controller in order to check feature flag instead inside component\r\n\r\n* Set reactToAngular component using pass param instead code duplicate\r\n\r\n* Set os type as enum\r\n\r\n* Set enum on action-flow + set flag for show modal without modal dependency + change findIndex without lodash\r\n\r\n* Rebased modal branch leftovers\r\n\r\n* Set featureFlag use old system since still needs to verify store async with angular + changed to IAMS3 from IamS3\r\n\r\n* Set windows/linux with right upper/Lower cases and use value to check instead label\r\n\r\n* Move IFormValues to config + get actionflow os from config\r\n\r\n* Set Os and Format enums uder enums + changed Os to OperatingSystem\r\n\r\n* Changed hardcoded values to use enums\r\n\r\n* Set adjustments after rebasing master","commitDate":1564648908000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/12782945?v=4","committerName":"sitbubu"},{"id":547663,"gitCommitSha":"36eba82836376a7387e96fcea7d14e37e25eac85","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/36eba82836376a7387e96fcea7d14e37e25eac85","commitMessage":"Docker networks","commitDate":1564648641000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/8585548?v=4","committerName":"nir winkler"},{"id":547678,"gitCommitSha":"11946f2bcf67f2993418f1c1857bda59ffacb02f","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/11946f2bcf67f2993418f1c1857bda59ffacb02f","commitMessage":"DEV-14710 Add new tour (#3080)\n\n* Add new tour; Change tours activated by Welcome Center Modal\r\n\r\n* CR Fix: Refactor tour navigation method into tour config\r\n\r\n* Remove tours from local env; keep in Staging env\r\n\r\n* Remove tours from staging env\r\n\r\n* Return Tours to staging for testing purposes\r\n\r\n* Change tour token\r\n\r\n* Use built in context of button","commitDate":1564648608000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/22911480?v=4","committerName":"ojamui"},{"id":547607,"gitCommitSha":"c4782cdd4089eade9b1feaefe0dae525290687e7","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/c4782cdd4089eade9b1feaefe0dae525290687e7","commitMessage":"Revert tab naming changes","commitDate":1564646725000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/22911480?v=4","committerName":"ojamui"},{"id":547562,"gitCommitSha":"0c4eee6cda6ce7caea04adc2d3c09784ebee36c4","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/0c4eee6cda6ce7caea04adc2d3c09784ebee36c4","commitMessage":"Use built in context of button","commitDate":1564646192000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/22911480?v=4","committerName":"ojamui"},{"id":547669,"gitCommitSha":"2fdf2b65c986debcb25c8ff712dd992d12671fff","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/2fdf2b65c986debcb25c8ff712dd992d12671fff","commitMessage":"Add Error handling to generate yml func","commitDate":1564643812000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/12782945?v=4","committerName":"sitbubu"},{"id":547513,"gitCommitSha":"ecc4da06ea6db617745f4e979dc3b3b219fb6566","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/ecc4da06ea6db617745f4e979dc3b3b219fb6566","commitMessage":"Merge branch 'master' into DEV-14097-Convert-export-web-app-ng-injector-provider-v1\n\n# Conflicts:\n#\tapp-frontend/src/store/auth/auth.action-flows.ts\n#\tapp-frontend/src/ui/components/LogShipping/BucketSettings/bucket-settings.service.ts","commitDate":1564643373000,"committerAvatarUrl":"https://avatars0.githubusercontent.com/u/38426461?v=4","committerName":"ifatregev"},{"id":547392,"gitCommitSha":"632865809de42ee0e2956e7eabd9007f8225eb8e","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/632865809de42ee0e2956e7eabd9007f8225eb8e","commitMessage":"Step by step its a come","commitDate":1564638364000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/1812912?v=4","committerName":"Alon Mizrahi"},{"id":547343,"gitCommitSha":"7f2c8f2127d26aaf13986a9fa63ab0fb28410993","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/7f2c8f2127d26aaf13986a9fa63ab0fb28410993","commitMessage":"Feature flag tests","commitDate":1564603566000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/1812912?v=4","committerName":"Alon Mizrahi"},{"id":547332,"gitCommitSha":"3e5d184eadd829e97450dccf7e1b29094a3bb5c3","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/3e5d184eadd829e97450dccf7e1b29094a3bb5c3","commitMessage":"Should Sync?","commitDate":1564600838000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/1812912?v=4","committerName":"Alon Mizrahi"},{"id":547287,"gitCommitSha":"2348b3233776909d0ac31333a3651e68a6c04573","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/2348b3233776909d0ac31333a3651e68a6c04573","commitMessage":"Exactly","commitDate":1564596003000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/1812912?v=4","committerName":"Alon Mizrahi"},{"id":547200,"gitCommitSha":"cf39fe482acd7b0c128057129aef45e1238a4918","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/cf39fe482acd7b0c128057129aef45e1238a4918","commitMessage":"Add appQueryParams","commitDate":1564588195000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/1812912?v=4","committerName":"Alon Mizrahi"},{"id":547889,"gitCommitSha":"7be35a3daa91061e157cf498adb633a42aefafb2","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/7be35a3daa91061e157cf498adb633a42aefafb2","commitMessage":"Separate Endpoints to 2 components","commitDate":1564588173000,"committerAvatarUrl":"https://avatars0.githubusercontent.com/u/17049991?v=4","committerName":"Itai Sinai"},{"id":547069,"gitCommitSha":"bafded5c52a1172fb694ef5ed96d6d6df6b6805f","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/bafded5c52a1172fb694ef5ed96d6d6df6b6805f","commitMessage":"Endpoints and responsive fix","commitDate":1564584802000,"committerAvatarUrl":"https://avatars0.githubusercontent.com/u/17049991?v=4","committerName":"Itai Sinai"},{"id":547023,"gitCommitSha":"b0ef6301cd9cc3e071c31eee1d35d0fae554cd1a","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/b0ef6301cd9cc3e071c31eee1d35d0fae554cd1a","commitMessage":"Hmm","commitDate":1564584787000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/8701610?v=4","committerName":"Gal Angel"},{"id":547078,"gitCommitSha":"fb914c8f665c82bda00f5ad22463661532da30bd","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/fb914c8f665c82bda00f5ad22463661532da30bd","commitMessage":"Fix optimizers ui test","commitDate":1564584593000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/11076023?v=4","committerName":"nofar9792"},{"id":546899,"gitCommitSha":"6d19c2bfd8ada8872b002d12224b6778ec70ee1b","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/6d19c2bfd8ada8872b002d12224b6778ec70ee1b","commitMessage":"Set adjustments after rebasing master","commitDate":1564583138000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/12782945?v=4","committerName":"sitbubu"},{"id":546818,"gitCommitSha":"8fadcf015dbd1ce139b11a9be1089b085965cd40","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/8fadcf015dbd1ce139b11a9be1089b085965cd40","commitMessage":"DEV-14378 Create aggregator select (#3112)\n\n* Add aggregator select\r\n\r\n* Few changes\r\n\r\n* Remove comments\r\n\r\n* Revert few things\r\n\r\n* Remove export\r\n\r\n* CR fixes","commitDate":1564580644000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/11076023?v=4","committerName":"nofar9792"},{"id":546653,"gitCommitSha":"241e1a795fc04e9b684bc842de010b93a35ea649","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/241e1a795fc04e9b684bc842de010b93a35ea649","commitMessage":"CR fixes","commitDate":1564579727000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/11076023?v=4","committerName":"nofar9792"},{"id":546644,"gitCommitSha":"7fb3730c0a89d7014eaa01fb3b4b5d43cc39bf05","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/7fb3730c0a89d7014eaa01fb3b4b5d43cc39bf05","commitMessage":"Merge branch 'master' into grafana-pure","commitDate":1564578636000,"committerAvatarUrl":"https://avatars1.githubusercontent.com/u/10553323?v=4","committerName":"Kfir Shainholtz"},{"id":546559,"gitCommitSha":"a137ec28ac2da7dc4b16dc9019d137b0c56696c5","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/a137ec28ac2da7dc4b16dc9019d137b0c56696c5","commitMessage":"Merge from Master","commitDate":1564577584000,"committerAvatarUrl":"https://avatars0.githubusercontent.com/u/17049991?v=4","committerName":"Itai Sinai"},{"id":546514,"gitCommitSha":"5bc2d7b5bd45efbe25386c92ff75daa1273fe33d","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/5bc2d7b5bd45efbe25386c92ff75daa1273fe33d","commitMessage":"Cr fixes","commitDate":1564577406000,"committerAvatarUrl":"https://avatars0.githubusercontent.com/u/17049991?v=4","committerName":"Itai Sinai"},{"id":546505,"gitCommitSha":"c77864912c6bdc50ffdce3e6546e3a24f4e21b9b","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/c77864912c6bdc50ffdce3e6546e3a24f4e21b9b","commitMessage":"Remove recompose usage from Menu.story","commitDate":1564576742000,"committerAvatarUrl":"https://avatars0.githubusercontent.com/u/38426461?v=4","committerName":"ifatregev"},{"id":546498,"gitCommitSha":"5fde8806d59fa970fc4904c65b8539ec1db434a4","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/5fde8806d59fa970fc4904c65b8539ec1db434a4","commitMessage":"Merge from msater and fix error handling service unit tests","commitDate":1564576221000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/13015784?v=4","committerName":"Yoni Naim"},{"id":546416,"gitCommitSha":"24ef6b2386c20b7dc08090f3abd9312cc8c41f32","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/24ef6b2386c20b7dc08090f3abd9312cc8c41f32","commitMessage":"Remove recompose usage from Popover.story","commitDate":1564575089000,"committerAvatarUrl":"https://avatars0.githubusercontent.com/u/38426461?v=4","committerName":"ifatregev"},{"id":546360,"gitCommitSha":"03155b2feaad8c336e7d778525433b227930fbd4","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/03155b2feaad8c336e7d778525433b227930fbd4","commitMessage":"Merge branch 'DEV-14889-Render-Popper-Above-modals' of github.com:logzio/gaia-hermes-ws into DEV-14901-poppah","commitDate":1564573763000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/8065975?v=4","committerName":"Amir Tugendhaft"},{"id":546314,"gitCommitSha":"7fad649016703c9a6efd1c4b3f4b028887f99af6","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/7fad649016703c9a6efd1c4b3f4b028887f99af6","commitMessage":"CR fixes","commitDate":1564573165000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/11076023?v=4","committerName":"nofar9792"},{"id":546296,"gitCommitSha":"4e262902b270bdf57ef734a843e11a1debe16bbc","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/4e262902b270bdf57ef734a843e11a1debe16bbc","commitMessage":"Merge branch 'master' into DEV-14710-Add-new-value-tour","commitDate":1564572856000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/22911480?v=4","committerName":"ojamui"},{"id":546305,"gitCommitSha":"80971d74957500d9a0ed170f031d6978fc9367d4","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/80971d74957500d9a0ed170f031d6978fc9367d4","commitMessage":"DEV-14576 Form Fields (#3072)\n\n* Fields in Reports completed\r\n\r\n* Add missing initial values\r\n\r\n* CR fixes\r\n\r\n* Revert width change\r\n\r\n* Changes due to CR","commitDate":1564572187000,"committerAvatarUrl":"https://avatars0.githubusercontent.com/u/17049991?v=4","committerName":"Itai Sinai"},{"id":546167,"gitCommitSha":"31a56ae42c790949bcaaf58ae029291a0d9f26bc","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/31a56ae42c790949bcaaf58ae029291a0d9f26bc","commitMessage":"DEV-14889-Render-Popper-Above-Modal","commitDate":1564568778000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/12447231?v=4","committerName":"Eden Turgeman"},{"id":546043,"gitCommitSha":"3d000e3be2d2cf40f599bf2a73834d8cef4cc21f","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/3d000e3be2d2cf40f599bf2a73834d8cef4cc21f","commitMessage":"Fix CR","commitDate":1564564285000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/8065975?v=4","committerName":"Amir Tugendhaft"},{"id":546037,"gitCommitSha":"03a21cb54c7673ea2d62f04a7ee8446bf9f5d883","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/03a21cb54c7673ea2d62f04a7ee8446bf9f5d883","commitMessage":"CR fixes","commitDate":1564564086000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/8065975?v=4","committerName":"Amir Tugendhaft"},{"id":545874,"gitCommitSha":"970d6523ca4aee24324fb9212c3f440678dd4a97","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/970d6523ca4aee24324fb9212c3f440678dd4a97","commitMessage":"DEV-14539 Create tag container with ellipsis (#3093)","commitDate":1564561563000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/8701610?v=4","committerName":"Gal Angel"},{"id":545864,"gitCommitSha":"ef2c50090ddf919d804ff8cd6e520be5f36d6be9","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/ef2c50090ddf919d804ff8cd6e520be5f36d6be9","commitMessage":"Merge branch 'master' into DEV-14710-Add-new-value-tour","commitDate":1564561285000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/22911480?v=4","committerName":"ojamui"},{"id":545858,"gitCommitSha":"b4f1ddfdb59f18bec1610e0825532c2a0dba859d","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/b4f1ddfdb59f18bec1610e0825532c2a0dba859d","commitMessage":"DEV-14591 Add IAM Role authentication to all Fetchers (#3070)\n\n* Add Generic IAM\r\n\r\n* Add IAM variant to generic bucket\r\n\r\n* Add S3 IAM variant\r\n\r\n* Move shared code to common file\r\n\r\n* External Id should be borderless\r\n\r\n* Add is submitting\r\n\r\n* Pass fake id manually\r\n\r\n* Add fakeId param to saveBucket method\r\n\r\n* Treat different bucket types as the same when saved\r\n\r\n* Update bucket creation flow\r\n\r\n* Replace existing object with new settings, not the server response\r\n\r\n* After a successful save, revert secret key back to ***\r\n\r\n* Handle re rendering on delete/save\r\n\r\n* Change isActive file\r\n\r\n* Add toggle for edit functionality\r\n\r\n* ActiveToggle should have default behavior\r\n\r\n* Remove cloudtrail specific logic for toggling active\r\n\r\n* Add configuration for iam role\r\n\r\n* Update tests for iam role type authentication\r\n\r\n* Remove console log\r\n\r\n* Make animation appear when Toggling for quick edit\r\n\r\n* Remove clutter\r\n\r\n* remove isLoading->isSubmitting\r\n\r\n* Apply PR comments\r\n\r\n* Get logzAccountId for bucketType\r\n\r\n* Remove box shadow from card\r\n\r\n* Cloudtrail toggled will now send update request\r\n\r\n* Add region on newBucket\r\n\r\n* Add logtype to request\r\n\r\n* Dont lost reference to array\r\n\r\n* Apply PR comments\r\n\r\n* React.Fragment should be <>\r\n\r\n* Fix fetcher tests\r\n\r\n* Update elb tests to iam\r\n\r\n* Fix s3 tests to arn\r\n\r\n* Remove update tests from fetchers\r\n\r\n* Fix s3 settings e2e\r\n\r\n* Fix s3 bucket selector","commitDate":1564560047000,"committerAvatarUrl":"https://avatars1.githubusercontent.com/u/32754747?v=4","committerName":"Tzur Ziv"},{"id":545770,"gitCommitSha":"472dd85ea110c9707c57a0ac2297144088dc8b35","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/472dd85ea110c9707c57a0ac2297144088dc8b35","commitMessage":"Handle destroyed controller","commitDate":1564559783000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/1812912?v=4","committerName":"Alon Mizrahi"},{"id":545764,"gitCommitSha":"273a84cfba8c32c9e7eefe412e2fda289ef707a1","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/273a84cfba8c32c9e7eefe412e2fda289ef707a1","commitMessage":"Snap file","commitDate":1564559592000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/8701610?v=4","committerName":"Gal Angel"},{"id":545755,"gitCommitSha":"ad16cf42c885d2d36fccf87dac1ec0fafabbed1a","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/ad16cf42c885d2d36fccf87dac1ec0fafabbed1a","commitMessage":"Fix s3 bucket selector","commitDate":1564559019000,"committerAvatarUrl":"https://avatars1.githubusercontent.com/u/32754747?v=4","committerName":"Tzur Ziv"},{"id":545753,"gitCommitSha":"41e5402a5c518831be9a30111c8db5d05b7325f3","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/41e5402a5c518831be9a30111c8db5d05b7325f3","commitMessage":"DEV-14095 Add feature flag support (#3055)\n\n* Add feature flag support for filebeatcomponent using both angular condition for selection and on react component for rendering\r\n\r\n* Allow option to set component using os flag in order to set it on 2 different location on page\r\n\r\n* Set featureFlag using enum at angular side\r\n\r\n* Made enum with capital + move themeProvider inside container + minor syntax changes\r\n\r\n* Move store to datasource controller in order to check feature flag instead inside component\r\n\r\n* Set reactToAngular component using pass param instead code duplicate\r\n\r\n* Set os type as enum\r\n\r\n* Set enum on action-flow + set flag for show modal without modal dependency + change findIndex without lodash\r\n\r\n* Rebased modal branch leftovers\r\n\r\n* Set featureFlag use old system since still needs to verify store async with angular + changed to IAMS3 from IamS3\r\n\r\n* Set windows/linux with right upper/Lower cases and use value to check instead label\r\n\r\n* Move IFormValues to config + get actionflow os from config\r\n\r\n* Set Os and Format enums uder enums + changed Os to OperatingSystem\r\n\r\n* Changed hardcoded values to use enums","commitDate":1564558664000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/12782945?v=4","committerName":"sitbubu"},{"id":545744,"gitCommitSha":"087406ddb1f966425c907264f8b3f08fa9c63849","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/087406ddb1f966425c907264f8b3f08fa9c63849","commitMessage":"Font","commitDate":1564558024000,"committerAvatarUrl":"https://avatars2.githubusercontent.com/u/8701610?v=4","committerName":"Gal Angel"},{"id":545738,"gitCommitSha":"3722c2df28ab3fcb02e60eaa97b63c1e9d58691e","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/3722c2df28ab3fcb02e60eaa97b63c1e9d58691e","commitMessage":"Changed hardcoded values to use enums","commitDate":1564556487000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/12782945?v=4","committerName":"sitbubu"},{"id":545734,"gitCommitSha":"a443956676cb13031faebec167e16dd2bd3ac42a","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/a443956676cb13031faebec167e16dd2bd3ac42a","commitMessage":"Fix s3 settings e2e","commitDate":1564556381000,"committerAvatarUrl":"https://avatars1.githubusercontent.com/u/32754747?v=4","committerName":"Tzur Ziv"},{"id":545608,"gitCommitSha":"30c6b5f7ef6a00a817bbb817664f6d6cb8f619e5","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/30c6b5f7ef6a00a817bbb817664f6d6cb8f619e5","commitMessage":"Remove update tests from fetchers","commitDate":1564553958000,"committerAvatarUrl":"https://avatars1.githubusercontent.com/u/32754747?v=4","committerName":"Tzur Ziv"},{"id":545561,"gitCommitSha":"0fadc837bf6a8d45b0369373522b8a7cdc6b1aec","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/0fadc837bf6a8d45b0369373522b8a7cdc6b1aec","commitMessage":"Fix s3 tests to arn","commitDate":1564553773000,"committerAvatarUrl":"https://avatars1.githubusercontent.com/u/32754747?v=4","committerName":"Tzur Ziv"},{"id":545556,"gitCommitSha":"a52a58edc8deb3967dce4f0b3bb172705dea1a1c","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/a52a58edc8deb3967dce4f0b3bb172705dea1a1c","commitMessage":"Update elb tests to iam","commitDate":1564553624000,"committerAvatarUrl":"https://avatars1.githubusercontent.com/u/32754747?v=4","committerName":"Tzur Ziv"},{"id":545547,"gitCommitSha":"3384c9136301c380366b2ccd155f856cfc31ab7f","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/3384c9136301c380366b2ccd155f856cfc31ab7f","commitMessage":"Flaky check and await test","commitDate":1564551955000,"committerAvatarUrl":"https://avatars3.githubusercontent.com/u/1812912?v=4","committerName":"Alon Mizrahi"},{"id":545267,"gitCommitSha":"27f7c82b08ae080ec953391541c061d2f84f2dfc","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/27f7c82b08ae080ec953391541c061d2f84f2dfc","commitMessage":"Fix fetcher tests","commitDate":1564515661000,"committerAvatarUrl":"https://avatars1.githubusercontent.com/u/32754747?v=4","committerName":"Tzur Ziv"},{"id":545259,"gitCommitSha":"9896b3587f6b3d3586e5fa917057767db1e283be","githubRepositoryUrl":"https://github.com/logzio/gaia-hermes-ws","serviceId":3,"commitUrl":"https://github.com/logzio/gaia-hermes-ws/commit/9896b3587f6b3d3586e5fa917057767db1e283be","commitMessage":"React.Fragment should be <>","commitDate":1564513553000,"committerAvatarUrl":"https://avatars1.githubusercontent.com/u/32754747?v=4","committerName":"Tzur Ziv"}];

